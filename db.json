{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","path":"js/jquery.autocomplete.min.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/3-hexo/_config.yml","hash":"09a78da06ed706c14915fe8b11b0da1ccff7a854","modified":1584038464874},{"_id":"source/_posts/GOT_S8E3.md","hash":"069d870181a38494686e4c7b9dd83302bf088749","modified":1584038464869},{"_id":"source/_posts/Lihongzhang.md","hash":"b87e1dac34ce86455ce3d78616f0c206810ab095","modified":1583303529727},{"_id":"source/_posts/binary_tree.md","hash":"4093678dc5c0fab640b00780b3ceb318276383b6","modified":1584038464870},{"_id":"source/_posts/git.md","hash":"12dcd362533b24f4211cc24a42b12182ba1bd0b4","modified":1584038464871},{"_id":"source/_posts/latex.md","hash":"12463db1abc6f2e40fae6b5ee5f6a42448cae248","modified":1584038464871},{"_id":"source/_posts/the_change.md","hash":"311d04582c2c78642d3d4bc8d2b297ca2a6ec06f","modified":1583140435471},{"_id":"source/_posts/the_rain_and_the_shain.md","hash":"98a9c2f3859ac5421b15429b71e700ede34b6062","modified":1583140446702},{"_id":"themes/3-hexo/layout/index.ejs","hash":"99aecf628b29c3345ddf819fe3d26e88788600ea","modified":1584038464884},{"_id":"themes/3-hexo/layout/indexs.md","hash":"ef3106f00fa06cc10895f8dae48afe5b226efbe7","modified":1584038464885},{"_id":"themes/3-hexo/layout/post.ejs","hash":"aeda285031ba8d4e94225e82b364bcf5f79fce1d","modified":1584038464885},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1583074843760},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"0ccec30a2a6799451afe9a213fa5310d1ad06c0d","modified":1584038464874},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"e46b7a68a5cd417330cca6fb5a5e65855fbed77b","modified":1584038464875},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"d18f94e04ef0cf7abb432a8e707ccb3abc7fe435","modified":1584038464875},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"faffe25aec33936fa2ec9d8f0e34e16ef3d90c25","modified":1584038464878},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"c41a62155c416ca7d4bd90a7e2cd0ec06f174ab6","modified":1584038464879},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"b8444ec0ce36ffc2e06510502c9eec2840954616","modified":1584038464879},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"558a3d4bad578819fb07729fe1b50d9b81da8b93","modified":1584038464880},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"38285b8d5272a14bfa4769163c8d569abff4c95f","modified":1584038464880},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"915d5f10dd8f3dcd19cb75010e23689e8f385caf","modified":1584038464880},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"e2be0e37f3d48e63e65a47d819bfb800b9aa3784","modified":1584038464881},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"ef387e80043b62e1925a068267f2377cac64adc7","modified":1584038464881},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"5ac624e06b325227c6317de7fcaa685e77572233","modified":1584038464882},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"46ad0f737b04a015ff7068933fe3342127cbe8ab","modified":1584038464882},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"d4b69b53e15abe71d2abeaff8eefa7695c12f0f6","modified":1584038464883},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"33f7a4bfca1bb9835ec8f0d1e73188d1f56cc8b9","modified":1584038464884},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"3dc58e9a3fd63a3144d5fe850eb55e3dc885c9fb","modified":1584038464897},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"d10bdd736aa343f38fe15cba4c81d45d3d259de4","modified":1584038464906},{"_id":"themes/3-hexo/source/css/style.styl","hash":"322abe325d5fe9ff37347bdd19e772315a8ebfed","modified":1584038464906},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1583074843768},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1583074843772},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1583074843772},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1583074843772},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1583074843772},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1583074843780},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","hash":"2462169ad7f4a8ae9f9f4063995cbe7fed45cd77","modified":1584038464916},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"8c2a4f10a4da3d9615a3a81542494c6d21479b3d","modified":1584038464917},{"_id":"themes/3-hexo/source/js/script.js","hash":"14772b08b9c3d5c99a4b54748be9666deaae2778","modified":1584038464918},{"_id":"themes/3-hexo/source/js/search.js","hash":"788c610149a5f9361295f9f0207c8523f37ddb8b","modified":1584038464918},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1583074843776},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"05b09c45b379ffeb4f48c1604044d88829f90799","modified":1584038464876},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"32ce7b48d366b9c888ff2ceb911a3cd82f864537","modified":1584038464876},{"_id":"themes/3-hexo/layout/_partial/comments/gentie.ejs","hash":"908d9046502612d24780ca354bd9392a009b4d7b","modified":1584038464877},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"01567e010cf4f2dd141fe2019490d3f0d5aa2529","modified":1584038464877},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"eaf2b6f297282606b630ad55fb9e38af7e2829dc","modified":1584038464878},{"_id":"themes/3-hexo/source/css/_partial/autocomplete.styl","hash":"1ffe51e3b77afefcd94d386a718506d5b055ad94","modified":1584038464886},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"fe00fb1269b4fe1f3d5ab917891926222ce47275","modified":1584038464887},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f0eac1dc1f5dbed1769d032bb5fd5f002faaee26","modified":1584038464887},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"02c7510a26f306e240f23ddbf772a69be2c890dd","modified":1584038464888},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"c200f3fabcfe83f3e45746e186b4bb111e73ad47","modified":1584038464888},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"4102753dad0cc1ee9ed673f7253ba097a960c3b7","modified":1584038464889},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"bf29eab9ea75fa191d678b6eefec440505ddf6e3","modified":1584038464889},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"1d01247f974b059d9ef6a2178a724b4f72acd659","modified":1584038464890},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"2620a02169a6aeb75137fd368eac2c36423d8498","modified":1584038464890},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"f7ef35459ece22e1da950b86126be1c2bfe97fcf","modified":1584038464891},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"1f83fe0bcf229cb64f6ae55f9bcda835dfc4f062","modified":1584038464891},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1583074843760},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1583074843764},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"b5e7562c8494b0ddb3a70ecc5545ef7340d8e971","modified":1584038464892},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1583074843764},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"3dfe8e557d9dfaf39bca088a02b76deb82dbaa3d","modified":1583074843764},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"7e54ae44c02faa319c4fe128e1e6bda38eae5c9d","modified":1584038464895},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"aa087561480fb9c2cfd541e33d1e99d5ac1a56bb","modified":1583074843764},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"f8ed131ccf13f4bdd3ec11fc3e997339dd7b66ba","modified":1583074843764},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"b6456a4eabcffd95e822d1d7adce96da524d481a","modified":1584038464896},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1583074843764},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"69d184a682bcaeba2b180b437dc4431bc3be38aa","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1583074843768},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"92941a6ae73b74f44ad7c559c5548c44073c644a","modified":1584038464905},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"a31e03951c67aa3d5d8814b22a5c927305e80e85","modified":1584038464913},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"67984b83cd46ff4300d4fd959bf6c17dd66b4136","modified":1584038464915},{"_id":"public/2020/03/04/Lihongzhang/index.html","hash":"f6cc3cc7f7ec722927fa0777e1729a532acb1ef6","modified":1584003047127},{"_id":"public/2019/05/04/the_change/index.html","hash":"a98a0fecab27a26afd10f1b404e861879f4d7d15","modified":1584003047127},{"_id":"public/2019/04/30/GOT_S8E3/index.html","hash":"76970224c80e9697d38b76e3c25bd07a65ce179b","modified":1584003047127},{"_id":"public/2019/03/20/the_rain_and_the_shain/index.html","hash":"a3f1843cfdb4dc7257319433550982f83677c4b8","modified":1584003047127},{"_id":"public/2019/03/04/git/index.html","hash":"1d3cbd70abd084558adadd18bc9c0b73832535d5","modified":1584003047127},{"_id":"public/2019/02/25/binary_tree/index.html","hash":"ea1a3f4b2a7e8f81a00341271cd710ce04654ab4","modified":1584003047127},{"_id":"public/2019/02/20/latex/index.html","hash":"297deb6a779e9f260b5fa0c5c5ca04a7ae852ccb","modified":1584003047127},{"_id":"public/archives/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2019/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2019/02/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2019/03/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2019/04/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2019/05/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2020/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/archives/2020/03/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/随笔/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/笔记/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/命令/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/随笔/剧评/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/随笔/散文/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/随笔/杂文/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/命令/git/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/命令/其它/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/剧评/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/杂文/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/二叉树/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/git/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/latex/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/论文/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/散文/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/日志/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1584003047127},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1584003047127},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1584003047127},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1584003047127},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1584003047127},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1584003047127},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1584003047127},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1584003047127},{"_id":"public/css/fonts/iconfont.eot","hash":"3dfe8e557d9dfaf39bca088a02b76deb82dbaa3d","modified":1584003047127},{"_id":"public/css/fonts/iconfont.ttf","hash":"aa087561480fb9c2cfd541e33d1e99d5ac1a56bb","modified":1584003047127},{"_id":"public/css/fonts/iconfont.woff","hash":"f8ed131ccf13f4bdd3ec11fc3e997339dd7b66ba","modified":1584003047127},{"_id":"public/css/fonts/iconfont.svg","hash":"c61a31e5310430312677fffe4286097d29d10151","modified":1584003047127},{"_id":"public/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1584003047127},{"_id":"public/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1584003047127},{"_id":"public/css/mobile.css","hash":"79ab291be160e0ca753512a96c5198f7477f13be","modified":1584003047127},{"_id":"public/js/jquery.autocomplete.min.js","hash":"7b8ac4d06c9e763963832529f44a56ad42a81e5f","modified":1584003047127},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1584003047127},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1584003047127},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1584003047127},{"_id":"public/css/hl_theme/atom-light.css","hash":"a3c8f3ee9a655594eff7ac545cb2e6914c1abcc2","modified":1584003047127},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1584003047127},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1584003047127},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1584003047127},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1584003047127},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1584003047127},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1584003047127},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1584003047127},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1584003047127},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1584003047127},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1584003047127},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1584003047127},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1584003047127},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1584003047127},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1584003047127},{"_id":"public/css/style.css","hash":"fc4b532e837d1177f0cb6957985bdf07c708c9d7","modified":1584003047127},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1584003047127},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1584003047127},{"_id":"public/js/script.js","hash":"7502191e29366a11323dc72ae365b1aed254e6f2","modified":1584003047127},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1584003047127},{"_id":"public/js/gitalk.js","hash":"00419a6156f5d4f9b8aba00d446cd64ba73e0d12","modified":1584003047127},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1584003047127},{"_id":"source/_posts/Hexo博客搭建.md","hash":"34386cbfb5063ef1194969613d02ee9990788d39","modified":1584068031026},{"_id":"source/_posts/务虚时代下的国贼——李鸿章.md","hash":"f625ff598c2f1c6e322754a5ba10714d78cb0541","modified":1584038464872},{"_id":"source/_posts/改变.md","hash":"0791a408e9dea2c503333bb93d33cc9738636244","modified":1584038464872},{"_id":"source/_posts/雨与晴.md","hash":"c913b54e2d544bcb9dfe36afc872b0e08dc47aaa","modified":1584038464873},{"_id":"public/page/hexo1.html","hash":"1058182d3b9617d928a79eda370c6896effd1257","modified":1584082293171},{"_id":"public/page/Li_Hongzhang.html","hash":"1b202f6770d60e1e6c6cea56734fec7f73d1e4fd","modified":1584082293171},{"_id":"public/page/the_change.html","hash":"62647d2aced85a547a2061aa0987e781c5469225","modified":1584082293171},{"_id":"public/page/GOT_S8E3.html","hash":"a1793899d8aa1f820e3641616d475a1cc5adcc6d","modified":1584082293171},{"_id":"public/page/the_rain_and_the_shine.html","hash":"69e9802060fad96436b973c7a163d3a86e94fe59","modified":1584082293171},{"_id":"public/page/undefined.html","hash":"e8e505f62ba9cc736e4dc7aa5e6712528fec01aa","modified":1584082293171},{"_id":"public/categories/记录/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/categories/记录/hexo/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"public/tags/hexo/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171},{"_id":"source/_posts/Hexo博客部署到腾讯云服务器全流程.md","hash":"ff7504ffbee47b71e24cd352178a75a9da32e451","modified":1584068335458},{"_id":"source/_posts/Hexo实现多台机器同时编写博客.md","hash":"606e79e30d83418726ccf4bbaabbd575a7ed7620","modified":1584082500675},{"_id":"public/page/hexo2.html","hash":"b9ed7809392f937fcf057efd1e86aaf8d1e7b39c","modified":1584082293171},{"_id":"public/tags/云服务器/index.html","hash":"b255b31d5a92ac03caec21036dcdd62a5197b57c","modified":1584082293171}],"Category":[{"name":"随笔","_id":"ck7oiilkn00027wet63v4ga6z"},{"name":"笔记","_id":"ck7oiilkv000c7wet0b8g4zbk"},{"name":"命令","_id":"ck7oiilkx000f7wetafejd7g6"},{"name":"剧评","parent":"ck7oiilkn00027wet63v4ga6z","_id":"ck7oiilky000j7wetgacghjo7"},{"name":"散文","parent":"ck7oiilkn00027wet63v4ga6z","_id":"ck7oiill0000o7wetg3mw722t"},{"name":"杂文","parent":"ck7oiilkn00027wet63v4ga6z","_id":"ck7oiill1000t7wet3nqe7rhw"},{"name":"git","parent":"ck7oiilkx000f7wetafejd7g6","_id":"ck7oiill400117wet3h7b1huy"},{"name":"其它","parent":"ck7oiilkx000f7wetafejd7g6","_id":"ck7oiill600167wet2je6d4o5"},{"name":"记录","_id":"ck7ouzrme0002lwet52h090ne"},{"name":"hexo","parent":"ck7ouzrme0002lwet52h090ne","_id":"ck7ouzrmv000alwetc0nqhcn0"}],"Data":[],"Page":[],"Post":[{"title":"The Long Night（权力的游戏 S8E3）","date":"2019-04-30T06:03:33.000Z","fileName":"GOT_S8E3","_content":"## 前言\n长夜将至，当许多交交合合的命运汇集到临冬城的那刻，我知道在压抑的北境风雪之下会诞生许许多多有质感的能量，那是人性所带来的温度。不论命运如何曲折，是凛冬还是盛夏，依靠所谓魔法还是普普通通的脆弱不堪的人的身躯，这都有别于没有质感的所谓邪恶，因为这是生与死的区别。\n从S1E01开始，异鬼就是几乎凌驾于所有故事线之外的一个主线，因为它没有邪恶、暴力的划分，它既不比像小剥皮那样纯粹的人之恶要更邪恶，也谈不上比瑟曦·兰尼斯特的野心更极端。用形容词与名词界定夜王及他所创造的异鬼和尸鬼们是很困难的，就像百万年前极地的风，当死寂无人之时，没有语言，没有人声，谈不上形容。这是夜王所要带来的，所要抹去的，所谓世界记忆过的东西。也许那些歌谣、传记、语言乃至人类统统不曾出现过，比十万光年外的宇宙深处还要寂静空旷。\n无法形容的东西，这是汇集在临冬城的人们所要面对的。在漫天寒风的怒吼之中，一丝人性的传达都足以消弭一方冰雪，在世界崩溃的边缘，在死亡降临的前夜，在《Jenny of Oldstones》的歌声中，他们知道下半夜所要面对的是什么。\n“诚既勇兮又以武，终刚强兮不可凌”，献给所有直面过死亡的角色。\n\n## 悼词\n### 席恩·葛雷乔伊\nBorn as a Greyjoy, die as a Stark. \"You are a good man, thank you, Theon.\"\n这也许是席恩这一生最好的写照了吧，也是这个人物最好的归宿，此刻他为保护布兰而死，作为一名史塔克，作为临冬城的一员，作为一个铁种，作为布兰的兄弟。\n\"You father raises me as an honorable man\",\"My your brother, now and always\",\"My sword is yours, from this day, until the last day\"。隔了这么久，我依然能记得席恩对罗柏·史塔克发过的誓言，直到罗柏死在血色婚礼上，直到席恩被小剥皮折磨到成为臭佬，直到他带着珊莎跳下临冬城开始自我救赎的那一刻。\n![](img/BlogImg/1.jpeg)\n作为一个质子，当他想在史塔克家族找到自己一席之地的时候，罗柏总会提醒他“It's not your home, you are not a Stark”。当他作为罗柏的兄弟迫切想证明自己的时候，以“铁屿继承人”的身份回到铁群岛时，却发现自己已经不被父亲与姐姐认可。他一直想假装强大，一直想找到自己的身份，一直想做一个英雄，但最后却成了臭佬，忘记了自己的姓名，苟活于世。\n直到他带着珊莎跳下临冬城开始逃亡之路，直到他被铁民殴打倒地仍然从地上爬起，直到他回到临冬城对珊莎说“I want fight for Winterfall lady Sansa if you'll have me”，直到他弹尽粮绝拿着龙晶长枪独身冲向夜王，直到他倒地看着夜王却再也无力爬起，直到他作为史塔克为临冬城拼尽全力。\n![](img/BlogImg/2.jpg)\n让我身为席恩而死，不是臭佬。我是铁种，来自群屿，是派克岛的传人。\nWhat is dead may never die\n![](img/BlogImg/3.jpg)\n\n### 莱安娜·莫尔蒙\nWe are not a large house, but we're a proud one, and every man from Bear Island, fights with the strength of 10 mainlanders.\n![](img/BlogImg/4.jpg)\n就像莫尔蒙家族的箴言“Here we stand”，一个10岁的小女孩，表现出来的刚强果断足以让所有展现出怯懦的大人脸红。她在整个剧中从来不是个重要的人物，熊岛也只是封地在北境西北方一个贫瘠岛屿的普通家族。但其所展现出来的忠贞不二却是维斯特洛大陆上的一道绝对靓丽的风景，使得为了铁王座尔虞我诈的那些大家族变得如飘零柳絮般苍白。\n战斗前夜乔拉与莱安娜的对话令人心碎\nListen to me, you are the future of our house.\nI don't need you to remind me of that.\nYou'll be safer in the crypt...\nI will not hide underground, I pledged to fight for the North and I will fight.\n以及小熊转身对大熊说的那句\"I wish you good fortune, cousin.\"。这句话现在已经成为绝唱，他们一个为保卫北境而死，一个为守护所爱力竭身亡。\n一个10岁的小女孩，在大战前后指挥若定。城池已破之时仍然毫无畏惧，用着还是孩子的嗓音怒吼着冲向巨人尸鬼，在能够感受的到的骨骼碎裂鲜血涌出之时，仍奋力将龙晶匕首插向巨人，在那一刻，她比巨人还要高大。\n![](img/BlogImg/5.jpg)\n我一直在想事情是不是还有转机，也许她还没死，直到夜王抬手，她睁开蓝色的眼睛作为尸鬼再次站起来。\n多希望她能听从乔拉的建议躲到地穴，也许熬过了这场生死之战若干年后她会是熊岛的一个年轻美丽的Lady Mormont。\n但也许那个人就不是她了，她是来自熊岛的莱安娜。\n\n### 乔拉·莫尔蒙\n![](img/BlogImg/6.jpg)\n年轻的乔拉，在铁群岛平叛时一战成名，受封骑士。\n之后为了所谓的爱情，他违反禁令偷卖奴隶，在逃亡途中却被“爱情”抛弃。\n在峡海对岸为了王国的赦免，他作为间谍接近塔格利安兄妹。\n他以为通过出卖他们他会回到从前。\n但当他开始熟悉丹妮，他明白他错了。\n从此不论经历什么，他知道，他会永远站在丹妮的身边。\n在生命的最后一刻，他依然想站起来为丹妮阻挡一切伤害。\n他想告诉丹妮他只是受伤了，他没事。\n但他却连话都没说出口就走了。\n他虽然浑身是血，但却很安详。\n因为他的身边。\n有丹妮，有卓戈。\n就像他们相遇时的模样。\n纯粹是很难定义的，但这一刻它有个别名。\n叫做乔拉。\n![](img/BlogImg/7.jpg)\n\n### 忧郁的艾迪\n人性是复杂的，从来没有两个人会是相同的，哪怕类似都很难。但有时却有一些精神可以很好地概括一群人，在异鬼侵袭之时，长城上的守夜人是王国的坚盾。\n“长夜将至，我从现在开始守望，至死方休”\n“我是黑暗中的利剑，长城上的守卫，守卫王国的坚盾”\n“我将生命与荣耀献给守夜人”\n守夜人的精神是什么？是一边背诵誓词一边冲向巨人的葛兰们，是放弃王位只为坚守誓言的伊蒙·塔格利安，是为了目标孤独地在北境之北骑行的班杨·史塔克。\n“今夜如此，夜夜皆然”。\n随着艾迪的倒下，也许往后再也不会有人再说出这些誓词了。\n![](img/BlogImg/8.jpg)\n\n### 夜王\n行走了整整7季，却在预料之中的一集中以一种戏剧性的方法“死去”。\n你有多少故事，我曾经幻想能够听到答案，\n直到你在“The Night King”的乐曲中被匕首洞穿。\n全片无言，你的故事也许永远是一个谜。\n有人将你比作现实当中的那些自然灾害。\n讽刺五大洲的人们如维斯特洛大陆上的人们一样。\n在内斗中迷失、消亡。\n也有人认为你只是你。\n带着小说与剧集当中的某种隐喻。\n等待有一天编剧或马丁能够给我们答案。\n维斯特洛大陆上无人会喜欢你，\n但也许将来吟游歌者会将你提起。\n因为在生与死，冰与火的交织中，\n你让我们看到了人性。\n![](img/BlogImg/9.jpg)\n\n## 吐槽\n从S8前两集的命运交合开始，这一集生与死、冰与火的战争战前的气氛烘托可谓做到了极致。从大战开头，多斯拉克骑兵的龙晶弯刀开始熊熊燃烧，战斗的气氛似乎被一下扬起，直到骑兵冲向死亡军团，燃烧的火点开始逐渐熄灭直到消失殆尽，一种冰冷的肃杀与绝望的气息瞬间充满了每个人的内心。再到之后的空战，以及夜王带来的暴雪，无法阻挡尸鬼的燃烧的木栅，每个人物的特写，都使这场长达80分钟的战争刻画无比成功。\n但同时，细细思考战术，确实有蛮多地方值得吐槽。\n### 战术槽点\n1. 为什么要怒送多斯拉克骑兵？\n在临冬城大战之前，琼雪等人对异鬼以及尸鬼明显可以说是知根知底了，制定的战术也是以斩杀夜王为根本目的，因为没杀掉夜王尸鬼是杀不完的。那么临冬城保卫战的主要目的显然就应该是保证临冬城守住较长的时间而不是为了斩杀多少异鬼、尸鬼了。一个以拖延时间为目的的守城战，有什么理由让多斯拉克人在战前对杀不尽的异鬼进行冲锋？这支游牧民族骑兵在日后的内战当中是一个战斗力堪称bug的军队，异鬼没有攻来，你等着就好了，凭什么让自己最嫡系的军队先发起进攻？多斯拉克人即使不参加这场战争的效果也远好于上去送。理想的多斯拉克骑兵使用方法应该是在尸鬼冲锋与无垢者纠缠在一起时从侧面进行冲击，或者等两条龙喷火将尸鬼冲散之时进行收割减轻步兵的压力。导演的目的当然是为了表现如上所述的绝望的气息，但这波操作实在是可以说是一个败笔，为从峡海对岸远道而来的多斯拉克人感到不值。\n2. 守城器械准备的不充分\n如上所述，这是一个以拖延时间为目的的守城战，那么所依仗的应该是各种诸如燃烧油之类的守城器械。作为集合全北境以及龙妈力量的庞大军队，我认为装备这些显然不是问题，有了这些东西，守城战至少可以再多坚持一倍的时间。再其次就是木栅的设置了，明显可以很好地减缓尸鬼冲锋的速度，必要时还可以点燃（别说暴雪看不见信号了，这个在准备当中并不需要考虑），那么为什么只在临冬城外设置一圈的木栅就十分奇怪了。还有就是弓箭的问题，尸鬼是被夜王魔法复活的，只要被龙晶戳到就会倒下，那么也就意味着一支弓箭至少能杀死一只尸鬼，为什么不多备弓箭手也很古怪了，一轮弓箭齐射就可以给底下步兵和无垢者减小巨大的压力。当然这些都没有1中的错误致命，毕竟都可以归结为物资的紧缺与准备时间的不充分。\n3. 为什么不准备用来射龙的强弩？\n前面说过，尸鬼虽然疯狂，但其实远比人脆弱，只要被龙晶戳到就会“死去”，那么使用科本的那种强弩显然足够杀死被夜王转化的“韦赛里斯”。就算射不了龙，用重弩清兵也是极好的。当然硬要说的话可以归结于山姆没有那个技术。\n4. 为什么不派骑兵后排切割异鬼\n一个异鬼死后，由他转化的所有尸鬼都会失去“生命”，因此减缓守城压力的有效办法就是让多斯拉克骑兵去切割异鬼。洞悉了异鬼怕瓦哥利亚钢与龙晶之后，就应该知道除去死亡本身带来的恐惧外，异鬼并没有那么强大。派遣骁勇的多斯拉克骑兵在大战时绕后切割，即使不能成功，也能够吸引尸鬼的注意力，大大减轻守城压力，比直接冲锋效果要好的多。\n\n总结一下，和异鬼讲排兵布阵，脑子大概是瓦特了，论指挥，我觉得“私生子之战”中的小剥皮要优越的多，此战能胜，也是光之王显灵了。\n\n### 人物吐槽\n* 囧雪\n囧雪是主角相信在第六季的时候就能够看出来了，但我觉得相对于其他角色的立体与丰满程度，剧本对囧雪（或说伊耿·塔格利安）的塑造实在有些苍白。并没有体现出这个角色应有的包括外交、军事等等方面的智慧。这也是其得名囧·you know nothing·雪诺的一个重要原因。在本次冰与火、生与死之战中，除去空战当中的一点点表现，别的时间基本都在打酱油，要不是二丫神来一笔，满盘皆输。\n![](img/BlogImg/10.jpg)\n* 布兰·史塔克\n作为现在在场的究极神棍，打了全场的酱油，不知道他操控乌鸦去干了什么，本来三眼乌鸦的神棍属性应该是一个大挂之前也很期待在大战中能有所表现，结果啥事都没有发生。\n* 山姆\n山姆为什么不躲进地窖我觉得没太交代清楚，而且他在这次大战中存活下来完全是因为主角光环，但说好的《权力的游戏》没有主角光环呢？\n\n## 后记\n这次大战静下来细细品味的话槽点很多，也有很多朋友认为这有点烂尾。但不得不承认，电视剧也是视觉艺术的一种，而这场大战无论是在视觉上还是情感上做的都很到位，算是战争戏中的标杆了。至于烂尾，其实我早就做好这个打算了，我认为一部剧的跨度达到接近10年的情况下，不烂尾是不可能的。毕竟，一百个读者心中有一百个哈姆雷特。剧中的角色经过这些年的沉淀，在不同的观众眼中早已千差万别，每个人所希望的结局都不同，每个人所想看到的情节都有差异，每个人对待情节逻辑的解读都会有偏差。在这样的情况下，剧的走向只有一条，而观众希望的走向却有千万条，因此，也许在你眼中这儿烂尾了，在他眼中情节涉及却恰到好处，我想说的是，享受这部剧融入我们这些年时光的那一部分，看看他带给了我们自己多少变化，享受精彩的表演即可。茶余饭后吵吵闹闹完全可以，顿生龃龉则无必要。\n享受最后的那三集，希望能带给我们一些惊喜\n子夜dy记于19年五一之前。","source":"_posts/GOT_S8E3.md","raw":"---\ntitle: The Long Night（权力的游戏 S8E3）\ndate: 2019-04-30 14:03:33\ntags:\n    - 剧评\ncategories:\n    - 随笔\n    - 剧评\nfileName: GOT_S8E3\n---\n## 前言\n长夜将至，当许多交交合合的命运汇集到临冬城的那刻，我知道在压抑的北境风雪之下会诞生许许多多有质感的能量，那是人性所带来的温度。不论命运如何曲折，是凛冬还是盛夏，依靠所谓魔法还是普普通通的脆弱不堪的人的身躯，这都有别于没有质感的所谓邪恶，因为这是生与死的区别。\n从S1E01开始，异鬼就是几乎凌驾于所有故事线之外的一个主线，因为它没有邪恶、暴力的划分，它既不比像小剥皮那样纯粹的人之恶要更邪恶，也谈不上比瑟曦·兰尼斯特的野心更极端。用形容词与名词界定夜王及他所创造的异鬼和尸鬼们是很困难的，就像百万年前极地的风，当死寂无人之时，没有语言，没有人声，谈不上形容。这是夜王所要带来的，所要抹去的，所谓世界记忆过的东西。也许那些歌谣、传记、语言乃至人类统统不曾出现过，比十万光年外的宇宙深处还要寂静空旷。\n无法形容的东西，这是汇集在临冬城的人们所要面对的。在漫天寒风的怒吼之中，一丝人性的传达都足以消弭一方冰雪，在世界崩溃的边缘，在死亡降临的前夜，在《Jenny of Oldstones》的歌声中，他们知道下半夜所要面对的是什么。\n“诚既勇兮又以武，终刚强兮不可凌”，献给所有直面过死亡的角色。\n\n## 悼词\n### 席恩·葛雷乔伊\nBorn as a Greyjoy, die as a Stark. \"You are a good man, thank you, Theon.\"\n这也许是席恩这一生最好的写照了吧，也是这个人物最好的归宿，此刻他为保护布兰而死，作为一名史塔克，作为临冬城的一员，作为一个铁种，作为布兰的兄弟。\n\"You father raises me as an honorable man\",\"My your brother, now and always\",\"My sword is yours, from this day, until the last day\"。隔了这么久，我依然能记得席恩对罗柏·史塔克发过的誓言，直到罗柏死在血色婚礼上，直到席恩被小剥皮折磨到成为臭佬，直到他带着珊莎跳下临冬城开始自我救赎的那一刻。\n![](img/BlogImg/1.jpeg)\n作为一个质子，当他想在史塔克家族找到自己一席之地的时候，罗柏总会提醒他“It's not your home, you are not a Stark”。当他作为罗柏的兄弟迫切想证明自己的时候，以“铁屿继承人”的身份回到铁群岛时，却发现自己已经不被父亲与姐姐认可。他一直想假装强大，一直想找到自己的身份，一直想做一个英雄，但最后却成了臭佬，忘记了自己的姓名，苟活于世。\n直到他带着珊莎跳下临冬城开始逃亡之路，直到他被铁民殴打倒地仍然从地上爬起，直到他回到临冬城对珊莎说“I want fight for Winterfall lady Sansa if you'll have me”，直到他弹尽粮绝拿着龙晶长枪独身冲向夜王，直到他倒地看着夜王却再也无力爬起，直到他作为史塔克为临冬城拼尽全力。\n![](img/BlogImg/2.jpg)\n让我身为席恩而死，不是臭佬。我是铁种，来自群屿，是派克岛的传人。\nWhat is dead may never die\n![](img/BlogImg/3.jpg)\n\n### 莱安娜·莫尔蒙\nWe are not a large house, but we're a proud one, and every man from Bear Island, fights with the strength of 10 mainlanders.\n![](img/BlogImg/4.jpg)\n就像莫尔蒙家族的箴言“Here we stand”，一个10岁的小女孩，表现出来的刚强果断足以让所有展现出怯懦的大人脸红。她在整个剧中从来不是个重要的人物，熊岛也只是封地在北境西北方一个贫瘠岛屿的普通家族。但其所展现出来的忠贞不二却是维斯特洛大陆上的一道绝对靓丽的风景，使得为了铁王座尔虞我诈的那些大家族变得如飘零柳絮般苍白。\n战斗前夜乔拉与莱安娜的对话令人心碎\nListen to me, you are the future of our house.\nI don't need you to remind me of that.\nYou'll be safer in the crypt...\nI will not hide underground, I pledged to fight for the North and I will fight.\n以及小熊转身对大熊说的那句\"I wish you good fortune, cousin.\"。这句话现在已经成为绝唱，他们一个为保卫北境而死，一个为守护所爱力竭身亡。\n一个10岁的小女孩，在大战前后指挥若定。城池已破之时仍然毫无畏惧，用着还是孩子的嗓音怒吼着冲向巨人尸鬼，在能够感受的到的骨骼碎裂鲜血涌出之时，仍奋力将龙晶匕首插向巨人，在那一刻，她比巨人还要高大。\n![](img/BlogImg/5.jpg)\n我一直在想事情是不是还有转机，也许她还没死，直到夜王抬手，她睁开蓝色的眼睛作为尸鬼再次站起来。\n多希望她能听从乔拉的建议躲到地穴，也许熬过了这场生死之战若干年后她会是熊岛的一个年轻美丽的Lady Mormont。\n但也许那个人就不是她了，她是来自熊岛的莱安娜。\n\n### 乔拉·莫尔蒙\n![](img/BlogImg/6.jpg)\n年轻的乔拉，在铁群岛平叛时一战成名，受封骑士。\n之后为了所谓的爱情，他违反禁令偷卖奴隶，在逃亡途中却被“爱情”抛弃。\n在峡海对岸为了王国的赦免，他作为间谍接近塔格利安兄妹。\n他以为通过出卖他们他会回到从前。\n但当他开始熟悉丹妮，他明白他错了。\n从此不论经历什么，他知道，他会永远站在丹妮的身边。\n在生命的最后一刻，他依然想站起来为丹妮阻挡一切伤害。\n他想告诉丹妮他只是受伤了，他没事。\n但他却连话都没说出口就走了。\n他虽然浑身是血，但却很安详。\n因为他的身边。\n有丹妮，有卓戈。\n就像他们相遇时的模样。\n纯粹是很难定义的，但这一刻它有个别名。\n叫做乔拉。\n![](img/BlogImg/7.jpg)\n\n### 忧郁的艾迪\n人性是复杂的，从来没有两个人会是相同的，哪怕类似都很难。但有时却有一些精神可以很好地概括一群人，在异鬼侵袭之时，长城上的守夜人是王国的坚盾。\n“长夜将至，我从现在开始守望，至死方休”\n“我是黑暗中的利剑，长城上的守卫，守卫王国的坚盾”\n“我将生命与荣耀献给守夜人”\n守夜人的精神是什么？是一边背诵誓词一边冲向巨人的葛兰们，是放弃王位只为坚守誓言的伊蒙·塔格利安，是为了目标孤独地在北境之北骑行的班杨·史塔克。\n“今夜如此，夜夜皆然”。\n随着艾迪的倒下，也许往后再也不会有人再说出这些誓词了。\n![](img/BlogImg/8.jpg)\n\n### 夜王\n行走了整整7季，却在预料之中的一集中以一种戏剧性的方法“死去”。\n你有多少故事，我曾经幻想能够听到答案，\n直到你在“The Night King”的乐曲中被匕首洞穿。\n全片无言，你的故事也许永远是一个谜。\n有人将你比作现实当中的那些自然灾害。\n讽刺五大洲的人们如维斯特洛大陆上的人们一样。\n在内斗中迷失、消亡。\n也有人认为你只是你。\n带着小说与剧集当中的某种隐喻。\n等待有一天编剧或马丁能够给我们答案。\n维斯特洛大陆上无人会喜欢你，\n但也许将来吟游歌者会将你提起。\n因为在生与死，冰与火的交织中，\n你让我们看到了人性。\n![](img/BlogImg/9.jpg)\n\n## 吐槽\n从S8前两集的命运交合开始，这一集生与死、冰与火的战争战前的气氛烘托可谓做到了极致。从大战开头，多斯拉克骑兵的龙晶弯刀开始熊熊燃烧，战斗的气氛似乎被一下扬起，直到骑兵冲向死亡军团，燃烧的火点开始逐渐熄灭直到消失殆尽，一种冰冷的肃杀与绝望的气息瞬间充满了每个人的内心。再到之后的空战，以及夜王带来的暴雪，无法阻挡尸鬼的燃烧的木栅，每个人物的特写，都使这场长达80分钟的战争刻画无比成功。\n但同时，细细思考战术，确实有蛮多地方值得吐槽。\n### 战术槽点\n1. 为什么要怒送多斯拉克骑兵？\n在临冬城大战之前，琼雪等人对异鬼以及尸鬼明显可以说是知根知底了，制定的战术也是以斩杀夜王为根本目的，因为没杀掉夜王尸鬼是杀不完的。那么临冬城保卫战的主要目的显然就应该是保证临冬城守住较长的时间而不是为了斩杀多少异鬼、尸鬼了。一个以拖延时间为目的的守城战，有什么理由让多斯拉克人在战前对杀不尽的异鬼进行冲锋？这支游牧民族骑兵在日后的内战当中是一个战斗力堪称bug的军队，异鬼没有攻来，你等着就好了，凭什么让自己最嫡系的军队先发起进攻？多斯拉克人即使不参加这场战争的效果也远好于上去送。理想的多斯拉克骑兵使用方法应该是在尸鬼冲锋与无垢者纠缠在一起时从侧面进行冲击，或者等两条龙喷火将尸鬼冲散之时进行收割减轻步兵的压力。导演的目的当然是为了表现如上所述的绝望的气息，但这波操作实在是可以说是一个败笔，为从峡海对岸远道而来的多斯拉克人感到不值。\n2. 守城器械准备的不充分\n如上所述，这是一个以拖延时间为目的的守城战，那么所依仗的应该是各种诸如燃烧油之类的守城器械。作为集合全北境以及龙妈力量的庞大军队，我认为装备这些显然不是问题，有了这些东西，守城战至少可以再多坚持一倍的时间。再其次就是木栅的设置了，明显可以很好地减缓尸鬼冲锋的速度，必要时还可以点燃（别说暴雪看不见信号了，这个在准备当中并不需要考虑），那么为什么只在临冬城外设置一圈的木栅就十分奇怪了。还有就是弓箭的问题，尸鬼是被夜王魔法复活的，只要被龙晶戳到就会倒下，那么也就意味着一支弓箭至少能杀死一只尸鬼，为什么不多备弓箭手也很古怪了，一轮弓箭齐射就可以给底下步兵和无垢者减小巨大的压力。当然这些都没有1中的错误致命，毕竟都可以归结为物资的紧缺与准备时间的不充分。\n3. 为什么不准备用来射龙的强弩？\n前面说过，尸鬼虽然疯狂，但其实远比人脆弱，只要被龙晶戳到就会“死去”，那么使用科本的那种强弩显然足够杀死被夜王转化的“韦赛里斯”。就算射不了龙，用重弩清兵也是极好的。当然硬要说的话可以归结于山姆没有那个技术。\n4. 为什么不派骑兵后排切割异鬼\n一个异鬼死后，由他转化的所有尸鬼都会失去“生命”，因此减缓守城压力的有效办法就是让多斯拉克骑兵去切割异鬼。洞悉了异鬼怕瓦哥利亚钢与龙晶之后，就应该知道除去死亡本身带来的恐惧外，异鬼并没有那么强大。派遣骁勇的多斯拉克骑兵在大战时绕后切割，即使不能成功，也能够吸引尸鬼的注意力，大大减轻守城压力，比直接冲锋效果要好的多。\n\n总结一下，和异鬼讲排兵布阵，脑子大概是瓦特了，论指挥，我觉得“私生子之战”中的小剥皮要优越的多，此战能胜，也是光之王显灵了。\n\n### 人物吐槽\n* 囧雪\n囧雪是主角相信在第六季的时候就能够看出来了，但我觉得相对于其他角色的立体与丰满程度，剧本对囧雪（或说伊耿·塔格利安）的塑造实在有些苍白。并没有体现出这个角色应有的包括外交、军事等等方面的智慧。这也是其得名囧·you know nothing·雪诺的一个重要原因。在本次冰与火、生与死之战中，除去空战当中的一点点表现，别的时间基本都在打酱油，要不是二丫神来一笔，满盘皆输。\n![](img/BlogImg/10.jpg)\n* 布兰·史塔克\n作为现在在场的究极神棍，打了全场的酱油，不知道他操控乌鸦去干了什么，本来三眼乌鸦的神棍属性应该是一个大挂之前也很期待在大战中能有所表现，结果啥事都没有发生。\n* 山姆\n山姆为什么不躲进地窖我觉得没太交代清楚，而且他在这次大战中存活下来完全是因为主角光环，但说好的《权力的游戏》没有主角光环呢？\n\n## 后记\n这次大战静下来细细品味的话槽点很多，也有很多朋友认为这有点烂尾。但不得不承认，电视剧也是视觉艺术的一种，而这场大战无论是在视觉上还是情感上做的都很到位，算是战争戏中的标杆了。至于烂尾，其实我早就做好这个打算了，我认为一部剧的跨度达到接近10年的情况下，不烂尾是不可能的。毕竟，一百个读者心中有一百个哈姆雷特。剧中的角色经过这些年的沉淀，在不同的观众眼中早已千差万别，每个人所希望的结局都不同，每个人所想看到的情节都有差异，每个人对待情节逻辑的解读都会有偏差。在这样的情况下，剧的走向只有一条，而观众希望的走向却有千万条，因此，也许在你眼中这儿烂尾了，在他眼中情节涉及却恰到好处，我想说的是，享受这部剧融入我们这些年时光的那一部分，看看他带给了我们自己多少变化，享受精彩的表演即可。茶余饭后吵吵闹闹完全可以，顿生龃龉则无必要。\n享受最后的那三集，希望能带给我们一些惊喜\n子夜dy记于19年五一之前。","slug":"GOT_S8E3","published":1,"updated":"2020-03-12T18:41:04.869Z","_id":"ck7oiilki00007wet4sv798ly","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>长夜将至，当许多交交合合的命运汇集到临冬城的那刻，我知道在压抑的北境风雪之下会诞生许许多多有质感的能量，那是人性所带来的温度。不论命运如何曲折，是凛冬还是盛夏，依靠所谓魔法还是普普通通的脆弱不堪的人的身躯，这都有别于没有质感的所谓邪恶，因为这是生与死的区别。<br>从S1E01开始，异鬼就是几乎凌驾于所有故事线之外的一个主线，因为它没有邪恶、暴力的划分，它既不比像小剥皮那样纯粹的人之恶要更邪恶，也谈不上比瑟曦·兰尼斯特的野心更极端。用形容词与名词界定夜王及他所创造的异鬼和尸鬼们是很困难的，就像百万年前极地的风，当死寂无人之时，没有语言，没有人声，谈不上形容。这是夜王所要带来的，所要抹去的，所谓世界记忆过的东西。也许那些歌谣、传记、语言乃至人类统统不曾出现过，比十万光年外的宇宙深处还要寂静空旷。<br>无法形容的东西，这是汇集在临冬城的人们所要面对的。在漫天寒风的怒吼之中，一丝人性的传达都足以消弭一方冰雪，在世界崩溃的边缘，在死亡降临的前夜，在《Jenny of Oldstones》的歌声中，他们知道下半夜所要面对的是什么。<br>“诚既勇兮又以武，终刚强兮不可凌”，献给所有直面过死亡的角色。</p>\n<h2 id=\"悼词\"><a href=\"#悼词\" class=\"headerlink\" title=\"悼词\"></a>悼词</h2><h3 id=\"席恩·葛雷乔伊\"><a href=\"#席恩·葛雷乔伊\" class=\"headerlink\" title=\"席恩·葛雷乔伊\"></a>席恩·葛雷乔伊</h3><p>Born as a Greyjoy, die as a Stark. “You are a good man, thank you, Theon.”<br>这也许是席恩这一生最好的写照了吧，也是这个人物最好的归宿，此刻他为保护布兰而死，作为一名史塔克，作为临冬城的一员，作为一个铁种，作为布兰的兄弟。<br>“You father raises me as an honorable man”,”My your brother, now and always”,”My sword is yours, from this day, until the last day”。隔了这么久，我依然能记得席恩对罗柏·史塔克发过的誓言，直到罗柏死在血色婚礼上，直到席恩被小剥皮折磨到成为臭佬，直到他带着珊莎跳下临冬城开始自我救赎的那一刻。<br><img src=\"img/BlogImg/1.jpeg\" alt=\"\"><br>作为一个质子，当他想在史塔克家族找到自己一席之地的时候，罗柏总会提醒他“It’s not your home, you are not a Stark”。当他作为罗柏的兄弟迫切想证明自己的时候，以“铁屿继承人”的身份回到铁群岛时，却发现自己已经不被父亲与姐姐认可。他一直想假装强大，一直想找到自己的身份，一直想做一个英雄，但最后却成了臭佬，忘记了自己的姓名，苟活于世。<br>直到他带着珊莎跳下临冬城开始逃亡之路，直到他被铁民殴打倒地仍然从地上爬起，直到他回到临冬城对珊莎说“I want fight for Winterfall lady Sansa if you’ll have me”，直到他弹尽粮绝拿着龙晶长枪独身冲向夜王，直到他倒地看着夜王却再也无力爬起，直到他作为史塔克为临冬城拼尽全力。<br><img src=\"img/BlogImg/2.jpg\" alt=\"\"><br>让我身为席恩而死，不是臭佬。我是铁种，来自群屿，是派克岛的传人。<br>What is dead may never die<br><img src=\"img/BlogImg/3.jpg\" alt=\"\"></p>\n<h3 id=\"莱安娜·莫尔蒙\"><a href=\"#莱安娜·莫尔蒙\" class=\"headerlink\" title=\"莱安娜·莫尔蒙\"></a>莱安娜·莫尔蒙</h3><p>We are not a large house, but we’re a proud one, and every man from Bear Island, fights with the strength of 10 mainlanders.<br><img src=\"img/BlogImg/4.jpg\" alt=\"\"><br>就像莫尔蒙家族的箴言“Here we stand”，一个10岁的小女孩，表现出来的刚强果断足以让所有展现出怯懦的大人脸红。她在整个剧中从来不是个重要的人物，熊岛也只是封地在北境西北方一个贫瘠岛屿的普通家族。但其所展现出来的忠贞不二却是维斯特洛大陆上的一道绝对靓丽的风景，使得为了铁王座尔虞我诈的那些大家族变得如飘零柳絮般苍白。<br>战斗前夜乔拉与莱安娜的对话令人心碎<br>Listen to me, you are the future of our house.<br>I don’t need you to remind me of that.<br>You’ll be safer in the crypt…<br>I will not hide underground, I pledged to fight for the North and I will fight.<br>以及小熊转身对大熊说的那句”I wish you good fortune, cousin.”。这句话现在已经成为绝唱，他们一个为保卫北境而死，一个为守护所爱力竭身亡。<br>一个10岁的小女孩，在大战前后指挥若定。城池已破之时仍然毫无畏惧，用着还是孩子的嗓音怒吼着冲向巨人尸鬼，在能够感受的到的骨骼碎裂鲜血涌出之时，仍奋力将龙晶匕首插向巨人，在那一刻，她比巨人还要高大。<br><img src=\"img/BlogImg/5.jpg\" alt=\"\"><br>我一直在想事情是不是还有转机，也许她还没死，直到夜王抬手，她睁开蓝色的眼睛作为尸鬼再次站起来。<br>多希望她能听从乔拉的建议躲到地穴，也许熬过了这场生死之战若干年后她会是熊岛的一个年轻美丽的Lady Mormont。<br>但也许那个人就不是她了，她是来自熊岛的莱安娜。</p>\n<h3 id=\"乔拉·莫尔蒙\"><a href=\"#乔拉·莫尔蒙\" class=\"headerlink\" title=\"乔拉·莫尔蒙\"></a>乔拉·莫尔蒙</h3><p><img src=\"img/BlogImg/6.jpg\" alt=\"\"><br>年轻的乔拉，在铁群岛平叛时一战成名，受封骑士。<br>之后为了所谓的爱情，他违反禁令偷卖奴隶，在逃亡途中却被“爱情”抛弃。<br>在峡海对岸为了王国的赦免，他作为间谍接近塔格利安兄妹。<br>他以为通过出卖他们他会回到从前。<br>但当他开始熟悉丹妮，他明白他错了。<br>从此不论经历什么，他知道，他会永远站在丹妮的身边。<br>在生命的最后一刻，他依然想站起来为丹妮阻挡一切伤害。<br>他想告诉丹妮他只是受伤了，他没事。<br>但他却连话都没说出口就走了。<br>他虽然浑身是血，但却很安详。<br>因为他的身边。<br>有丹妮，有卓戈。<br>就像他们相遇时的模样。<br>纯粹是很难定义的，但这一刻它有个别名。<br>叫做乔拉。<br><img src=\"img/BlogImg/7.jpg\" alt=\"\"></p>\n<h3 id=\"忧郁的艾迪\"><a href=\"#忧郁的艾迪\" class=\"headerlink\" title=\"忧郁的艾迪\"></a>忧郁的艾迪</h3><p>人性是复杂的，从来没有两个人会是相同的，哪怕类似都很难。但有时却有一些精神可以很好地概括一群人，在异鬼侵袭之时，长城上的守夜人是王国的坚盾。<br>“长夜将至，我从现在开始守望，至死方休”<br>“我是黑暗中的利剑，长城上的守卫，守卫王国的坚盾”<br>“我将生命与荣耀献给守夜人”<br>守夜人的精神是什么？是一边背诵誓词一边冲向巨人的葛兰们，是放弃王位只为坚守誓言的伊蒙·塔格利安，是为了目标孤独地在北境之北骑行的班杨·史塔克。<br>“今夜如此，夜夜皆然”。<br>随着艾迪的倒下，也许往后再也不会有人再说出这些誓词了。<br><img src=\"img/BlogImg/8.jpg\" alt=\"\"></p>\n<h3 id=\"夜王\"><a href=\"#夜王\" class=\"headerlink\" title=\"夜王\"></a>夜王</h3><p>行走了整整7季，却在预料之中的一集中以一种戏剧性的方法“死去”。<br>你有多少故事，我曾经幻想能够听到答案，<br>直到你在“The Night King”的乐曲中被匕首洞穿。<br>全片无言，你的故事也许永远是一个谜。<br>有人将你比作现实当中的那些自然灾害。<br>讽刺五大洲的人们如维斯特洛大陆上的人们一样。<br>在内斗中迷失、消亡。<br>也有人认为你只是你。<br>带着小说与剧集当中的某种隐喻。<br>等待有一天编剧或马丁能够给我们答案。<br>维斯特洛大陆上无人会喜欢你，<br>但也许将来吟游歌者会将你提起。<br>因为在生与死，冰与火的交织中，<br>你让我们看到了人性。<br><img src=\"img/BlogImg/9.jpg\" alt=\"\"></p>\n<h2 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h2><p>从S8前两集的命运交合开始，这一集生与死、冰与火的战争战前的气氛烘托可谓做到了极致。从大战开头，多斯拉克骑兵的龙晶弯刀开始熊熊燃烧，战斗的气氛似乎被一下扬起，直到骑兵冲向死亡军团，燃烧的火点开始逐渐熄灭直到消失殆尽，一种冰冷的肃杀与绝望的气息瞬间充满了每个人的内心。再到之后的空战，以及夜王带来的暴雪，无法阻挡尸鬼的燃烧的木栅，每个人物的特写，都使这场长达80分钟的战争刻画无比成功。<br>但同时，细细思考战术，确实有蛮多地方值得吐槽。</p>\n<h3 id=\"战术槽点\"><a href=\"#战术槽点\" class=\"headerlink\" title=\"战术槽点\"></a>战术槽点</h3><ol>\n<li>为什么要怒送多斯拉克骑兵？<br>在临冬城大战之前，琼雪等人对异鬼以及尸鬼明显可以说是知根知底了，制定的战术也是以斩杀夜王为根本目的，因为没杀掉夜王尸鬼是杀不完的。那么临冬城保卫战的主要目的显然就应该是保证临冬城守住较长的时间而不是为了斩杀多少异鬼、尸鬼了。一个以拖延时间为目的的守城战，有什么理由让多斯拉克人在战前对杀不尽的异鬼进行冲锋？这支游牧民族骑兵在日后的内战当中是一个战斗力堪称bug的军队，异鬼没有攻来，你等着就好了，凭什么让自己最嫡系的军队先发起进攻？多斯拉克人即使不参加这场战争的效果也远好于上去送。理想的多斯拉克骑兵使用方法应该是在尸鬼冲锋与无垢者纠缠在一起时从侧面进行冲击，或者等两条龙喷火将尸鬼冲散之时进行收割减轻步兵的压力。导演的目的当然是为了表现如上所述的绝望的气息，但这波操作实在是可以说是一个败笔，为从峡海对岸远道而来的多斯拉克人感到不值。</li>\n<li>守城器械准备的不充分<br>如上所述，这是一个以拖延时间为目的的守城战，那么所依仗的应该是各种诸如燃烧油之类的守城器械。作为集合全北境以及龙妈力量的庞大军队，我认为装备这些显然不是问题，有了这些东西，守城战至少可以再多坚持一倍的时间。再其次就是木栅的设置了，明显可以很好地减缓尸鬼冲锋的速度，必要时还可以点燃（别说暴雪看不见信号了，这个在准备当中并不需要考虑），那么为什么只在临冬城外设置一圈的木栅就十分奇怪了。还有就是弓箭的问题，尸鬼是被夜王魔法复活的，只要被龙晶戳到就会倒下，那么也就意味着一支弓箭至少能杀死一只尸鬼，为什么不多备弓箭手也很古怪了，一轮弓箭齐射就可以给底下步兵和无垢者减小巨大的压力。当然这些都没有1中的错误致命，毕竟都可以归结为物资的紧缺与准备时间的不充分。</li>\n<li>为什么不准备用来射龙的强弩？<br>前面说过，尸鬼虽然疯狂，但其实远比人脆弱，只要被龙晶戳到就会“死去”，那么使用科本的那种强弩显然足够杀死被夜王转化的“韦赛里斯”。就算射不了龙，用重弩清兵也是极好的。当然硬要说的话可以归结于山姆没有那个技术。</li>\n<li>为什么不派骑兵后排切割异鬼<br>一个异鬼死后，由他转化的所有尸鬼都会失去“生命”，因此减缓守城压力的有效办法就是让多斯拉克骑兵去切割异鬼。洞悉了异鬼怕瓦哥利亚钢与龙晶之后，就应该知道除去死亡本身带来的恐惧外，异鬼并没有那么强大。派遣骁勇的多斯拉克骑兵在大战时绕后切割，即使不能成功，也能够吸引尸鬼的注意力，大大减轻守城压力，比直接冲锋效果要好的多。</li>\n</ol>\n<p>总结一下，和异鬼讲排兵布阵，脑子大概是瓦特了，论指挥，我觉得“私生子之战”中的小剥皮要优越的多，此战能胜，也是光之王显灵了。</p>\n<h3 id=\"人物吐槽\"><a href=\"#人物吐槽\" class=\"headerlink\" title=\"人物吐槽\"></a>人物吐槽</h3><ul>\n<li>囧雪<br>囧雪是主角相信在第六季的时候就能够看出来了，但我觉得相对于其他角色的立体与丰满程度，剧本对囧雪（或说伊耿·塔格利安）的塑造实在有些苍白。并没有体现出这个角色应有的包括外交、军事等等方面的智慧。这也是其得名囧·you know nothing·雪诺的一个重要原因。在本次冰与火、生与死之战中，除去空战当中的一点点表现，别的时间基本都在打酱油，要不是二丫神来一笔，满盘皆输。<br><img src=\"img/BlogImg/10.jpg\" alt=\"\"></li>\n<li>布兰·史塔克<br>作为现在在场的究极神棍，打了全场的酱油，不知道他操控乌鸦去干了什么，本来三眼乌鸦的神棍属性应该是一个大挂之前也很期待在大战中能有所表现，结果啥事都没有发生。</li>\n<li>山姆<br>山姆为什么不躲进地窖我觉得没太交代清楚，而且他在这次大战中存活下来完全是因为主角光环，但说好的《权力的游戏》没有主角光环呢？</li>\n</ul>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>这次大战静下来细细品味的话槽点很多，也有很多朋友认为这有点烂尾。但不得不承认，电视剧也是视觉艺术的一种，而这场大战无论是在视觉上还是情感上做的都很到位，算是战争戏中的标杆了。至于烂尾，其实我早就做好这个打算了，我认为一部剧的跨度达到接近10年的情况下，不烂尾是不可能的。毕竟，一百个读者心中有一百个哈姆雷特。剧中的角色经过这些年的沉淀，在不同的观众眼中早已千差万别，每个人所希望的结局都不同，每个人所想看到的情节都有差异，每个人对待情节逻辑的解读都会有偏差。在这样的情况下，剧的走向只有一条，而观众希望的走向却有千万条，因此，也许在你眼中这儿烂尾了，在他眼中情节涉及却恰到好处，我想说的是，享受这部剧融入我们这些年时光的那一部分，看看他带给了我们自己多少变化，享受精彩的表演即可。茶余饭后吵吵闹闹完全可以，顿生龃龉则无必要。<br>享受最后的那三集，希望能带给我们一些惊喜<br>子夜dy记于19年五一之前。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>长夜将至，当许多交交合合的命运汇集到临冬城的那刻，我知道在压抑的北境风雪之下会诞生许许多多有质感的能量，那是人性所带来的温度。不论命运如何曲折，是凛冬还是盛夏，依靠所谓魔法还是普普通通的脆弱不堪的人的身躯，这都有别于没有质感的所谓邪恶，因为这是生与死的区别。<br>从S1E01开始，异鬼就是几乎凌驾于所有故事线之外的一个主线，因为它没有邪恶、暴力的划分，它既不比像小剥皮那样纯粹的人之恶要更邪恶，也谈不上比瑟曦·兰尼斯特的野心更极端。用形容词与名词界定夜王及他所创造的异鬼和尸鬼们是很困难的，就像百万年前极地的风，当死寂无人之时，没有语言，没有人声，谈不上形容。这是夜王所要带来的，所要抹去的，所谓世界记忆过的东西。也许那些歌谣、传记、语言乃至人类统统不曾出现过，比十万光年外的宇宙深处还要寂静空旷。<br>无法形容的东西，这是汇集在临冬城的人们所要面对的。在漫天寒风的怒吼之中，一丝人性的传达都足以消弭一方冰雪，在世界崩溃的边缘，在死亡降临的前夜，在《Jenny of Oldstones》的歌声中，他们知道下半夜所要面对的是什么。<br>“诚既勇兮又以武，终刚强兮不可凌”，献给所有直面过死亡的角色。</p>\n<h2 id=\"悼词\"><a href=\"#悼词\" class=\"headerlink\" title=\"悼词\"></a>悼词</h2><h3 id=\"席恩·葛雷乔伊\"><a href=\"#席恩·葛雷乔伊\" class=\"headerlink\" title=\"席恩·葛雷乔伊\"></a>席恩·葛雷乔伊</h3><p>Born as a Greyjoy, die as a Stark. “You are a good man, thank you, Theon.”<br>这也许是席恩这一生最好的写照了吧，也是这个人物最好的归宿，此刻他为保护布兰而死，作为一名史塔克，作为临冬城的一员，作为一个铁种，作为布兰的兄弟。<br>“You father raises me as an honorable man”,”My your brother, now and always”,”My sword is yours, from this day, until the last day”。隔了这么久，我依然能记得席恩对罗柏·史塔克发过的誓言，直到罗柏死在血色婚礼上，直到席恩被小剥皮折磨到成为臭佬，直到他带着珊莎跳下临冬城开始自我救赎的那一刻。<br><img src=\"img/BlogImg/1.jpeg\" alt=\"\"><br>作为一个质子，当他想在史塔克家族找到自己一席之地的时候，罗柏总会提醒他“It’s not your home, you are not a Stark”。当他作为罗柏的兄弟迫切想证明自己的时候，以“铁屿继承人”的身份回到铁群岛时，却发现自己已经不被父亲与姐姐认可。他一直想假装强大，一直想找到自己的身份，一直想做一个英雄，但最后却成了臭佬，忘记了自己的姓名，苟活于世。<br>直到他带着珊莎跳下临冬城开始逃亡之路，直到他被铁民殴打倒地仍然从地上爬起，直到他回到临冬城对珊莎说“I want fight for Winterfall lady Sansa if you’ll have me”，直到他弹尽粮绝拿着龙晶长枪独身冲向夜王，直到他倒地看着夜王却再也无力爬起，直到他作为史塔克为临冬城拼尽全力。<br><img src=\"img/BlogImg/2.jpg\" alt=\"\"><br>让我身为席恩而死，不是臭佬。我是铁种，来自群屿，是派克岛的传人。<br>What is dead may never die<br><img src=\"img/BlogImg/3.jpg\" alt=\"\"></p>\n<h3 id=\"莱安娜·莫尔蒙\"><a href=\"#莱安娜·莫尔蒙\" class=\"headerlink\" title=\"莱安娜·莫尔蒙\"></a>莱安娜·莫尔蒙</h3><p>We are not a large house, but we’re a proud one, and every man from Bear Island, fights with the strength of 10 mainlanders.<br><img src=\"img/BlogImg/4.jpg\" alt=\"\"><br>就像莫尔蒙家族的箴言“Here we stand”，一个10岁的小女孩，表现出来的刚强果断足以让所有展现出怯懦的大人脸红。她在整个剧中从来不是个重要的人物，熊岛也只是封地在北境西北方一个贫瘠岛屿的普通家族。但其所展现出来的忠贞不二却是维斯特洛大陆上的一道绝对靓丽的风景，使得为了铁王座尔虞我诈的那些大家族变得如飘零柳絮般苍白。<br>战斗前夜乔拉与莱安娜的对话令人心碎<br>Listen to me, you are the future of our house.<br>I don’t need you to remind me of that.<br>You’ll be safer in the crypt…<br>I will not hide underground, I pledged to fight for the North and I will fight.<br>以及小熊转身对大熊说的那句”I wish you good fortune, cousin.”。这句话现在已经成为绝唱，他们一个为保卫北境而死，一个为守护所爱力竭身亡。<br>一个10岁的小女孩，在大战前后指挥若定。城池已破之时仍然毫无畏惧，用着还是孩子的嗓音怒吼着冲向巨人尸鬼，在能够感受的到的骨骼碎裂鲜血涌出之时，仍奋力将龙晶匕首插向巨人，在那一刻，她比巨人还要高大。<br><img src=\"img/BlogImg/5.jpg\" alt=\"\"><br>我一直在想事情是不是还有转机，也许她还没死，直到夜王抬手，她睁开蓝色的眼睛作为尸鬼再次站起来。<br>多希望她能听从乔拉的建议躲到地穴，也许熬过了这场生死之战若干年后她会是熊岛的一个年轻美丽的Lady Mormont。<br>但也许那个人就不是她了，她是来自熊岛的莱安娜。</p>\n<h3 id=\"乔拉·莫尔蒙\"><a href=\"#乔拉·莫尔蒙\" class=\"headerlink\" title=\"乔拉·莫尔蒙\"></a>乔拉·莫尔蒙</h3><p><img src=\"img/BlogImg/6.jpg\" alt=\"\"><br>年轻的乔拉，在铁群岛平叛时一战成名，受封骑士。<br>之后为了所谓的爱情，他违反禁令偷卖奴隶，在逃亡途中却被“爱情”抛弃。<br>在峡海对岸为了王国的赦免，他作为间谍接近塔格利安兄妹。<br>他以为通过出卖他们他会回到从前。<br>但当他开始熟悉丹妮，他明白他错了。<br>从此不论经历什么，他知道，他会永远站在丹妮的身边。<br>在生命的最后一刻，他依然想站起来为丹妮阻挡一切伤害。<br>他想告诉丹妮他只是受伤了，他没事。<br>但他却连话都没说出口就走了。<br>他虽然浑身是血，但却很安详。<br>因为他的身边。<br>有丹妮，有卓戈。<br>就像他们相遇时的模样。<br>纯粹是很难定义的，但这一刻它有个别名。<br>叫做乔拉。<br><img src=\"img/BlogImg/7.jpg\" alt=\"\"></p>\n<h3 id=\"忧郁的艾迪\"><a href=\"#忧郁的艾迪\" class=\"headerlink\" title=\"忧郁的艾迪\"></a>忧郁的艾迪</h3><p>人性是复杂的，从来没有两个人会是相同的，哪怕类似都很难。但有时却有一些精神可以很好地概括一群人，在异鬼侵袭之时，长城上的守夜人是王国的坚盾。<br>“长夜将至，我从现在开始守望，至死方休”<br>“我是黑暗中的利剑，长城上的守卫，守卫王国的坚盾”<br>“我将生命与荣耀献给守夜人”<br>守夜人的精神是什么？是一边背诵誓词一边冲向巨人的葛兰们，是放弃王位只为坚守誓言的伊蒙·塔格利安，是为了目标孤独地在北境之北骑行的班杨·史塔克。<br>“今夜如此，夜夜皆然”。<br>随着艾迪的倒下，也许往后再也不会有人再说出这些誓词了。<br><img src=\"img/BlogImg/8.jpg\" alt=\"\"></p>\n<h3 id=\"夜王\"><a href=\"#夜王\" class=\"headerlink\" title=\"夜王\"></a>夜王</h3><p>行走了整整7季，却在预料之中的一集中以一种戏剧性的方法“死去”。<br>你有多少故事，我曾经幻想能够听到答案，<br>直到你在“The Night King”的乐曲中被匕首洞穿。<br>全片无言，你的故事也许永远是一个谜。<br>有人将你比作现实当中的那些自然灾害。<br>讽刺五大洲的人们如维斯特洛大陆上的人们一样。<br>在内斗中迷失、消亡。<br>也有人认为你只是你。<br>带着小说与剧集当中的某种隐喻。<br>等待有一天编剧或马丁能够给我们答案。<br>维斯特洛大陆上无人会喜欢你，<br>但也许将来吟游歌者会将你提起。<br>因为在生与死，冰与火的交织中，<br>你让我们看到了人性。<br><img src=\"img/BlogImg/9.jpg\" alt=\"\"></p>\n<h2 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h2><p>从S8前两集的命运交合开始，这一集生与死、冰与火的战争战前的气氛烘托可谓做到了极致。从大战开头，多斯拉克骑兵的龙晶弯刀开始熊熊燃烧，战斗的气氛似乎被一下扬起，直到骑兵冲向死亡军团，燃烧的火点开始逐渐熄灭直到消失殆尽，一种冰冷的肃杀与绝望的气息瞬间充满了每个人的内心。再到之后的空战，以及夜王带来的暴雪，无法阻挡尸鬼的燃烧的木栅，每个人物的特写，都使这场长达80分钟的战争刻画无比成功。<br>但同时，细细思考战术，确实有蛮多地方值得吐槽。</p>\n<h3 id=\"战术槽点\"><a href=\"#战术槽点\" class=\"headerlink\" title=\"战术槽点\"></a>战术槽点</h3><ol>\n<li>为什么要怒送多斯拉克骑兵？<br>在临冬城大战之前，琼雪等人对异鬼以及尸鬼明显可以说是知根知底了，制定的战术也是以斩杀夜王为根本目的，因为没杀掉夜王尸鬼是杀不完的。那么临冬城保卫战的主要目的显然就应该是保证临冬城守住较长的时间而不是为了斩杀多少异鬼、尸鬼了。一个以拖延时间为目的的守城战，有什么理由让多斯拉克人在战前对杀不尽的异鬼进行冲锋？这支游牧民族骑兵在日后的内战当中是一个战斗力堪称bug的军队，异鬼没有攻来，你等着就好了，凭什么让自己最嫡系的军队先发起进攻？多斯拉克人即使不参加这场战争的效果也远好于上去送。理想的多斯拉克骑兵使用方法应该是在尸鬼冲锋与无垢者纠缠在一起时从侧面进行冲击，或者等两条龙喷火将尸鬼冲散之时进行收割减轻步兵的压力。导演的目的当然是为了表现如上所述的绝望的气息，但这波操作实在是可以说是一个败笔，为从峡海对岸远道而来的多斯拉克人感到不值。</li>\n<li>守城器械准备的不充分<br>如上所述，这是一个以拖延时间为目的的守城战，那么所依仗的应该是各种诸如燃烧油之类的守城器械。作为集合全北境以及龙妈力量的庞大军队，我认为装备这些显然不是问题，有了这些东西，守城战至少可以再多坚持一倍的时间。再其次就是木栅的设置了，明显可以很好地减缓尸鬼冲锋的速度，必要时还可以点燃（别说暴雪看不见信号了，这个在准备当中并不需要考虑），那么为什么只在临冬城外设置一圈的木栅就十分奇怪了。还有就是弓箭的问题，尸鬼是被夜王魔法复活的，只要被龙晶戳到就会倒下，那么也就意味着一支弓箭至少能杀死一只尸鬼，为什么不多备弓箭手也很古怪了，一轮弓箭齐射就可以给底下步兵和无垢者减小巨大的压力。当然这些都没有1中的错误致命，毕竟都可以归结为物资的紧缺与准备时间的不充分。</li>\n<li>为什么不准备用来射龙的强弩？<br>前面说过，尸鬼虽然疯狂，但其实远比人脆弱，只要被龙晶戳到就会“死去”，那么使用科本的那种强弩显然足够杀死被夜王转化的“韦赛里斯”。就算射不了龙，用重弩清兵也是极好的。当然硬要说的话可以归结于山姆没有那个技术。</li>\n<li>为什么不派骑兵后排切割异鬼<br>一个异鬼死后，由他转化的所有尸鬼都会失去“生命”，因此减缓守城压力的有效办法就是让多斯拉克骑兵去切割异鬼。洞悉了异鬼怕瓦哥利亚钢与龙晶之后，就应该知道除去死亡本身带来的恐惧外，异鬼并没有那么强大。派遣骁勇的多斯拉克骑兵在大战时绕后切割，即使不能成功，也能够吸引尸鬼的注意力，大大减轻守城压力，比直接冲锋效果要好的多。</li>\n</ol>\n<p>总结一下，和异鬼讲排兵布阵，脑子大概是瓦特了，论指挥，我觉得“私生子之战”中的小剥皮要优越的多，此战能胜，也是光之王显灵了。</p>\n<h3 id=\"人物吐槽\"><a href=\"#人物吐槽\" class=\"headerlink\" title=\"人物吐槽\"></a>人物吐槽</h3><ul>\n<li>囧雪<br>囧雪是主角相信在第六季的时候就能够看出来了，但我觉得相对于其他角色的立体与丰满程度，剧本对囧雪（或说伊耿·塔格利安）的塑造实在有些苍白。并没有体现出这个角色应有的包括外交、军事等等方面的智慧。这也是其得名囧·you know nothing·雪诺的一个重要原因。在本次冰与火、生与死之战中，除去空战当中的一点点表现，别的时间基本都在打酱油，要不是二丫神来一笔，满盘皆输。<br><img src=\"img/BlogImg/10.jpg\" alt=\"\"></li>\n<li>布兰·史塔克<br>作为现在在场的究极神棍，打了全场的酱油，不知道他操控乌鸦去干了什么，本来三眼乌鸦的神棍属性应该是一个大挂之前也很期待在大战中能有所表现，结果啥事都没有发生。</li>\n<li>山姆<br>山姆为什么不躲进地窖我觉得没太交代清楚，而且他在这次大战中存活下来完全是因为主角光环，但说好的《权力的游戏》没有主角光环呢？</li>\n</ul>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>这次大战静下来细细品味的话槽点很多，也有很多朋友认为这有点烂尾。但不得不承认，电视剧也是视觉艺术的一种，而这场大战无论是在视觉上还是情感上做的都很到位，算是战争戏中的标杆了。至于烂尾，其实我早就做好这个打算了，我认为一部剧的跨度达到接近10年的情况下，不烂尾是不可能的。毕竟，一百个读者心中有一百个哈姆雷特。剧中的角色经过这些年的沉淀，在不同的观众眼中早已千差万别，每个人所希望的结局都不同，每个人所想看到的情节都有差异，每个人对待情节逻辑的解读都会有偏差。在这样的情况下，剧的走向只有一条，而观众希望的走向却有千万条，因此，也许在你眼中这儿烂尾了，在他眼中情节涉及却恰到好处，我想说的是，享受这部剧融入我们这些年时光的那一部分，看看他带给了我们自己多少变化，享受精彩的表演即可。茶余饭后吵吵闹闹完全可以，顿生龃龉则无必要。<br>享受最后的那三集，希望能带给我们一些惊喜<br>子夜dy记于19年五一之前。</p>\n"},{"title":"树（二）二叉树","date":"2019-02-25T05:01:36.000Z","toc":true,"_content":"## 二叉树的基本名词\n满二叉树：树中每层都含有最多的结点\n完全二叉树：简单来讲就是每一个结点编号都与满二叉树相同的二叉树，满二叉树是一种特殊的完全二叉树。**(lchild=father*2)**\n## 二叉树的几种遍历\nPreOrder Traversal\nInOrder Traversal\nPostOrder Traversal\nLevelOrder Traversal\n**规律：**显然，中序遍历可以与其余三种遍历方法的任何一种完成对二叉树的重建（唯一），而其余三种遍历方法任何一种两两结合都无法构建唯一的二叉树。\n这很好理解，其余三种遍历方法告知了我们根节点的位置，而根据这一点我们可以由中序遍历确定左右子树，然后根据二叉树的递归定义完成重建。<!--more-->\n\n## 相应OJ链接\n### 1020 Tree Traversals\n**试题概述：**\ninput：给定二叉树结点个数，二叉树的后序遍历与中序遍历\noutput：二叉树的层序遍历\n[OJ试题传送门](https://pintia.cn/problem-sets/994805342720868352/problems/994805485033603072)\n```\n#include <iostream>\n#include <queue>\nusing namespace std;\nconst int x = 31;\nint n;\nint in[x], post[x];//inorder and postorder\n\nstruct Nodes\n{\n\tint data;\n\tNodes *lchild, *rchild;\n};\n\n//recreate the BT\nNodes* creat(int postl, int postr, int inl, int inr) \n{\n\tif (postr<postl)\n\t{\n\t\treturn NULL;\n\t}\n\tNodes *root = new Nodes;\n\troot->data = post[postr];\n\tint k;\n\tfor ( k = inl; k < inr; k++)\n\t{\n\t\tif (in[k] == post[postr]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tint numl = k - inl;\n\troot->lchild = creat(postl, postl + numl - 1, inl, k - 1);\n\troot->rchild = creat(postl + numl, postr - 1, k + 1, inr);\n\treturn root;\n}\n\nint cou = 0; //用于计数\n\n//用构建好的BT，打印level order \nvoid print_level(Nodes *root) {\n\tqueue<Nodes*> q;\n\tq.push(root);\n\twhile (!q.empty())\n\t{\n\t\tNodes *node = new Nodes;\n\t\tnode = q.front();\n\t\tq.pop();\n\t\tcout << node->data;\n\t\tcou++;\n\t\tif (cou<n)\n\t\t{\n\t\t\tcout << \" \";\n\t\t}\n\t\tif (node->lchild!=NULL)\n\t\t{\n\t\t\tq.push(node->lchild);\n\t\t}\n\t\tif (node->rchild!=NULL)\n\t\t{\n\t\t\tq.push(node->rchild);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> post[i];\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> in[i];\n\t}\n\tNodes *root = creat(0, n - 1, 0, n - 1);\n\tprint_level(root);\n\treturn 0;\n}\n```\n\n### 1086 Tree Traversals Again\n**试题概述：**\ninput：用堆栈描述二叉树的结构\noutput：打印二叉树的后序遍历\n说明：这道题跟Test 1我认为是没有什么区别的，由题设可知这一系列堆栈的操作其实是给出了二叉树的PreOrder与InOrder，只需做一些简单字符串的处理将其提取出来即可，剩下的与Test 1基本没有区别（构造二叉树以及标准的遍历操作）。\n[OJ试题传送门](https://pintia.cn/problem-sets/994805342720868352/problems/994805380754817024)\n```\n#include <iostream>\n#include<stack>\n#include<string>\nusing namespace std;\nconst int N = 31;\nint\tn;\nint pre[N], in[N];\n\nstruct Nodes\n{\n\tint data;\n\tNodes *lchild, *rchild;\n};\n\n//recreate the BT through the preorder traversal and the inorder traversal\nNodes* creat(int preL, int preR, int inL, int inR) {\n\tif (preR<preL)\n\t{\n\t\treturn NULL;\n\t}\n\tNodes *root = new Nodes;\n\troot->data = pre[preL];\n\tint k;\n\tfor ( k = inL; k < inR; k++)\n\t{\n\t\tif (in[k] == pre[preL])\n\t\t\tbreak;\n\t}\n\tint numL = k - inL;\n\troot->lchild = creat(preL + 1, preL + numL, inL, k-1);\n\troot->rchild = creat(preL + numL + 1, preR, k + 1, inR);\n\treturn root;\n}\n\n//print the BT's postorder traversal\nint cou = 0;\nvoid print_post(Nodes* root) {\n\tif (root==NULL)\n\t{\n\t\treturn;\n\t}\n\tprint_post(root->lchild);\n\tprint_post(root->rchild);\n\tcout << root->data;\n\tcou++;\n\tif (cou<n)\n\t{\n\t\tcout << \" \";\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\tstring s;\n\tint x;\n\tint n1 = 0, n2 = 0;\n\tstack<int> ss;\n\tfor (int i = 0; i < 2*n; i++)\n\t{\n\t\tcin >> s;\n\t\tif (s[1]=='u')\n\t\t{\n\t\t\tcin >> x;\n\t\t\tpre[n1++] = x;\n\t\t\tss.push(x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tin[n2++] = ss.top();\n\t\t\tss.pop();\n\t\t}\n\t}\n\tNodes *root = creat(0, n - 1, 0, n - 1);\n\tprint_post(root);\n\treturn 0;\n}\n```","source":"_posts/binary_tree.md","raw":"---\ntitle: 树（二）二叉树\ndate: 2019-02-25 13:01:36\ntags:\n    - 二叉树\ncategories:\n    - 笔记\ntoc: true\n---\n## 二叉树的基本名词\n满二叉树：树中每层都含有最多的结点\n完全二叉树：简单来讲就是每一个结点编号都与满二叉树相同的二叉树，满二叉树是一种特殊的完全二叉树。**(lchild=father*2)**\n## 二叉树的几种遍历\nPreOrder Traversal\nInOrder Traversal\nPostOrder Traversal\nLevelOrder Traversal\n**规律：**显然，中序遍历可以与其余三种遍历方法的任何一种完成对二叉树的重建（唯一），而其余三种遍历方法任何一种两两结合都无法构建唯一的二叉树。\n这很好理解，其余三种遍历方法告知了我们根节点的位置，而根据这一点我们可以由中序遍历确定左右子树，然后根据二叉树的递归定义完成重建。<!--more-->\n\n## 相应OJ链接\n### 1020 Tree Traversals\n**试题概述：**\ninput：给定二叉树结点个数，二叉树的后序遍历与中序遍历\noutput：二叉树的层序遍历\n[OJ试题传送门](https://pintia.cn/problem-sets/994805342720868352/problems/994805485033603072)\n```\n#include <iostream>\n#include <queue>\nusing namespace std;\nconst int x = 31;\nint n;\nint in[x], post[x];//inorder and postorder\n\nstruct Nodes\n{\n\tint data;\n\tNodes *lchild, *rchild;\n};\n\n//recreate the BT\nNodes* creat(int postl, int postr, int inl, int inr) \n{\n\tif (postr<postl)\n\t{\n\t\treturn NULL;\n\t}\n\tNodes *root = new Nodes;\n\troot->data = post[postr];\n\tint k;\n\tfor ( k = inl; k < inr; k++)\n\t{\n\t\tif (in[k] == post[postr]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tint numl = k - inl;\n\troot->lchild = creat(postl, postl + numl - 1, inl, k - 1);\n\troot->rchild = creat(postl + numl, postr - 1, k + 1, inr);\n\treturn root;\n}\n\nint cou = 0; //用于计数\n\n//用构建好的BT，打印level order \nvoid print_level(Nodes *root) {\n\tqueue<Nodes*> q;\n\tq.push(root);\n\twhile (!q.empty())\n\t{\n\t\tNodes *node = new Nodes;\n\t\tnode = q.front();\n\t\tq.pop();\n\t\tcout << node->data;\n\t\tcou++;\n\t\tif (cou<n)\n\t\t{\n\t\t\tcout << \" \";\n\t\t}\n\t\tif (node->lchild!=NULL)\n\t\t{\n\t\t\tq.push(node->lchild);\n\t\t}\n\t\tif (node->rchild!=NULL)\n\t\t{\n\t\t\tq.push(node->rchild);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> post[i];\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> in[i];\n\t}\n\tNodes *root = creat(0, n - 1, 0, n - 1);\n\tprint_level(root);\n\treturn 0;\n}\n```\n\n### 1086 Tree Traversals Again\n**试题概述：**\ninput：用堆栈描述二叉树的结构\noutput：打印二叉树的后序遍历\n说明：这道题跟Test 1我认为是没有什么区别的，由题设可知这一系列堆栈的操作其实是给出了二叉树的PreOrder与InOrder，只需做一些简单字符串的处理将其提取出来即可，剩下的与Test 1基本没有区别（构造二叉树以及标准的遍历操作）。\n[OJ试题传送门](https://pintia.cn/problem-sets/994805342720868352/problems/994805380754817024)\n```\n#include <iostream>\n#include<stack>\n#include<string>\nusing namespace std;\nconst int N = 31;\nint\tn;\nint pre[N], in[N];\n\nstruct Nodes\n{\n\tint data;\n\tNodes *lchild, *rchild;\n};\n\n//recreate the BT through the preorder traversal and the inorder traversal\nNodes* creat(int preL, int preR, int inL, int inR) {\n\tif (preR<preL)\n\t{\n\t\treturn NULL;\n\t}\n\tNodes *root = new Nodes;\n\troot->data = pre[preL];\n\tint k;\n\tfor ( k = inL; k < inR; k++)\n\t{\n\t\tif (in[k] == pre[preL])\n\t\t\tbreak;\n\t}\n\tint numL = k - inL;\n\troot->lchild = creat(preL + 1, preL + numL, inL, k-1);\n\troot->rchild = creat(preL + numL + 1, preR, k + 1, inR);\n\treturn root;\n}\n\n//print the BT's postorder traversal\nint cou = 0;\nvoid print_post(Nodes* root) {\n\tif (root==NULL)\n\t{\n\t\treturn;\n\t}\n\tprint_post(root->lchild);\n\tprint_post(root->rchild);\n\tcout << root->data;\n\tcou++;\n\tif (cou<n)\n\t{\n\t\tcout << \" \";\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\tstring s;\n\tint x;\n\tint n1 = 0, n2 = 0;\n\tstack<int> ss;\n\tfor (int i = 0; i < 2*n; i++)\n\t{\n\t\tcin >> s;\n\t\tif (s[1]=='u')\n\t\t{\n\t\t\tcin >> x;\n\t\t\tpre[n1++] = x;\n\t\t\tss.push(x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tin[n2++] = ss.top();\n\t\t\tss.pop();\n\t\t}\n\t}\n\tNodes *root = creat(0, n - 1, 0, n - 1);\n\tprint_post(root);\n\treturn 0;\n}\n```","slug":"binary_tree","published":1,"updated":"2020-03-12T18:41:04.870Z","_id":"ck7oiilkp00047wethvpu22fb","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"二叉树的基本名词\"><a href=\"#二叉树的基本名词\" class=\"headerlink\" title=\"二叉树的基本名词\"></a>二叉树的基本名词</h2><p>满二叉树：树中每层都含有最多的结点<br>完全二叉树：简单来讲就是每一个结点编号都与满二叉树相同的二叉树，满二叉树是一种特殊的完全二叉树。<strong>(lchild=father*2)</strong></p>\n<h2 id=\"二叉树的几种遍历\"><a href=\"#二叉树的几种遍历\" class=\"headerlink\" title=\"二叉树的几种遍历\"></a>二叉树的几种遍历</h2><p>PreOrder Traversal<br>InOrder Traversal<br>PostOrder Traversal<br>LevelOrder Traversal<br><strong>规律：</strong>显然，中序遍历可以与其余三种遍历方法的任何一种完成对二叉树的重建（唯一），而其余三种遍历方法任何一种两两结合都无法构建唯一的二叉树。<br>这很好理解，其余三种遍历方法告知了我们根节点的位置，而根据这一点我们可以由中序遍历确定左右子树，然后根据二叉树的递归定义完成重建。<a id=\"more\"></a></p>\n<h2 id=\"相应OJ链接\"><a href=\"#相应OJ链接\" class=\"headerlink\" title=\"相应OJ链接\"></a>相应OJ链接</h2><h3 id=\"1020-Tree-Traversals\"><a href=\"#1020-Tree-Traversals\" class=\"headerlink\" title=\"1020 Tree Traversals\"></a>1020 Tree Traversals</h3><p><strong>试题概述：</strong><br>input：给定二叉树结点个数，二叉树的后序遍历与中序遍历<br>output：二叉树的层序遍历<br><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805485033603072\" target=\"_blank\" rel=\"noopener\">OJ试题传送门</a></p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int x = 31;\nint n;\nint in[x], post[x];//inorder and postorder\n\nstruct Nodes\n{\n    int data;\n    Nodes *lchild, *rchild;\n};\n\n//recreate the BT\nNodes* creat(int postl, int postr, int inl, int inr) \n{\n    if (postr&lt;postl)\n    {\n        return NULL;\n    }\n    Nodes *root = new Nodes;\n    root-&gt;data = post[postr];\n    int k;\n    for ( k = inl; k &lt; inr; k++)\n    {\n        if (in[k] == post[postr]) {\n            break;\n        }\n    }\n    int numl = k - inl;\n    root-&gt;lchild = creat(postl, postl + numl - 1, inl, k - 1);\n    root-&gt;rchild = creat(postl + numl, postr - 1, k + 1, inr);\n    return root;\n}\n\nint cou = 0; //用于计数\n\n//用构建好的BT，打印level order \nvoid print_level(Nodes *root) {\n    queue&lt;Nodes*&gt; q;\n    q.push(root);\n    while (!q.empty())\n    {\n        Nodes *node = new Nodes;\n        node = q.front();\n        q.pop();\n        cout &lt;&lt; node-&gt;data;\n        cou++;\n        if (cou&lt;n)\n        {\n            cout &lt;&lt; &quot; &quot;;\n        }\n        if (node-&gt;lchild!=NULL)\n        {\n            q.push(node-&gt;lchild);\n        }\n        if (node-&gt;rchild!=NULL)\n        {\n            q.push(node-&gt;rchild);\n        }\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; post[i];\n    }\n    for (int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; in[i];\n    }\n    Nodes *root = creat(0, n - 1, 0, n - 1);\n    print_level(root);\n    return 0;\n}</code></pre><h3 id=\"1086-Tree-Traversals-Again\"><a href=\"#1086-Tree-Traversals-Again\" class=\"headerlink\" title=\"1086 Tree Traversals Again\"></a>1086 Tree Traversals Again</h3><p><strong>试题概述：</strong><br>input：用堆栈描述二叉树的结构<br>output：打印二叉树的后序遍历<br>说明：这道题跟Test 1我认为是没有什么区别的，由题设可知这一系列堆栈的操作其实是给出了二叉树的PreOrder与InOrder，只需做一些简单字符串的处理将其提取出来即可，剩下的与Test 1基本没有区别（构造二叉树以及标准的遍历操作）。<br><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805380754817024\" target=\"_blank\" rel=\"noopener\">OJ试题传送门</a></p>\n<pre><code>#include &lt;iostream&gt;\n#include&lt;stack&gt;\n#include&lt;string&gt;\nusing namespace std;\nconst int N = 31;\nint    n;\nint pre[N], in[N];\n\nstruct Nodes\n{\n    int data;\n    Nodes *lchild, *rchild;\n};\n\n//recreate the BT through the preorder traversal and the inorder traversal\nNodes* creat(int preL, int preR, int inL, int inR) {\n    if (preR&lt;preL)\n    {\n        return NULL;\n    }\n    Nodes *root = new Nodes;\n    root-&gt;data = pre[preL];\n    int k;\n    for ( k = inL; k &lt; inR; k++)\n    {\n        if (in[k] == pre[preL])\n            break;\n    }\n    int numL = k - inL;\n    root-&gt;lchild = creat(preL + 1, preL + numL, inL, k-1);\n    root-&gt;rchild = creat(preL + numL + 1, preR, k + 1, inR);\n    return root;\n}\n\n//print the BT&#39;s postorder traversal\nint cou = 0;\nvoid print_post(Nodes* root) {\n    if (root==NULL)\n    {\n        return;\n    }\n    print_post(root-&gt;lchild);\n    print_post(root-&gt;rchild);\n    cout &lt;&lt; root-&gt;data;\n    cou++;\n    if (cou&lt;n)\n    {\n        cout &lt;&lt; &quot; &quot;;\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    string s;\n    int x;\n    int n1 = 0, n2 = 0;\n    stack&lt;int&gt; ss;\n    for (int i = 0; i &lt; 2*n; i++)\n    {\n        cin &gt;&gt; s;\n        if (s[1]==&#39;u&#39;)\n        {\n            cin &gt;&gt; x;\n            pre[n1++] = x;\n            ss.push(x);\n        }\n        else\n        {\n            in[n2++] = ss.top();\n            ss.pop();\n        }\n    }\n    Nodes *root = creat(0, n - 1, 0, n - 1);\n    print_post(root);\n    return 0;\n}</code></pre>","site":{"data":{}},"excerpt":"<h2 id=\"二叉树的基本名词\"><a href=\"#二叉树的基本名词\" class=\"headerlink\" title=\"二叉树的基本名词\"></a>二叉树的基本名词</h2><p>满二叉树：树中每层都含有最多的结点<br>完全二叉树：简单来讲就是每一个结点编号都与满二叉树相同的二叉树，满二叉树是一种特殊的完全二叉树。<strong>(lchild=father*2)</strong></p>\n<h2 id=\"二叉树的几种遍历\"><a href=\"#二叉树的几种遍历\" class=\"headerlink\" title=\"二叉树的几种遍历\"></a>二叉树的几种遍历</h2><p>PreOrder Traversal<br>InOrder Traversal<br>PostOrder Traversal<br>LevelOrder Traversal<br><strong>规律：</strong>显然，中序遍历可以与其余三种遍历方法的任何一种完成对二叉树的重建（唯一），而其余三种遍历方法任何一种两两结合都无法构建唯一的二叉树。<br>这很好理解，其余三种遍历方法告知了我们根节点的位置，而根据这一点我们可以由中序遍历确定左右子树，然后根据二叉树的递归定义完成重建。","more":"</p>\n<h2 id=\"相应OJ链接\"><a href=\"#相应OJ链接\" class=\"headerlink\" title=\"相应OJ链接\"></a>相应OJ链接</h2><h3 id=\"1020-Tree-Traversals\"><a href=\"#1020-Tree-Traversals\" class=\"headerlink\" title=\"1020 Tree Traversals\"></a>1020 Tree Traversals</h3><p><strong>试题概述：</strong><br>input：给定二叉树结点个数，二叉树的后序遍历与中序遍历<br>output：二叉树的层序遍历<br><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805485033603072\" target=\"_blank\" rel=\"noopener\">OJ试题传送门</a></p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int x = 31;\nint n;\nint in[x], post[x];//inorder and postorder\n\nstruct Nodes\n{\n    int data;\n    Nodes *lchild, *rchild;\n};\n\n//recreate the BT\nNodes* creat(int postl, int postr, int inl, int inr) \n{\n    if (postr&lt;postl)\n    {\n        return NULL;\n    }\n    Nodes *root = new Nodes;\n    root-&gt;data = post[postr];\n    int k;\n    for ( k = inl; k &lt; inr; k++)\n    {\n        if (in[k] == post[postr]) {\n            break;\n        }\n    }\n    int numl = k - inl;\n    root-&gt;lchild = creat(postl, postl + numl - 1, inl, k - 1);\n    root-&gt;rchild = creat(postl + numl, postr - 1, k + 1, inr);\n    return root;\n}\n\nint cou = 0; //用于计数\n\n//用构建好的BT，打印level order \nvoid print_level(Nodes *root) {\n    queue&lt;Nodes*&gt; q;\n    q.push(root);\n    while (!q.empty())\n    {\n        Nodes *node = new Nodes;\n        node = q.front();\n        q.pop();\n        cout &lt;&lt; node-&gt;data;\n        cou++;\n        if (cou&lt;n)\n        {\n            cout &lt;&lt; &quot; &quot;;\n        }\n        if (node-&gt;lchild!=NULL)\n        {\n            q.push(node-&gt;lchild);\n        }\n        if (node-&gt;rchild!=NULL)\n        {\n            q.push(node-&gt;rchild);\n        }\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; post[i];\n    }\n    for (int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; in[i];\n    }\n    Nodes *root = creat(0, n - 1, 0, n - 1);\n    print_level(root);\n    return 0;\n}</code></pre><h3 id=\"1086-Tree-Traversals-Again\"><a href=\"#1086-Tree-Traversals-Again\" class=\"headerlink\" title=\"1086 Tree Traversals Again\"></a>1086 Tree Traversals Again</h3><p><strong>试题概述：</strong><br>input：用堆栈描述二叉树的结构<br>output：打印二叉树的后序遍历<br>说明：这道题跟Test 1我认为是没有什么区别的，由题设可知这一系列堆栈的操作其实是给出了二叉树的PreOrder与InOrder，只需做一些简单字符串的处理将其提取出来即可，剩下的与Test 1基本没有区别（构造二叉树以及标准的遍历操作）。<br><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805380754817024\" target=\"_blank\" rel=\"noopener\">OJ试题传送门</a></p>\n<pre><code>#include &lt;iostream&gt;\n#include&lt;stack&gt;\n#include&lt;string&gt;\nusing namespace std;\nconst int N = 31;\nint    n;\nint pre[N], in[N];\n\nstruct Nodes\n{\n    int data;\n    Nodes *lchild, *rchild;\n};\n\n//recreate the BT through the preorder traversal and the inorder traversal\nNodes* creat(int preL, int preR, int inL, int inR) {\n    if (preR&lt;preL)\n    {\n        return NULL;\n    }\n    Nodes *root = new Nodes;\n    root-&gt;data = pre[preL];\n    int k;\n    for ( k = inL; k &lt; inR; k++)\n    {\n        if (in[k] == pre[preL])\n            break;\n    }\n    int numL = k - inL;\n    root-&gt;lchild = creat(preL + 1, preL + numL, inL, k-1);\n    root-&gt;rchild = creat(preL + numL + 1, preR, k + 1, inR);\n    return root;\n}\n\n//print the BT&#39;s postorder traversal\nint cou = 0;\nvoid print_post(Nodes* root) {\n    if (root==NULL)\n    {\n        return;\n    }\n    print_post(root-&gt;lchild);\n    print_post(root-&gt;rchild);\n    cout &lt;&lt; root-&gt;data;\n    cou++;\n    if (cou&lt;n)\n    {\n        cout &lt;&lt; &quot; &quot;;\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    string s;\n    int x;\n    int n1 = 0, n2 = 0;\n    stack&lt;int&gt; ss;\n    for (int i = 0; i &lt; 2*n; i++)\n    {\n        cin &gt;&gt; s;\n        if (s[1]==&#39;u&#39;)\n        {\n            cin &gt;&gt; x;\n            pre[n1++] = x;\n            ss.push(x);\n        }\n        else\n        {\n            in[n2++] = ss.top();\n            ss.pop();\n        }\n    }\n    Nodes *root = creat(0, n - 1, 0, n - 1);\n    print_post(root);\n    return 0;\n}</code></pre>"},{"title":"git的基本命令","date":"2019-03-04T13:26:47.000Z","toc":true,"_content":"## Git 小记\nGit是使用最广泛的版本控制系统，加上GitHub如此闻名（假笑），所以学习Git的一些基本命令还是很重要的，本人是学习了廖雪峰老师的Git相关教程，并将其中Git的一些相关命令记录下来，方便查找，也算一个笔记（本人原来从不记笔记，现在改过自新了）。嘻嘻。\n廖雪峰老师的Git学习[传送门](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n首先应该明确的我认为有这么两个东西，即*工作区（Working Directory）*与*版本库（Repository）*。工作区可以简单理解成存放你工作内容的文件夹（本地），版本库则可以简单理解为记录你修改等操作内容的git生成的一个文件。版本库中又主要包含*暂存区*以及*分支结构master（默认）*。通过git提交项目修改之类的过程，可以简单理解为在本地进行修改后通过**git add**与**git commit**两个命令步骤，由本地到暂存区再到分支结构，这个命令的具体使用，后续会说明，这儿只对原理做一些粗略阐述。\n同时分支结构有啥用呢？我觉得不必细谈，反正就理解为n个人可以一起工作还不会乱的一种机制吧，有Git需求的人想必能够理解，在此不做赘述（三言两语我也讲不清楚嘻嘻）\n<!--more-->\n## Git 常用命令\n选中文件夹不用一个个cd输入路径，选中相应文件夹鼠标右键选择*Git Bash Here*就行。\n**PS：以下说明中<>括号内表示是你要输入的信息**\n### 初始化git仓库\n即将你选中的目录变为git管理的仓库\n```\n$ git init\n```\n\n### 提交你的修改\n提交单个文件，记得加后缀。同时file后用空格分割可以一次add很多文件\n```\n$ git add <file>\n```\n提交一个文件夹\n```\n$ git add <foldname>/\n```\n把暂存区的内容提交到当前分支（Git小记中的第二过程哦），<message>表示的是你对这此提交做的说明，类似于备忘录，方便你以后查看，同时每次使用*commit*命令后系统会生成一个id来记录这次提交，亦能方便查找\n```\n$ git commit -m <yourmessage>\n```\n\n### 查看仓库中文件修改的信息\n查看仓库当前的状态（文件增删，文件内容改变等）\n```\n$ git status\n```\n查看相应文件修改的具体内容\n```\n$ git diff <file>\n```\n显示从最近到最远的提交日志（包括上一节中你输入的说明，时间等内容），较为详细。在其之后加上相应备注后（行二），可以简略输出（id号码等等）\n```\n$ git log\n$ git log --pretty=oneline\n```\n显示你的每一次命令（可以用来查看之前的每一步操作）\n```\n$ git reflog\n```\n\n### 版本回退\nGit中有一个HEAD指针指向当前版本，而HEAD^表示上个版本，HEAD^^表示上上个版本，HEAD~n表示第n个版本。\n回退到之前的版本于回退到相应版本的命令如下，其中<commit id>相信你已经明白了，这个就是上一节信息当中的版本号。\n```\n$ git reset --hard HEAD^\n$ git reset --hard <commit id>\n```\n撤销工作区的修改，请注意这里的关键词*工作区*，也就是说这个操作只能将你还没有执行**add**命令的文件修改去除。\n```\n$ git checkout -- <file>\n```\n要去除已经使用add进入暂存区的修改，请使用以下命令命令。第一行是将暂存区的修改撤销掉（unstage），第二行就接着使用上面的命令就好，不重复写了。\n```\n$ git reset HEAD <file>\n```\n以上便是应对“工作区修改”、“暂存区修改”、“已提交”这三种情况的版本回退命令，足够应付大部分时间了。\n\n### 删除文件\n第一行命令：删除本地文件。\n第二行命令：从版本库中删除文件(删除后记得再使用commit命令提交一次)\n至于删错了恢复，请见上一节。\n```\n$ rm <file>\n$ git <file>\n```\n\n### 分支操作\n分支在第一大节也有提到，这里列出一些常用操作\n第一行为创建名称为<name>的分支，并将当前分支切换为<name>。第二行为切换当前分支为<name>。（同时，master为默认主分支）\n```\n$ git checkout -b <name>\n$ git checkout <name>\n```\n查看所有分支\n```\n$ git branch\n```\n第一行为把分支<name>合并到当前分支中。第二行为删除<name>分支。第三行为强行删除未进行合并操作的<name>分支。\n```\n$ git merge <name>\n$ git branch -d <name>\n$ git branch -D <name>\n```\n查看分区合并历史以及合并图\n```\n$ git log --graph --pretty=oneline --abbrev-commit\n```\n**PS：**同时应注意，当你在master分支与新建的分支上都进行了修改并执行了commit命令时，直接合并可能会把报错，然后你得去相关文件中手动修改一下再commit。git会在相应文件中给你进行两次修改的醒目标注，很方便\n\n### 标签操作\n大家都知道软件会有版本，比如adobe公司的一堆CS和CC，tag在Git中就起到给一个commit设定一个除去id外更容易记住的别名的作用，方便查找。默认设置tag是设置在最近一次commit上。\n以下第一行为设置一个标签；第二行为在id为commit_id的commit上设置标签；第三行在第二行的基础上给tag一点说明；第四行为查看现有所有标签；第五行查看相应标签详细信息；第六行删除一个本地标签。\n```\n$ git tag <tagname>\n$ git tag <tagname> <commit_id>\n$ git tag -a <tagname> -m <message> <commit_id>\n$ git tag\n$ git show <tagname>\ngit tag -d <tagname>\n```\n\n### 远程操作\n前面提到了GitHub，自然学git远程操作（或者理解成跟GitHub玩游戏也成）是必不可少的，本地下载了git咋和GitHub扯上关系就略过不谈了，以下记录一些相关常用操作。\n刚下好git打开就会有以下这些玩意，你也可以随时使用相应命令查看相应配置，使用**git config -1**可以查看很多信息，试试就知道。\n```\n$ git config --global user.email \"your_email@qq.com\"\n$ git config __global user.name \"your_github_name\"\n```\n将本地库与远程库相关联（origin是远程库的默认名称）\n```\n$ git remote add origin git@<server-name:path/repo-name.git>\n```\n使用*push*命令，将本地库的内容推送到远程库上(第一次)，之后每次本地修改后若要推送可用第二行命令\n```\n$ git push -u origin master\n$ git push origin master\n```\n将GitHub上的内容克隆到本地（注意你要是想对其有修改并推送，应先fork到自己的库里，再克隆）。输入git clone后将你所要克隆的网址复制后加上就好。\n```\n$ git clone <http:~>\n```\n查看远程库详细相关信息\n```\n$ git remote -v\n```\n建立远程库dev分支与本地dev的链接\n```\n$ git branch --set-upstream-to=origin/dev dev\n```\n把最新的提交抓取下来\n```\n$ git pull\n```\n\n### 有关参考\n其实很多命令压根不用记，但要去看每个操作下来git给的提示，很多后续如何操作已经写好了，你所需的往往只是做一做英语阅读。","source":"_posts/git.md","raw":"---\ntitle: git的基本命令\ndate: 2019-03-04 21:26:47\ntags:\n    - git\ncategories:\n    - 命令\n    - git\ntoc: true\n---\n## Git 小记\nGit是使用最广泛的版本控制系统，加上GitHub如此闻名（假笑），所以学习Git的一些基本命令还是很重要的，本人是学习了廖雪峰老师的Git相关教程，并将其中Git的一些相关命令记录下来，方便查找，也算一个笔记（本人原来从不记笔记，现在改过自新了）。嘻嘻。\n廖雪峰老师的Git学习[传送门](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n首先应该明确的我认为有这么两个东西，即*工作区（Working Directory）*与*版本库（Repository）*。工作区可以简单理解成存放你工作内容的文件夹（本地），版本库则可以简单理解为记录你修改等操作内容的git生成的一个文件。版本库中又主要包含*暂存区*以及*分支结构master（默认）*。通过git提交项目修改之类的过程，可以简单理解为在本地进行修改后通过**git add**与**git commit**两个命令步骤，由本地到暂存区再到分支结构，这个命令的具体使用，后续会说明，这儿只对原理做一些粗略阐述。\n同时分支结构有啥用呢？我觉得不必细谈，反正就理解为n个人可以一起工作还不会乱的一种机制吧，有Git需求的人想必能够理解，在此不做赘述（三言两语我也讲不清楚嘻嘻）\n<!--more-->\n## Git 常用命令\n选中文件夹不用一个个cd输入路径，选中相应文件夹鼠标右键选择*Git Bash Here*就行。\n**PS：以下说明中<>括号内表示是你要输入的信息**\n### 初始化git仓库\n即将你选中的目录变为git管理的仓库\n```\n$ git init\n```\n\n### 提交你的修改\n提交单个文件，记得加后缀。同时file后用空格分割可以一次add很多文件\n```\n$ git add <file>\n```\n提交一个文件夹\n```\n$ git add <foldname>/\n```\n把暂存区的内容提交到当前分支（Git小记中的第二过程哦），<message>表示的是你对这此提交做的说明，类似于备忘录，方便你以后查看，同时每次使用*commit*命令后系统会生成一个id来记录这次提交，亦能方便查找\n```\n$ git commit -m <yourmessage>\n```\n\n### 查看仓库中文件修改的信息\n查看仓库当前的状态（文件增删，文件内容改变等）\n```\n$ git status\n```\n查看相应文件修改的具体内容\n```\n$ git diff <file>\n```\n显示从最近到最远的提交日志（包括上一节中你输入的说明，时间等内容），较为详细。在其之后加上相应备注后（行二），可以简略输出（id号码等等）\n```\n$ git log\n$ git log --pretty=oneline\n```\n显示你的每一次命令（可以用来查看之前的每一步操作）\n```\n$ git reflog\n```\n\n### 版本回退\nGit中有一个HEAD指针指向当前版本，而HEAD^表示上个版本，HEAD^^表示上上个版本，HEAD~n表示第n个版本。\n回退到之前的版本于回退到相应版本的命令如下，其中<commit id>相信你已经明白了，这个就是上一节信息当中的版本号。\n```\n$ git reset --hard HEAD^\n$ git reset --hard <commit id>\n```\n撤销工作区的修改，请注意这里的关键词*工作区*，也就是说这个操作只能将你还没有执行**add**命令的文件修改去除。\n```\n$ git checkout -- <file>\n```\n要去除已经使用add进入暂存区的修改，请使用以下命令命令。第一行是将暂存区的修改撤销掉（unstage），第二行就接着使用上面的命令就好，不重复写了。\n```\n$ git reset HEAD <file>\n```\n以上便是应对“工作区修改”、“暂存区修改”、“已提交”这三种情况的版本回退命令，足够应付大部分时间了。\n\n### 删除文件\n第一行命令：删除本地文件。\n第二行命令：从版本库中删除文件(删除后记得再使用commit命令提交一次)\n至于删错了恢复，请见上一节。\n```\n$ rm <file>\n$ git <file>\n```\n\n### 分支操作\n分支在第一大节也有提到，这里列出一些常用操作\n第一行为创建名称为<name>的分支，并将当前分支切换为<name>。第二行为切换当前分支为<name>。（同时，master为默认主分支）\n```\n$ git checkout -b <name>\n$ git checkout <name>\n```\n查看所有分支\n```\n$ git branch\n```\n第一行为把分支<name>合并到当前分支中。第二行为删除<name>分支。第三行为强行删除未进行合并操作的<name>分支。\n```\n$ git merge <name>\n$ git branch -d <name>\n$ git branch -D <name>\n```\n查看分区合并历史以及合并图\n```\n$ git log --graph --pretty=oneline --abbrev-commit\n```\n**PS：**同时应注意，当你在master分支与新建的分支上都进行了修改并执行了commit命令时，直接合并可能会把报错，然后你得去相关文件中手动修改一下再commit。git会在相应文件中给你进行两次修改的醒目标注，很方便\n\n### 标签操作\n大家都知道软件会有版本，比如adobe公司的一堆CS和CC，tag在Git中就起到给一个commit设定一个除去id外更容易记住的别名的作用，方便查找。默认设置tag是设置在最近一次commit上。\n以下第一行为设置一个标签；第二行为在id为commit_id的commit上设置标签；第三行在第二行的基础上给tag一点说明；第四行为查看现有所有标签；第五行查看相应标签详细信息；第六行删除一个本地标签。\n```\n$ git tag <tagname>\n$ git tag <tagname> <commit_id>\n$ git tag -a <tagname> -m <message> <commit_id>\n$ git tag\n$ git show <tagname>\ngit tag -d <tagname>\n```\n\n### 远程操作\n前面提到了GitHub，自然学git远程操作（或者理解成跟GitHub玩游戏也成）是必不可少的，本地下载了git咋和GitHub扯上关系就略过不谈了，以下记录一些相关常用操作。\n刚下好git打开就会有以下这些玩意，你也可以随时使用相应命令查看相应配置，使用**git config -1**可以查看很多信息，试试就知道。\n```\n$ git config --global user.email \"your_email@qq.com\"\n$ git config __global user.name \"your_github_name\"\n```\n将本地库与远程库相关联（origin是远程库的默认名称）\n```\n$ git remote add origin git@<server-name:path/repo-name.git>\n```\n使用*push*命令，将本地库的内容推送到远程库上(第一次)，之后每次本地修改后若要推送可用第二行命令\n```\n$ git push -u origin master\n$ git push origin master\n```\n将GitHub上的内容克隆到本地（注意你要是想对其有修改并推送，应先fork到自己的库里，再克隆）。输入git clone后将你所要克隆的网址复制后加上就好。\n```\n$ git clone <http:~>\n```\n查看远程库详细相关信息\n```\n$ git remote -v\n```\n建立远程库dev分支与本地dev的链接\n```\n$ git branch --set-upstream-to=origin/dev dev\n```\n把最新的提交抓取下来\n```\n$ git pull\n```\n\n### 有关参考\n其实很多命令压根不用记，但要去看每个操作下来git给的提示，很多后续如何操作已经写好了，你所需的往往只是做一做英语阅读。","slug":"git","published":1,"updated":"2020-03-12T18:41:04.871Z","_id":"ck7oiilkq00057wet50hi0u7r","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Git-小记\"><a href=\"#Git-小记\" class=\"headerlink\" title=\"Git 小记\"></a>Git 小记</h2><p>Git是使用最广泛的版本控制系统，加上GitHub如此闻名（假笑），所以学习Git的一些基本命令还是很重要的，本人是学习了廖雪峰老师的Git相关教程，并将其中Git的一些相关命令记录下来，方便查找，也算一个笔记（本人原来从不记笔记，现在改过自新了）。嘻嘻。<br>廖雪峰老师的Git学习<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">传送门</a><br>首先应该明确的我认为有这么两个东西，即<em>工作区（Working Directory）</em>与<em>版本库（Repository）</em>。工作区可以简单理解成存放你工作内容的文件夹（本地），版本库则可以简单理解为记录你修改等操作内容的git生成的一个文件。版本库中又主要包含<em>暂存区</em>以及<em>分支结构master（默认）</em>。通过git提交项目修改之类的过程，可以简单理解为在本地进行修改后通过<strong>git add</strong>与<strong>git commit</strong>两个命令步骤，由本地到暂存区再到分支结构，这个命令的具体使用，后续会说明，这儿只对原理做一些粗略阐述。<br>同时分支结构有啥用呢？我觉得不必细谈，反正就理解为n个人可以一起工作还不会乱的一种机制吧，有Git需求的人想必能够理解，在此不做赘述（三言两语我也讲不清楚嘻嘻）</p>\n<a id=\"more\"></a>\n<h2 id=\"Git-常用命令\"><a href=\"#Git-常用命令\" class=\"headerlink\" title=\"Git 常用命令\"></a>Git 常用命令</h2><p>选中文件夹不用一个个cd输入路径，选中相应文件夹鼠标右键选择<em>Git Bash Here</em>就行。<br><strong>PS：以下说明中&lt;&gt;括号内表示是你要输入的信息</strong></p>\n<h3 id=\"初始化git仓库\"><a href=\"#初始化git仓库\" class=\"headerlink\" title=\"初始化git仓库\"></a>初始化git仓库</h3><p>即将你选中的目录变为git管理的仓库</p>\n<pre><code>$ git init</code></pre><h3 id=\"提交你的修改\"><a href=\"#提交你的修改\" class=\"headerlink\" title=\"提交你的修改\"></a>提交你的修改</h3><p>提交单个文件，记得加后缀。同时file后用空格分割可以一次add很多文件</p>\n<pre><code>$ git add &lt;file&gt;</code></pre><p>提交一个文件夹</p>\n<pre><code>$ git add &lt;foldname&gt;/</code></pre><p>把暂存区的内容提交到当前分支（Git小记中的第二过程哦），<message>表示的是你对这此提交做的说明，类似于备忘录，方便你以后查看，同时每次使用<em>commit</em>命令后系统会生成一个id来记录这次提交，亦能方便查找</p>\n<pre><code>$ git commit -m &lt;yourmessage&gt;</code></pre><h3 id=\"查看仓库中文件修改的信息\"><a href=\"#查看仓库中文件修改的信息\" class=\"headerlink\" title=\"查看仓库中文件修改的信息\"></a>查看仓库中文件修改的信息</h3><p>查看仓库当前的状态（文件增删，文件内容改变等）</p>\n<pre><code>$ git status</code></pre><p>查看相应文件修改的具体内容</p>\n<pre><code>$ git diff &lt;file&gt;</code></pre><p>显示从最近到最远的提交日志（包括上一节中你输入的说明，时间等内容），较为详细。在其之后加上相应备注后（行二），可以简略输出（id号码等等）</p>\n<pre><code>$ git log\n$ git log --pretty=oneline</code></pre><p>显示你的每一次命令（可以用来查看之前的每一步操作）</p>\n<pre><code>$ git reflog</code></pre><h3 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h3><p>Git中有一个HEAD指针指向当前版本，而HEAD^表示上个版本，HEAD^^表示上上个版本，HEAD~n表示第n个版本。<br>回退到之前的版本于回退到相应版本的命令如下，其中<commit id>相信你已经明白了，这个就是上一节信息当中的版本号。</p>\n<pre><code>$ git reset --hard HEAD^\n$ git reset --hard &lt;commit id&gt;</code></pre><p>撤销工作区的修改，请注意这里的关键词<em>工作区</em>，也就是说这个操作只能将你还没有执行<strong>add</strong>命令的文件修改去除。</p>\n<pre><code>$ git checkout -- &lt;file&gt;</code></pre><p>要去除已经使用add进入暂存区的修改，请使用以下命令命令。第一行是将暂存区的修改撤销掉（unstage），第二行就接着使用上面的命令就好，不重复写了。</p>\n<pre><code>$ git reset HEAD &lt;file&gt;</code></pre><p>以上便是应对“工作区修改”、“暂存区修改”、“已提交”这三种情况的版本回退命令，足够应付大部分时间了。</p>\n<h3 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h3><p>第一行命令：删除本地文件。<br>第二行命令：从版本库中删除文件(删除后记得再使用commit命令提交一次)<br>至于删错了恢复，请见上一节。</p>\n<pre><code>$ rm &lt;file&gt;\n$ git &lt;file&gt;</code></pre><h3 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h3><p>分支在第一大节也有提到，这里列出一些常用操作<br>第一行为创建名称为<name>的分支，并将当前分支切换为<name>。第二行为切换当前分支为<name>。（同时，master为默认主分支）</p>\n<pre><code>$ git checkout -b &lt;name&gt;\n$ git checkout &lt;name&gt;</code></pre><p>查看所有分支</p>\n<pre><code>$ git branch</code></pre><p>第一行为把分支<name>合并到当前分支中。第二行为删除<name>分支。第三行为强行删除未进行合并操作的<name>分支。</p>\n<pre><code>$ git merge &lt;name&gt;\n$ git branch -d &lt;name&gt;\n$ git branch -D &lt;name&gt;</code></pre><p>查看分区合并历史以及合并图</p>\n<pre><code>$ git log --graph --pretty=oneline --abbrev-commit</code></pre><p><strong>PS：</strong>同时应注意，当你在master分支与新建的分支上都进行了修改并执行了commit命令时，直接合并可能会把报错，然后你得去相关文件中手动修改一下再commit。git会在相应文件中给你进行两次修改的醒目标注，很方便</p>\n<h3 id=\"标签操作\"><a href=\"#标签操作\" class=\"headerlink\" title=\"标签操作\"></a>标签操作</h3><p>大家都知道软件会有版本，比如adobe公司的一堆CS和CC，tag在Git中就起到给一个commit设定一个除去id外更容易记住的别名的作用，方便查找。默认设置tag是设置在最近一次commit上。<br>以下第一行为设置一个标签；第二行为在id为commit_id的commit上设置标签；第三行在第二行的基础上给tag一点说明；第四行为查看现有所有标签；第五行查看相应标签详细信息；第六行删除一个本地标签。</p>\n<pre><code>$ git tag &lt;tagname&gt;\n$ git tag &lt;tagname&gt; &lt;commit_id&gt;\n$ git tag -a &lt;tagname&gt; -m &lt;message&gt; &lt;commit_id&gt;\n$ git tag\n$ git show &lt;tagname&gt;\ngit tag -d &lt;tagname&gt;</code></pre><h3 id=\"远程操作\"><a href=\"#远程操作\" class=\"headerlink\" title=\"远程操作\"></a>远程操作</h3><p>前面提到了GitHub，自然学git远程操作（或者理解成跟GitHub玩游戏也成）是必不可少的，本地下载了git咋和GitHub扯上关系就略过不谈了，以下记录一些相关常用操作。<br>刚下好git打开就会有以下这些玩意，你也可以随时使用相应命令查看相应配置，使用<strong>git config -1</strong>可以查看很多信息，试试就知道。</p>\n<pre><code>$ git config --global user.email &quot;your_email@qq.com&quot;\n$ git config __global user.name &quot;your_github_name&quot;</code></pre><p>将本地库与远程库相关联（origin是远程库的默认名称）</p>\n<pre><code>$ git remote add origin git@&lt;server-name:path/repo-name.git&gt;</code></pre><p>使用<em>push</em>命令，将本地库的内容推送到远程库上(第一次)，之后每次本地修改后若要推送可用第二行命令</p>\n<pre><code>$ git push -u origin master\n$ git push origin master</code></pre><p>将GitHub上的内容克隆到本地（注意你要是想对其有修改并推送，应先fork到自己的库里，再克隆）。输入git clone后将你所要克隆的网址复制后加上就好。</p>\n<pre><code>$ git clone &lt;http:~&gt;</code></pre><p>查看远程库详细相关信息</p>\n<pre><code>$ git remote -v</code></pre><p>建立远程库dev分支与本地dev的链接</p>\n<pre><code>$ git branch --set-upstream-to=origin/dev dev</code></pre><p>把最新的提交抓取下来</p>\n<pre><code>$ git pull</code></pre><h3 id=\"有关参考\"><a href=\"#有关参考\" class=\"headerlink\" title=\"有关参考\"></a>有关参考</h3><p>其实很多命令压根不用记，但要去看每个操作下来git给的提示，很多后续如何操作已经写好了，你所需的往往只是做一做英语阅读。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Git-小记\"><a href=\"#Git-小记\" class=\"headerlink\" title=\"Git 小记\"></a>Git 小记</h2><p>Git是使用最广泛的版本控制系统，加上GitHub如此闻名（假笑），所以学习Git的一些基本命令还是很重要的，本人是学习了廖雪峰老师的Git相关教程，并将其中Git的一些相关命令记录下来，方便查找，也算一个笔记（本人原来从不记笔记，现在改过自新了）。嘻嘻。<br>廖雪峰老师的Git学习<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">传送门</a><br>首先应该明确的我认为有这么两个东西，即<em>工作区（Working Directory）</em>与<em>版本库（Repository）</em>。工作区可以简单理解成存放你工作内容的文件夹（本地），版本库则可以简单理解为记录你修改等操作内容的git生成的一个文件。版本库中又主要包含<em>暂存区</em>以及<em>分支结构master（默认）</em>。通过git提交项目修改之类的过程，可以简单理解为在本地进行修改后通过<strong>git add</strong>与<strong>git commit</strong>两个命令步骤，由本地到暂存区再到分支结构，这个命令的具体使用，后续会说明，这儿只对原理做一些粗略阐述。<br>同时分支结构有啥用呢？我觉得不必细谈，反正就理解为n个人可以一起工作还不会乱的一种机制吧，有Git需求的人想必能够理解，在此不做赘述（三言两语我也讲不清楚嘻嘻）</p>","more":"<h2 id=\"Git-常用命令\"><a href=\"#Git-常用命令\" class=\"headerlink\" title=\"Git 常用命令\"></a>Git 常用命令</h2><p>选中文件夹不用一个个cd输入路径，选中相应文件夹鼠标右键选择<em>Git Bash Here</em>就行。<br><strong>PS：以下说明中&lt;&gt;括号内表示是你要输入的信息</strong></p>\n<h3 id=\"初始化git仓库\"><a href=\"#初始化git仓库\" class=\"headerlink\" title=\"初始化git仓库\"></a>初始化git仓库</h3><p>即将你选中的目录变为git管理的仓库</p>\n<pre><code>$ git init</code></pre><h3 id=\"提交你的修改\"><a href=\"#提交你的修改\" class=\"headerlink\" title=\"提交你的修改\"></a>提交你的修改</h3><p>提交单个文件，记得加后缀。同时file后用空格分割可以一次add很多文件</p>\n<pre><code>$ git add &lt;file&gt;</code></pre><p>提交一个文件夹</p>\n<pre><code>$ git add &lt;foldname&gt;/</code></pre><p>把暂存区的内容提交到当前分支（Git小记中的第二过程哦），<message>表示的是你对这此提交做的说明，类似于备忘录，方便你以后查看，同时每次使用<em>commit</em>命令后系统会生成一个id来记录这次提交，亦能方便查找</p>\n<pre><code>$ git commit -m &lt;yourmessage&gt;</code></pre><h3 id=\"查看仓库中文件修改的信息\"><a href=\"#查看仓库中文件修改的信息\" class=\"headerlink\" title=\"查看仓库中文件修改的信息\"></a>查看仓库中文件修改的信息</h3><p>查看仓库当前的状态（文件增删，文件内容改变等）</p>\n<pre><code>$ git status</code></pre><p>查看相应文件修改的具体内容</p>\n<pre><code>$ git diff &lt;file&gt;</code></pre><p>显示从最近到最远的提交日志（包括上一节中你输入的说明，时间等内容），较为详细。在其之后加上相应备注后（行二），可以简略输出（id号码等等）</p>\n<pre><code>$ git log\n$ git log --pretty=oneline</code></pre><p>显示你的每一次命令（可以用来查看之前的每一步操作）</p>\n<pre><code>$ git reflog</code></pre><h3 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h3><p>Git中有一个HEAD指针指向当前版本，而HEAD^表示上个版本，HEAD^^表示上上个版本，HEAD~n表示第n个版本。<br>回退到之前的版本于回退到相应版本的命令如下，其中<commit id>相信你已经明白了，这个就是上一节信息当中的版本号。</p>\n<pre><code>$ git reset --hard HEAD^\n$ git reset --hard &lt;commit id&gt;</code></pre><p>撤销工作区的修改，请注意这里的关键词<em>工作区</em>，也就是说这个操作只能将你还没有执行<strong>add</strong>命令的文件修改去除。</p>\n<pre><code>$ git checkout -- &lt;file&gt;</code></pre><p>要去除已经使用add进入暂存区的修改，请使用以下命令命令。第一行是将暂存区的修改撤销掉（unstage），第二行就接着使用上面的命令就好，不重复写了。</p>\n<pre><code>$ git reset HEAD &lt;file&gt;</code></pre><p>以上便是应对“工作区修改”、“暂存区修改”、“已提交”这三种情况的版本回退命令，足够应付大部分时间了。</p>\n<h3 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h3><p>第一行命令：删除本地文件。<br>第二行命令：从版本库中删除文件(删除后记得再使用commit命令提交一次)<br>至于删错了恢复，请见上一节。</p>\n<pre><code>$ rm &lt;file&gt;\n$ git &lt;file&gt;</code></pre><h3 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h3><p>分支在第一大节也有提到，这里列出一些常用操作<br>第一行为创建名称为<name>的分支，并将当前分支切换为<name>。第二行为切换当前分支为<name>。（同时，master为默认主分支）</p>\n<pre><code>$ git checkout -b &lt;name&gt;\n$ git checkout &lt;name&gt;</code></pre><p>查看所有分支</p>\n<pre><code>$ git branch</code></pre><p>第一行为把分支<name>合并到当前分支中。第二行为删除<name>分支。第三行为强行删除未进行合并操作的<name>分支。</p>\n<pre><code>$ git merge &lt;name&gt;\n$ git branch -d &lt;name&gt;\n$ git branch -D &lt;name&gt;</code></pre><p>查看分区合并历史以及合并图</p>\n<pre><code>$ git log --graph --pretty=oneline --abbrev-commit</code></pre><p><strong>PS：</strong>同时应注意，当你在master分支与新建的分支上都进行了修改并执行了commit命令时，直接合并可能会把报错，然后你得去相关文件中手动修改一下再commit。git会在相应文件中给你进行两次修改的醒目标注，很方便</p>\n<h3 id=\"标签操作\"><a href=\"#标签操作\" class=\"headerlink\" title=\"标签操作\"></a>标签操作</h3><p>大家都知道软件会有版本，比如adobe公司的一堆CS和CC，tag在Git中就起到给一个commit设定一个除去id外更容易记住的别名的作用，方便查找。默认设置tag是设置在最近一次commit上。<br>以下第一行为设置一个标签；第二行为在id为commit_id的commit上设置标签；第三行在第二行的基础上给tag一点说明；第四行为查看现有所有标签；第五行查看相应标签详细信息；第六行删除一个本地标签。</p>\n<pre><code>$ git tag &lt;tagname&gt;\n$ git tag &lt;tagname&gt; &lt;commit_id&gt;\n$ git tag -a &lt;tagname&gt; -m &lt;message&gt; &lt;commit_id&gt;\n$ git tag\n$ git show &lt;tagname&gt;\ngit tag -d &lt;tagname&gt;</code></pre><h3 id=\"远程操作\"><a href=\"#远程操作\" class=\"headerlink\" title=\"远程操作\"></a>远程操作</h3><p>前面提到了GitHub，自然学git远程操作（或者理解成跟GitHub玩游戏也成）是必不可少的，本地下载了git咋和GitHub扯上关系就略过不谈了，以下记录一些相关常用操作。<br>刚下好git打开就会有以下这些玩意，你也可以随时使用相应命令查看相应配置，使用<strong>git config -1</strong>可以查看很多信息，试试就知道。</p>\n<pre><code>$ git config --global user.email &quot;your_email@qq.com&quot;\n$ git config __global user.name &quot;your_github_name&quot;</code></pre><p>将本地库与远程库相关联（origin是远程库的默认名称）</p>\n<pre><code>$ git remote add origin git@&lt;server-name:path/repo-name.git&gt;</code></pre><p>使用<em>push</em>命令，将本地库的内容推送到远程库上(第一次)，之后每次本地修改后若要推送可用第二行命令</p>\n<pre><code>$ git push -u origin master\n$ git push origin master</code></pre><p>将GitHub上的内容克隆到本地（注意你要是想对其有修改并推送，应先fork到自己的库里，再克隆）。输入git clone后将你所要克隆的网址复制后加上就好。</p>\n<pre><code>$ git clone &lt;http:~&gt;</code></pre><p>查看远程库详细相关信息</p>\n<pre><code>$ git remote -v</code></pre><p>建立远程库dev分支与本地dev的链接</p>\n<pre><code>$ git branch --set-upstream-to=origin/dev dev</code></pre><p>把最新的提交抓取下来</p>\n<pre><code>$ git pull</code></pre><h3 id=\"有关参考\"><a href=\"#有关参考\" class=\"headerlink\" title=\"有关参考\"></a>有关参考</h3><p>其实很多命令压根不用记，但要去看每个操作下来git给的提示，很多后续如何操作已经写好了，你所需的往往只是做一做英语阅读。</p>"},{"title":"latex基本用法","date":"2019-02-20T13:48:16.000Z","toc":true,"_content":"谈到码字与排版大家首先想到的一定是word等办公软件，即一些“所见即所得”的排版与“码字”软件，这些软件功能强大足够应付日常的一切工作。\n但当大家有英文论文的写作与排版需求时，尤其是面对美赛这种“英文写作比赛”时，输出的PDF文件的美观性就尤其重要了（本人也是因为美赛才接触了latex这个让人又爱又恨的软件）。出于实用与给自己进行用法记录的目的，我也就不拿软件的历史之类的凑字数了，直接上可以产生效果的东西。\n**PS：**我个人认为latex 与HTML之类的标签语言十分相似，学习成本低，易用难精（也没必要精），因此本文只针对相应排版的具体问题，不涉及任何latex的理论与底层问题，想精学的朋友建议移步刘海洋的《LaTeX入门》（可以联系本人电子版），同时有其他问题建议百度搜索或混混相应论坛，这儿给一个tackle problems的[传送门](http://www.latexstudio.net/),下载TEXLive请移步[传送](http://tug.org/texlive/),选择相应版本后耐心等待。<!--more-->\n**以下未经说明使用TeXworks编辑器，编译方式选择XELaTeX**\n## 目录及其相关设置\n```\n\\tableofcontents            %插入目录，由于latex的“交叉引用”，注意应编译两次\n\\thispagestyle{empty}       %设置目录页不计入页码，用于文章其他部位亦可\n\\clearpage                  %该语句使得文章后面内容另起一页显示，此处使得目录单独写在一页\n\\setcounter{page}{1}        %设置目录后正文第一页目录计数为1\n```\n\n## 正文文章结构的设置\n```\n\\section{一级标题内容}\n正文\n\\subsection{二级标题内容}\n正文\n\\subsubsection{三级标题内容}\n正文\n```\n以上模式相信用过word的朋友都很容易理解了，同时通过上一条所述的目录内容会根据正文中的\\section{}等标签自动生成文章目录，十分方便。\n\n## 字体字号的常用设置\nlatex中包含了很多种字体，但如果没有特殊需求，我认为以下内容完全能够满足需要了\n```\n\\textbf{内容}       %将大括号内字体加粗\n\\textit{内容}       %将大括号内字体变为斜体\n\\emph{内容}         %强调括号内字体内容\n```\n\n## 列表环境\n### 有计数的列表\n```\n\\begin{enumerate}\n    \\item 内容1\n    \\item 内容2\n\\end{enumerate}\n```\n### 无计数的列表（bulleted list）\n```\n\\begin{itemize}\n    \\item 内容1\n    \\item 内容2\n\\end{itemize}\n```\n### 复杂列表\n同时上述各个列表可以相互嵌套，如下即为在一个bulleted list下又嵌套了一个计数列表。\n```\n\\begin{itemize}\n    \\item 内容1\n    \\begin{enumerate}\n        \\item 内容1.1\n        \\item 内容1.2\n    \\end{enumerate}\n\\end{itemize}\n```\n\n## 插入图片\n在正文中插入图片很简单，如果你没有特殊的需求copy下面这段代码并且更改里面一些参数完全够用了，图片的资源文件和其他开发都是一样的，建议在根目录下建立一个img文件夹专门存放，同时记得将文件的命名与格式搞清楚。\n```\n%下行代码中[]内为可选项意义分别为\n%h 代表here,将表格排在当前文字位置\n%t 表示将表格放在下一页的 top (页首)\n%b 表示将表格放在当前页的 bottom (底部)\n%! 表示忽略美观因素，尽可能按照参数指定的方式来处理表格浮动位置\n\\begin{figure}[h]\n    \\centering      %使图片居中\n    %下面这行可以简单理解为载入图片的函数，width=0.6\\textwidth是将图片等比例设为宽度为0.6个间页长（排版的名词不大记得可以简单这么理解），你也可以使用px之类的将其设置为定宽。后面大括号内一定得是如image1.jpg这种格式，后缀不能漏\n    \\includegraphics[width=0.6\\textwidth]{加后缀的图片名}\n    \\caption{图片的名称}    %大括号内为页面显示的图片的名称\n    \\label{fig:1}          %设置图片的标签方便交叉引用\n\\end{figure}\n```\n\n## 插入表格\n表格是一切论文或其他议论文体中非常常见的数据表达形式，由于数据的不同各种类型多种多样，不想上节所述的图片那么一段代码打天下，所以表格内容较多，我尽量将我认为的常用的表格形式的通用代码附上，同时也列举一下表格的基本形式，方便读者进行变换。\n### 普通表格\n普通表格是指一个没有任何改动的最基本的表格（参考word你便知道样式），我也可以借由此说明一下表格中的一些常用参数\n同时，如\\centering；\\caption{};\\label{}等操作，与上一节所述关于图片相同\n```\n\\begin{table}[!htb] %[]内与上一节所述图片相同\n    \\begin{tabular}{|c|r|l|}    %后一个括号内c代表居中，r代表靠右，l代表靠左，|为表格竖线，可以舍去\n        \\hline  %为表格横线，可以舍去\n        内容1 & 内容2 & 内容3 \\\\    %每个单元格间由&分开，\\\\表示换行\n        \\hline\n        内容4 & 内容5 & 内容6 \\\\\n        \\hline\n    \\end{tabular}\n\\end{table}\n```\n### 表格其他的常用设置\n重新定义表格线的宽度代码如下，可随意更改使用相应代号的名称。使用时找到代码相应位置进行相应更改即可。\n注意：**以下内容要放在导言区**\n```\n%定义表格横线\\ttline的线宽为1.4pt，使用时用\\ttline代替上一节中的\\hline即可\n\\newcommand{\\ttline}{\n    \\noalign {\\ifnum 0=`}\\fi \\hrule height 1.4pt\n    \\futurelet \\reserved@a \\@xhline\n}\n%重定义表格竖线！的线宽为2pt，使用时用！代替上一节中的|即可\n\\newcolumntype{!}{@{\\hskip\\tabcolsep\\vrule width 2pt\\hskip\\tabcolsep}}\n\\makeatother\n```\n剩下的一些小功能如下：\n```\n%设置表格标题置于表格上面（默认置于下面）\n\\setlength{\\belowcaptionskip}{6pt}  %置于表格上面6pt\n\n%如果想单独使一个单元格居中，可以这么写\n\\multicolumn{1}{c}{content}\n\n%想调整表格上下间距，可以在\\begin{table}前加（同样适用于更改正文行距）\n\\linespread{倍数} %更改后值为 倍数*默认间距\n\n%合并单元格，合并行列可以使用以下公式进行嵌套\n\\multicolumn{项数}{新列格式}{单元格内容} %合并列\n\\multirow{项数}{新列格式}{单元格内容} %合并行\n\n\\cline{2-3} %表示画出一条位于第2列到第3列的横线段，其他列将不会有横线段\n```\n### 几种特殊表格代码\n下面是几种相对特殊的表格的代码，根据这些代码结合前两小节的内容更改相应部分即可完成自己的制定。\n```\n\\linespread{1.1}\n\\begin{table}[h]\n\\setlength{\\belowcaptionskip}{6pt}\\centering\\caption{dia test}\\label{tab:dia}\n\\begin{tabular}{ccc}\\ttline\n\\diagbox{test1}{test2} & altitude & vavlue \\\\ \\tline\ntesta & $22.2$ & $22.1$ \\\\ \ntestb & $1.22$ & $2.22$ \\\\\n\\end{tabular}\n\\end{table}\n```\n此种表格应记住在导言区加上 **\\usepackage{diagbox}**\n![示例1](/assets/BlogPic/2.1/t1.png)\n三线表是各种论文中较为常用的部分，代码与示例见下\n```\n\n```\n## 插入公式及其他数学式\n公式环境与图片和表格类似，也可以自动编号以及使用交叉引用，只需设置好\\label{}内容即可，具体如下：\n### 公式环境\n一般公式编辑：\n```\n\\begin{equation}\n    公式内容\n    \\label{eq:1}\n\\end{equation}\n```\n分段函数模板：\n```\n\\begin{equation}\np_{j}=\\begin{cases} \n    0,j=2\\\\\n    1,j=1\n\\end{cases}\n\\label{}\n\\end{equation}\n```\n### 常见数学公式的编辑","source":"_posts/latex.md","raw":"---\ntitle: latex基本用法\ndate: 2019-02-20 21:48:16\ntags:\n    - latex\n    - 论文\ncategories:\n    - 命令\n    - 其它\n\ntoc: true\n---\n谈到码字与排版大家首先想到的一定是word等办公软件，即一些“所见即所得”的排版与“码字”软件，这些软件功能强大足够应付日常的一切工作。\n但当大家有英文论文的写作与排版需求时，尤其是面对美赛这种“英文写作比赛”时，输出的PDF文件的美观性就尤其重要了（本人也是因为美赛才接触了latex这个让人又爱又恨的软件）。出于实用与给自己进行用法记录的目的，我也就不拿软件的历史之类的凑字数了，直接上可以产生效果的东西。\n**PS：**我个人认为latex 与HTML之类的标签语言十分相似，学习成本低，易用难精（也没必要精），因此本文只针对相应排版的具体问题，不涉及任何latex的理论与底层问题，想精学的朋友建议移步刘海洋的《LaTeX入门》（可以联系本人电子版），同时有其他问题建议百度搜索或混混相应论坛，这儿给一个tackle problems的[传送门](http://www.latexstudio.net/),下载TEXLive请移步[传送](http://tug.org/texlive/),选择相应版本后耐心等待。<!--more-->\n**以下未经说明使用TeXworks编辑器，编译方式选择XELaTeX**\n## 目录及其相关设置\n```\n\\tableofcontents            %插入目录，由于latex的“交叉引用”，注意应编译两次\n\\thispagestyle{empty}       %设置目录页不计入页码，用于文章其他部位亦可\n\\clearpage                  %该语句使得文章后面内容另起一页显示，此处使得目录单独写在一页\n\\setcounter{page}{1}        %设置目录后正文第一页目录计数为1\n```\n\n## 正文文章结构的设置\n```\n\\section{一级标题内容}\n正文\n\\subsection{二级标题内容}\n正文\n\\subsubsection{三级标题内容}\n正文\n```\n以上模式相信用过word的朋友都很容易理解了，同时通过上一条所述的目录内容会根据正文中的\\section{}等标签自动生成文章目录，十分方便。\n\n## 字体字号的常用设置\nlatex中包含了很多种字体，但如果没有特殊需求，我认为以下内容完全能够满足需要了\n```\n\\textbf{内容}       %将大括号内字体加粗\n\\textit{内容}       %将大括号内字体变为斜体\n\\emph{内容}         %强调括号内字体内容\n```\n\n## 列表环境\n### 有计数的列表\n```\n\\begin{enumerate}\n    \\item 内容1\n    \\item 内容2\n\\end{enumerate}\n```\n### 无计数的列表（bulleted list）\n```\n\\begin{itemize}\n    \\item 内容1\n    \\item 内容2\n\\end{itemize}\n```\n### 复杂列表\n同时上述各个列表可以相互嵌套，如下即为在一个bulleted list下又嵌套了一个计数列表。\n```\n\\begin{itemize}\n    \\item 内容1\n    \\begin{enumerate}\n        \\item 内容1.1\n        \\item 内容1.2\n    \\end{enumerate}\n\\end{itemize}\n```\n\n## 插入图片\n在正文中插入图片很简单，如果你没有特殊的需求copy下面这段代码并且更改里面一些参数完全够用了，图片的资源文件和其他开发都是一样的，建议在根目录下建立一个img文件夹专门存放，同时记得将文件的命名与格式搞清楚。\n```\n%下行代码中[]内为可选项意义分别为\n%h 代表here,将表格排在当前文字位置\n%t 表示将表格放在下一页的 top (页首)\n%b 表示将表格放在当前页的 bottom (底部)\n%! 表示忽略美观因素，尽可能按照参数指定的方式来处理表格浮动位置\n\\begin{figure}[h]\n    \\centering      %使图片居中\n    %下面这行可以简单理解为载入图片的函数，width=0.6\\textwidth是将图片等比例设为宽度为0.6个间页长（排版的名词不大记得可以简单这么理解），你也可以使用px之类的将其设置为定宽。后面大括号内一定得是如image1.jpg这种格式，后缀不能漏\n    \\includegraphics[width=0.6\\textwidth]{加后缀的图片名}\n    \\caption{图片的名称}    %大括号内为页面显示的图片的名称\n    \\label{fig:1}          %设置图片的标签方便交叉引用\n\\end{figure}\n```\n\n## 插入表格\n表格是一切论文或其他议论文体中非常常见的数据表达形式，由于数据的不同各种类型多种多样，不想上节所述的图片那么一段代码打天下，所以表格内容较多，我尽量将我认为的常用的表格形式的通用代码附上，同时也列举一下表格的基本形式，方便读者进行变换。\n### 普通表格\n普通表格是指一个没有任何改动的最基本的表格（参考word你便知道样式），我也可以借由此说明一下表格中的一些常用参数\n同时，如\\centering；\\caption{};\\label{}等操作，与上一节所述关于图片相同\n```\n\\begin{table}[!htb] %[]内与上一节所述图片相同\n    \\begin{tabular}{|c|r|l|}    %后一个括号内c代表居中，r代表靠右，l代表靠左，|为表格竖线，可以舍去\n        \\hline  %为表格横线，可以舍去\n        内容1 & 内容2 & 内容3 \\\\    %每个单元格间由&分开，\\\\表示换行\n        \\hline\n        内容4 & 内容5 & 内容6 \\\\\n        \\hline\n    \\end{tabular}\n\\end{table}\n```\n### 表格其他的常用设置\n重新定义表格线的宽度代码如下，可随意更改使用相应代号的名称。使用时找到代码相应位置进行相应更改即可。\n注意：**以下内容要放在导言区**\n```\n%定义表格横线\\ttline的线宽为1.4pt，使用时用\\ttline代替上一节中的\\hline即可\n\\newcommand{\\ttline}{\n    \\noalign {\\ifnum 0=`}\\fi \\hrule height 1.4pt\n    \\futurelet \\reserved@a \\@xhline\n}\n%重定义表格竖线！的线宽为2pt，使用时用！代替上一节中的|即可\n\\newcolumntype{!}{@{\\hskip\\tabcolsep\\vrule width 2pt\\hskip\\tabcolsep}}\n\\makeatother\n```\n剩下的一些小功能如下：\n```\n%设置表格标题置于表格上面（默认置于下面）\n\\setlength{\\belowcaptionskip}{6pt}  %置于表格上面6pt\n\n%如果想单独使一个单元格居中，可以这么写\n\\multicolumn{1}{c}{content}\n\n%想调整表格上下间距，可以在\\begin{table}前加（同样适用于更改正文行距）\n\\linespread{倍数} %更改后值为 倍数*默认间距\n\n%合并单元格，合并行列可以使用以下公式进行嵌套\n\\multicolumn{项数}{新列格式}{单元格内容} %合并列\n\\multirow{项数}{新列格式}{单元格内容} %合并行\n\n\\cline{2-3} %表示画出一条位于第2列到第3列的横线段，其他列将不会有横线段\n```\n### 几种特殊表格代码\n下面是几种相对特殊的表格的代码，根据这些代码结合前两小节的内容更改相应部分即可完成自己的制定。\n```\n\\linespread{1.1}\n\\begin{table}[h]\n\\setlength{\\belowcaptionskip}{6pt}\\centering\\caption{dia test}\\label{tab:dia}\n\\begin{tabular}{ccc}\\ttline\n\\diagbox{test1}{test2} & altitude & vavlue \\\\ \\tline\ntesta & $22.2$ & $22.1$ \\\\ \ntestb & $1.22$ & $2.22$ \\\\\n\\end{tabular}\n\\end{table}\n```\n此种表格应记住在导言区加上 **\\usepackage{diagbox}**\n![示例1](/assets/BlogPic/2.1/t1.png)\n三线表是各种论文中较为常用的部分，代码与示例见下\n```\n\n```\n## 插入公式及其他数学式\n公式环境与图片和表格类似，也可以自动编号以及使用交叉引用，只需设置好\\label{}内容即可，具体如下：\n### 公式环境\n一般公式编辑：\n```\n\\begin{equation}\n    公式内容\n    \\label{eq:1}\n\\end{equation}\n```\n分段函数模板：\n```\n\\begin{equation}\np_{j}=\\begin{cases} \n    0,j=2\\\\\n    1,j=1\n\\end{cases}\n\\label{}\n\\end{equation}\n```\n### 常见数学公式的编辑","slug":"latex","published":1,"updated":"2020-03-12T18:41:04.871Z","_id":"ck7oiilkr00067wet2ypbbz9x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>谈到码字与排版大家首先想到的一定是word等办公软件，即一些“所见即所得”的排版与“码字”软件，这些软件功能强大足够应付日常的一切工作。<br>但当大家有英文论文的写作与排版需求时，尤其是面对美赛这种“英文写作比赛”时，输出的PDF文件的美观性就尤其重要了（本人也是因为美赛才接触了latex这个让人又爱又恨的软件）。出于实用与给自己进行用法记录的目的，我也就不拿软件的历史之类的凑字数了，直接上可以产生效果的东西。<br><strong>PS：</strong>我个人认为latex 与HTML之类的标签语言十分相似，学习成本低，易用难精（也没必要精），因此本文只针对相应排版的具体问题，不涉及任何latex的理论与底层问题，想精学的朋友建议移步刘海洋的《LaTeX入门》（可以联系本人电子版），同时有其他问题建议百度搜索或混混相应论坛，这儿给一个tackle problems的<a href=\"http://www.latexstudio.net/\" target=\"_blank\" rel=\"noopener\">传送门</a>,下载TEXLive请移步<a href=\"http://tug.org/texlive/\" target=\"_blank\" rel=\"noopener\">传送</a>,选择相应版本后耐心等待。<a id=\"more\"></a><br><strong>以下未经说明使用TeXworks编辑器，编译方式选择XELaTeX</strong></p>\n<h2 id=\"目录及其相关设置\"><a href=\"#目录及其相关设置\" class=\"headerlink\" title=\"目录及其相关设置\"></a>目录及其相关设置</h2><pre><code>\\tableofcontents            %插入目录，由于latex的“交叉引用”，注意应编译两次\n\\thispagestyle{empty}       %设置目录页不计入页码，用于文章其他部位亦可\n\\clearpage                  %该语句使得文章后面内容另起一页显示，此处使得目录单独写在一页\n\\setcounter{page}{1}        %设置目录后正文第一页目录计数为1</code></pre><h2 id=\"正文文章结构的设置\"><a href=\"#正文文章结构的设置\" class=\"headerlink\" title=\"正文文章结构的设置\"></a>正文文章结构的设置</h2><pre><code>\\section{一级标题内容}\n正文\n\\subsection{二级标题内容}\n正文\n\\subsubsection{三级标题内容}\n正文</code></pre><p>以上模式相信用过word的朋友都很容易理解了，同时通过上一条所述的目录内容会根据正文中的\\section{}等标签自动生成文章目录，十分方便。</p>\n<h2 id=\"字体字号的常用设置\"><a href=\"#字体字号的常用设置\" class=\"headerlink\" title=\"字体字号的常用设置\"></a>字体字号的常用设置</h2><p>latex中包含了很多种字体，但如果没有特殊需求，我认为以下内容完全能够满足需要了</p>\n<pre><code>\\textbf{内容}       %将大括号内字体加粗\n\\textit{内容}       %将大括号内字体变为斜体\n\\emph{内容}         %强调括号内字体内容</code></pre><h2 id=\"列表环境\"><a href=\"#列表环境\" class=\"headerlink\" title=\"列表环境\"></a>列表环境</h2><h3 id=\"有计数的列表\"><a href=\"#有计数的列表\" class=\"headerlink\" title=\"有计数的列表\"></a>有计数的列表</h3><pre><code>\\begin{enumerate}\n    \\item 内容1\n    \\item 内容2\n\\end{enumerate}</code></pre><h3 id=\"无计数的列表（bulleted-list）\"><a href=\"#无计数的列表（bulleted-list）\" class=\"headerlink\" title=\"无计数的列表（bulleted list）\"></a>无计数的列表（bulleted list）</h3><pre><code>\\begin{itemize}\n    \\item 内容1\n    \\item 内容2\n\\end{itemize}</code></pre><h3 id=\"复杂列表\"><a href=\"#复杂列表\" class=\"headerlink\" title=\"复杂列表\"></a>复杂列表</h3><p>同时上述各个列表可以相互嵌套，如下即为在一个bulleted list下又嵌套了一个计数列表。</p>\n<pre><code>\\begin{itemize}\n    \\item 内容1\n    \\begin{enumerate}\n        \\item 内容1.1\n        \\item 内容1.2\n    \\end{enumerate}\n\\end{itemize}</code></pre><h2 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h2><p>在正文中插入图片很简单，如果你没有特殊的需求copy下面这段代码并且更改里面一些参数完全够用了，图片的资源文件和其他开发都是一样的，建议在根目录下建立一个img文件夹专门存放，同时记得将文件的命名与格式搞清楚。</p>\n<pre><code>%下行代码中[]内为可选项意义分别为\n%h 代表here,将表格排在当前文字位置\n%t 表示将表格放在下一页的 top (页首)\n%b 表示将表格放在当前页的 bottom (底部)\n%! 表示忽略美观因素，尽可能按照参数指定的方式来处理表格浮动位置\n\\begin{figure}[h]\n    \\centering      %使图片居中\n    %下面这行可以简单理解为载入图片的函数，width=0.6\\textwidth是将图片等比例设为宽度为0.6个间页长（排版的名词不大记得可以简单这么理解），你也可以使用px之类的将其设置为定宽。后面大括号内一定得是如image1.jpg这种格式，后缀不能漏\n    \\includegraphics[width=0.6\\textwidth]{加后缀的图片名}\n    \\caption{图片的名称}    %大括号内为页面显示的图片的名称\n    \\label{fig:1}          %设置图片的标签方便交叉引用\n\\end{figure}</code></pre><h2 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h2><p>表格是一切论文或其他议论文体中非常常见的数据表达形式，由于数据的不同各种类型多种多样，不想上节所述的图片那么一段代码打天下，所以表格内容较多，我尽量将我认为的常用的表格形式的通用代码附上，同时也列举一下表格的基本形式，方便读者进行变换。</p>\n<h3 id=\"普通表格\"><a href=\"#普通表格\" class=\"headerlink\" title=\"普通表格\"></a>普通表格</h3><p>普通表格是指一个没有任何改动的最基本的表格（参考word你便知道样式），我也可以借由此说明一下表格中的一些常用参数<br>同时，如\\centering；\\caption{};\\label{}等操作，与上一节所述关于图片相同</p>\n<pre><code>\\begin{table}[!htb] %[]内与上一节所述图片相同\n    \\begin{tabular}{|c|r|l|}    %后一个括号内c代表居中，r代表靠右，l代表靠左，|为表格竖线，可以舍去\n        \\hline  %为表格横线，可以舍去\n        内容1 &amp; 内容2 &amp; 内容3 \\\\    %每个单元格间由&amp;分开，\\\\表示换行\n        \\hline\n        内容4 &amp; 内容5 &amp; 内容6 \\\\\n        \\hline\n    \\end{tabular}\n\\end{table}</code></pre><h3 id=\"表格其他的常用设置\"><a href=\"#表格其他的常用设置\" class=\"headerlink\" title=\"表格其他的常用设置\"></a>表格其他的常用设置</h3><p>重新定义表格线的宽度代码如下，可随意更改使用相应代号的名称。使用时找到代码相应位置进行相应更改即可。<br>注意：<strong>以下内容要放在导言区</strong></p>\n<pre><code>%定义表格横线\\ttline的线宽为1.4pt，使用时用\\ttline代替上一节中的\\hline即可\n\\newcommand{\\ttline}{\n    \\noalign {\\ifnum 0=`}\\fi \\hrule height 1.4pt\n    \\futurelet \\reserved@a \\@xhline\n}\n%重定义表格竖线！的线宽为2pt，使用时用！代替上一节中的|即可\n\\newcolumntype{!}{@{\\hskip\\tabcolsep\\vrule width 2pt\\hskip\\tabcolsep}}\n\\makeatother</code></pre><p>剩下的一些小功能如下：</p>\n<pre><code>%设置表格标题置于表格上面（默认置于下面）\n\\setlength{\\belowcaptionskip}{6pt}  %置于表格上面6pt\n\n%如果想单独使一个单元格居中，可以这么写\n\\multicolumn{1}{c}{content}\n\n%想调整表格上下间距，可以在\\begin{table}前加（同样适用于更改正文行距）\n\\linespread{倍数} %更改后值为 倍数*默认间距\n\n%合并单元格，合并行列可以使用以下公式进行嵌套\n\\multicolumn{项数}{新列格式}{单元格内容} %合并列\n\\multirow{项数}{新列格式}{单元格内容} %合并行\n\n\\cline{2-3} %表示画出一条位于第2列到第3列的横线段，其他列将不会有横线段</code></pre><h3 id=\"几种特殊表格代码\"><a href=\"#几种特殊表格代码\" class=\"headerlink\" title=\"几种特殊表格代码\"></a>几种特殊表格代码</h3><p>下面是几种相对特殊的表格的代码，根据这些代码结合前两小节的内容更改相应部分即可完成自己的制定。</p>\n<pre><code>\\linespread{1.1}\n\\begin{table}[h]\n\\setlength{\\belowcaptionskip}{6pt}\\centering\\caption{dia test}\\label{tab:dia}\n\\begin{tabular}{ccc}\\ttline\n\\diagbox{test1}{test2} &amp; altitude &amp; vavlue \\\\ \\tline\ntesta &amp; $22.2$ &amp; $22.1$ \\\\ \ntestb &amp; $1.22$ &amp; $2.22$ \\\\\n\\end{tabular}\n\\end{table}</code></pre><p>此种表格应记住在导言区加上 <strong>\\usepackage{diagbox}</strong><br><img src=\"/assets/BlogPic/2.1/t1.png\" alt=\"示例1\"><br>三线表是各种论文中较为常用的部分，代码与示例见下</p>\n<pre><code></code></pre><h2 id=\"插入公式及其他数学式\"><a href=\"#插入公式及其他数学式\" class=\"headerlink\" title=\"插入公式及其他数学式\"></a>插入公式及其他数学式</h2><p>公式环境与图片和表格类似，也可以自动编号以及使用交叉引用，只需设置好\\label{}内容即可，具体如下：</p>\n<h3 id=\"公式环境\"><a href=\"#公式环境\" class=\"headerlink\" title=\"公式环境\"></a>公式环境</h3><p>一般公式编辑：</p>\n<pre><code>\\begin{equation}\n    公式内容\n    \\label{eq:1}\n\\end{equation}</code></pre><p>分段函数模板：</p>\n<pre><code>\\begin{equation}\np_{j}=\\begin{cases} \n    0,j=2\\\\\n    1,j=1\n\\end{cases}\n\\label{}\n\\end{equation}</code></pre><h3 id=\"常见数学公式的编辑\"><a href=\"#常见数学公式的编辑\" class=\"headerlink\" title=\"常见数学公式的编辑\"></a>常见数学公式的编辑</h3>","site":{"data":{}},"excerpt":"<p>谈到码字与排版大家首先想到的一定是word等办公软件，即一些“所见即所得”的排版与“码字”软件，这些软件功能强大足够应付日常的一切工作。<br>但当大家有英文论文的写作与排版需求时，尤其是面对美赛这种“英文写作比赛”时，输出的PDF文件的美观性就尤其重要了（本人也是因为美赛才接触了latex这个让人又爱又恨的软件）。出于实用与给自己进行用法记录的目的，我也就不拿软件的历史之类的凑字数了，直接上可以产生效果的东西。<br><strong>PS：</strong>我个人认为latex 与HTML之类的标签语言十分相似，学习成本低，易用难精（也没必要精），因此本文只针对相应排版的具体问题，不涉及任何latex的理论与底层问题，想精学的朋友建议移步刘海洋的《LaTeX入门》（可以联系本人电子版），同时有其他问题建议百度搜索或混混相应论坛，这儿给一个tackle problems的<a href=\"http://www.latexstudio.net/\" target=\"_blank\" rel=\"noopener\">传送门</a>,下载TEXLive请移步<a href=\"http://tug.org/texlive/\" target=\"_blank\" rel=\"noopener\">传送</a>,选择相应版本后耐心等待。","more":"<br><strong>以下未经说明使用TeXworks编辑器，编译方式选择XELaTeX</strong></p>\n<h2 id=\"目录及其相关设置\"><a href=\"#目录及其相关设置\" class=\"headerlink\" title=\"目录及其相关设置\"></a>目录及其相关设置</h2><pre><code>\\tableofcontents            %插入目录，由于latex的“交叉引用”，注意应编译两次\n\\thispagestyle{empty}       %设置目录页不计入页码，用于文章其他部位亦可\n\\clearpage                  %该语句使得文章后面内容另起一页显示，此处使得目录单独写在一页\n\\setcounter{page}{1}        %设置目录后正文第一页目录计数为1</code></pre><h2 id=\"正文文章结构的设置\"><a href=\"#正文文章结构的设置\" class=\"headerlink\" title=\"正文文章结构的设置\"></a>正文文章结构的设置</h2><pre><code>\\section{一级标题内容}\n正文\n\\subsection{二级标题内容}\n正文\n\\subsubsection{三级标题内容}\n正文</code></pre><p>以上模式相信用过word的朋友都很容易理解了，同时通过上一条所述的目录内容会根据正文中的\\section{}等标签自动生成文章目录，十分方便。</p>\n<h2 id=\"字体字号的常用设置\"><a href=\"#字体字号的常用设置\" class=\"headerlink\" title=\"字体字号的常用设置\"></a>字体字号的常用设置</h2><p>latex中包含了很多种字体，但如果没有特殊需求，我认为以下内容完全能够满足需要了</p>\n<pre><code>\\textbf{内容}       %将大括号内字体加粗\n\\textit{内容}       %将大括号内字体变为斜体\n\\emph{内容}         %强调括号内字体内容</code></pre><h2 id=\"列表环境\"><a href=\"#列表环境\" class=\"headerlink\" title=\"列表环境\"></a>列表环境</h2><h3 id=\"有计数的列表\"><a href=\"#有计数的列表\" class=\"headerlink\" title=\"有计数的列表\"></a>有计数的列表</h3><pre><code>\\begin{enumerate}\n    \\item 内容1\n    \\item 内容2\n\\end{enumerate}</code></pre><h3 id=\"无计数的列表（bulleted-list）\"><a href=\"#无计数的列表（bulleted-list）\" class=\"headerlink\" title=\"无计数的列表（bulleted list）\"></a>无计数的列表（bulleted list）</h3><pre><code>\\begin{itemize}\n    \\item 内容1\n    \\item 内容2\n\\end{itemize}</code></pre><h3 id=\"复杂列表\"><a href=\"#复杂列表\" class=\"headerlink\" title=\"复杂列表\"></a>复杂列表</h3><p>同时上述各个列表可以相互嵌套，如下即为在一个bulleted list下又嵌套了一个计数列表。</p>\n<pre><code>\\begin{itemize}\n    \\item 内容1\n    \\begin{enumerate}\n        \\item 内容1.1\n        \\item 内容1.2\n    \\end{enumerate}\n\\end{itemize}</code></pre><h2 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h2><p>在正文中插入图片很简单，如果你没有特殊的需求copy下面这段代码并且更改里面一些参数完全够用了，图片的资源文件和其他开发都是一样的，建议在根目录下建立一个img文件夹专门存放，同时记得将文件的命名与格式搞清楚。</p>\n<pre><code>%下行代码中[]内为可选项意义分别为\n%h 代表here,将表格排在当前文字位置\n%t 表示将表格放在下一页的 top (页首)\n%b 表示将表格放在当前页的 bottom (底部)\n%! 表示忽略美观因素，尽可能按照参数指定的方式来处理表格浮动位置\n\\begin{figure}[h]\n    \\centering      %使图片居中\n    %下面这行可以简单理解为载入图片的函数，width=0.6\\textwidth是将图片等比例设为宽度为0.6个间页长（排版的名词不大记得可以简单这么理解），你也可以使用px之类的将其设置为定宽。后面大括号内一定得是如image1.jpg这种格式，后缀不能漏\n    \\includegraphics[width=0.6\\textwidth]{加后缀的图片名}\n    \\caption{图片的名称}    %大括号内为页面显示的图片的名称\n    \\label{fig:1}          %设置图片的标签方便交叉引用\n\\end{figure}</code></pre><h2 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h2><p>表格是一切论文或其他议论文体中非常常见的数据表达形式，由于数据的不同各种类型多种多样，不想上节所述的图片那么一段代码打天下，所以表格内容较多，我尽量将我认为的常用的表格形式的通用代码附上，同时也列举一下表格的基本形式，方便读者进行变换。</p>\n<h3 id=\"普通表格\"><a href=\"#普通表格\" class=\"headerlink\" title=\"普通表格\"></a>普通表格</h3><p>普通表格是指一个没有任何改动的最基本的表格（参考word你便知道样式），我也可以借由此说明一下表格中的一些常用参数<br>同时，如\\centering；\\caption{};\\label{}等操作，与上一节所述关于图片相同</p>\n<pre><code>\\begin{table}[!htb] %[]内与上一节所述图片相同\n    \\begin{tabular}{|c|r|l|}    %后一个括号内c代表居中，r代表靠右，l代表靠左，|为表格竖线，可以舍去\n        \\hline  %为表格横线，可以舍去\n        内容1 &amp; 内容2 &amp; 内容3 \\\\    %每个单元格间由&amp;分开，\\\\表示换行\n        \\hline\n        内容4 &amp; 内容5 &amp; 内容6 \\\\\n        \\hline\n    \\end{tabular}\n\\end{table}</code></pre><h3 id=\"表格其他的常用设置\"><a href=\"#表格其他的常用设置\" class=\"headerlink\" title=\"表格其他的常用设置\"></a>表格其他的常用设置</h3><p>重新定义表格线的宽度代码如下，可随意更改使用相应代号的名称。使用时找到代码相应位置进行相应更改即可。<br>注意：<strong>以下内容要放在导言区</strong></p>\n<pre><code>%定义表格横线\\ttline的线宽为1.4pt，使用时用\\ttline代替上一节中的\\hline即可\n\\newcommand{\\ttline}{\n    \\noalign {\\ifnum 0=`}\\fi \\hrule height 1.4pt\n    \\futurelet \\reserved@a \\@xhline\n}\n%重定义表格竖线！的线宽为2pt，使用时用！代替上一节中的|即可\n\\newcolumntype{!}{@{\\hskip\\tabcolsep\\vrule width 2pt\\hskip\\tabcolsep}}\n\\makeatother</code></pre><p>剩下的一些小功能如下：</p>\n<pre><code>%设置表格标题置于表格上面（默认置于下面）\n\\setlength{\\belowcaptionskip}{6pt}  %置于表格上面6pt\n\n%如果想单独使一个单元格居中，可以这么写\n\\multicolumn{1}{c}{content}\n\n%想调整表格上下间距，可以在\\begin{table}前加（同样适用于更改正文行距）\n\\linespread{倍数} %更改后值为 倍数*默认间距\n\n%合并单元格，合并行列可以使用以下公式进行嵌套\n\\multicolumn{项数}{新列格式}{单元格内容} %合并列\n\\multirow{项数}{新列格式}{单元格内容} %合并行\n\n\\cline{2-3} %表示画出一条位于第2列到第3列的横线段，其他列将不会有横线段</code></pre><h3 id=\"几种特殊表格代码\"><a href=\"#几种特殊表格代码\" class=\"headerlink\" title=\"几种特殊表格代码\"></a>几种特殊表格代码</h3><p>下面是几种相对特殊的表格的代码，根据这些代码结合前两小节的内容更改相应部分即可完成自己的制定。</p>\n<pre><code>\\linespread{1.1}\n\\begin{table}[h]\n\\setlength{\\belowcaptionskip}{6pt}\\centering\\caption{dia test}\\label{tab:dia}\n\\begin{tabular}{ccc}\\ttline\n\\diagbox{test1}{test2} &amp; altitude &amp; vavlue \\\\ \\tline\ntesta &amp; $22.2$ &amp; $22.1$ \\\\ \ntestb &amp; $1.22$ &amp; $2.22$ \\\\\n\\end{tabular}\n\\end{table}</code></pre><p>此种表格应记住在导言区加上 <strong>\\usepackage{diagbox}</strong><br><img src=\"/assets/BlogPic/2.1/t1.png\" alt=\"示例1\"><br>三线表是各种论文中较为常用的部分，代码与示例见下</p>\n<pre><code></code></pre><h2 id=\"插入公式及其他数学式\"><a href=\"#插入公式及其他数学式\" class=\"headerlink\" title=\"插入公式及其他数学式\"></a>插入公式及其他数学式</h2><p>公式环境与图片和表格类似，也可以自动编号以及使用交叉引用，只需设置好\\label{}内容即可，具体如下：</p>\n<h3 id=\"公式环境\"><a href=\"#公式环境\" class=\"headerlink\" title=\"公式环境\"></a>公式环境</h3><p>一般公式编辑：</p>\n<pre><code>\\begin{equation}\n    公式内容\n    \\label{eq:1}\n\\end{equation}</code></pre><p>分段函数模板：</p>\n<pre><code>\\begin{equation}\np_{j}=\\begin{cases} \n    0,j=2\\\\\n    1,j=1\n\\end{cases}\n\\label{}\n\\end{equation}</code></pre><h3 id=\"常见数学公式的编辑\"><a href=\"#常见数学公式的编辑\" class=\"headerlink\" title=\"常见数学公式的编辑\"></a>常见数学公式的编辑</h3>"},{"title":"Hexo博客搭建","date":"2020-03-12T14:24:43.000Z","fileName":"hexo1","_content":"hexo是一个基于Node.js的静态网页生成器，能直接将markdown文件生成为html文件，部署起来十分方便且有许多丰富的开源主题，是搭建博客的不二选择，具体可见[hexo官网](https://hexo.io/zh-cn/)，本文主要记录在Ubuntu 18.04下的Hexo博客的搭建过程。\n\n### 准备环境\n#### 安装git\n```\nsudo apt-get install git\n```\n可以直接使用命令行进行安装，但这种情况git版本往往较低，因此推荐前往[git官网](https://git-scm.com/)进行下载安装。安装完成后可以使用`git --version`查看一下版本。\n\n#### 安装Node.js\n进入[官网](http://nodejs.cn/download/)选择下载相关版本的Linux二进制文件（Hexo官网建议使用10.0及以上版本，而apt-get下载版本过老因此此处建议在官网下载最新版本），输入以下命令\n```\ntar xf  node-yourversion-linux-x64.tar.xz\ncd node-yourversion-linux-x64/\n./bin/node -v\n```\n如果显示了版本，说明解压安装成功，但此时在命令行输入node是没有反应的，因此还要输入以下命令设置软连接\n```\nln -s /yourlocation/nodejs/bin/npm /usr/local/bin/ \nln -s /yourlocation/nodejs/bin/node /usr/local/bin/ \n```\n之后在命令行调用npm与node的相关命令，如果未显示“未找到命令”则说明安装成功。\n\n#### 安装Hexo\n```\nnpm install -g hexo-cli\n```\n在命令行输入以上命令即可安装hexo，但安装过后在命令行输入hexo显示未找到命令（hexo默认安装在与npm相同的位置），因此也要输入以下命令建立软链接。\n```\nln -s /yourlocation/nodejs/bin/hexo /usr/local/bin/ \n```\n之后在命令行测试无误，即安装成功。\n\n#### 初始化博客本地目录\n在你打算作为博客本地目录的文件夹下打开终端输入以下命令即可完成对hexo博客的初始化。\n```\nhexo init\nnpm install\n```\n此时文件夹下会出现如下目录：\n```\n.\n├── _config.yml     //配置文件，用于配置网站基本信息\n├── package.json    //安装相关插件的信息，一般可以忽略其内容\n├── scaffolds   //模板文件夹，里面可以更改之后构建相关md文件的模板\n├── source  //存放文章与各类资源的地方，被解析后相关内容会被放到生成的public文件夹内\n|   ├── _drafts\n|   └── _posts\n└── themes  //存放主题的地方，可以自己选择或开发主题放进来\n```\n此时在终端输入\n```\nhexo s\n```\n如果不出bug，在http://localhost:4000/ 便能访问到博客的初始界面了。\n\n#### Windows下的安装方法\nWindows下的安装方法更简单，到相关依赖项的官网上下载一直确定就能够安装成功。之后在git bash下的操作就与Linux基本一致了。\n\n### 网站部署\n#### GithubPage\n1. 创建github账户并在本地创建ssh密匙，之后在github网站中的**setting**中找到SSH相关选项，将本地的ssh密匙添加进去即可（本地的ssh密匙都是在`.ssh\\id_rsa.pub`中可以找到）。\n\n2. 在github下新建仓库，仓库命名必须为`<账户名称>.github.io`\n3. 修改本地博客文件中_config.yml中的设置如下\n```\ndeploy:\n  type: git\n  repo: git@github.com:<Github账号名称>/<Github账号名称>.github.io.git\n  branch: master\n```\n4. 在博客本地目录下使用如下命令即可完成网页的生成与部署。之后在https://<Github账号名称>.github.io即可访问到自己的页面了。\n```\nhexo g  //生成\nhexo d  //部署\n```\n\n#### 云服务器\n\n","source":"_posts/Hexo博客搭建.md","raw":"---\ntitle: Hexo博客搭建\ndate: 2020-03-12 22:24:43\ntags:\n    - hexo\ncategories:\n    - 记录\n    - hexo\nfileName: hexo1\n---\nhexo是一个基于Node.js的静态网页生成器，能直接将markdown文件生成为html文件，部署起来十分方便且有许多丰富的开源主题，是搭建博客的不二选择，具体可见[hexo官网](https://hexo.io/zh-cn/)，本文主要记录在Ubuntu 18.04下的Hexo博客的搭建过程。\n\n### 准备环境\n#### 安装git\n```\nsudo apt-get install git\n```\n可以直接使用命令行进行安装，但这种情况git版本往往较低，因此推荐前往[git官网](https://git-scm.com/)进行下载安装。安装完成后可以使用`git --version`查看一下版本。\n\n#### 安装Node.js\n进入[官网](http://nodejs.cn/download/)选择下载相关版本的Linux二进制文件（Hexo官网建议使用10.0及以上版本，而apt-get下载版本过老因此此处建议在官网下载最新版本），输入以下命令\n```\ntar xf  node-yourversion-linux-x64.tar.xz\ncd node-yourversion-linux-x64/\n./bin/node -v\n```\n如果显示了版本，说明解压安装成功，但此时在命令行输入node是没有反应的，因此还要输入以下命令设置软连接\n```\nln -s /yourlocation/nodejs/bin/npm /usr/local/bin/ \nln -s /yourlocation/nodejs/bin/node /usr/local/bin/ \n```\n之后在命令行调用npm与node的相关命令，如果未显示“未找到命令”则说明安装成功。\n\n#### 安装Hexo\n```\nnpm install -g hexo-cli\n```\n在命令行输入以上命令即可安装hexo，但安装过后在命令行输入hexo显示未找到命令（hexo默认安装在与npm相同的位置），因此也要输入以下命令建立软链接。\n```\nln -s /yourlocation/nodejs/bin/hexo /usr/local/bin/ \n```\n之后在命令行测试无误，即安装成功。\n\n#### 初始化博客本地目录\n在你打算作为博客本地目录的文件夹下打开终端输入以下命令即可完成对hexo博客的初始化。\n```\nhexo init\nnpm install\n```\n此时文件夹下会出现如下目录：\n```\n.\n├── _config.yml     //配置文件，用于配置网站基本信息\n├── package.json    //安装相关插件的信息，一般可以忽略其内容\n├── scaffolds   //模板文件夹，里面可以更改之后构建相关md文件的模板\n├── source  //存放文章与各类资源的地方，被解析后相关内容会被放到生成的public文件夹内\n|   ├── _drafts\n|   └── _posts\n└── themes  //存放主题的地方，可以自己选择或开发主题放进来\n```\n此时在终端输入\n```\nhexo s\n```\n如果不出bug，在http://localhost:4000/ 便能访问到博客的初始界面了。\n\n#### Windows下的安装方法\nWindows下的安装方法更简单，到相关依赖项的官网上下载一直确定就能够安装成功。之后在git bash下的操作就与Linux基本一致了。\n\n### 网站部署\n#### GithubPage\n1. 创建github账户并在本地创建ssh密匙，之后在github网站中的**setting**中找到SSH相关选项，将本地的ssh密匙添加进去即可（本地的ssh密匙都是在`.ssh\\id_rsa.pub`中可以找到）。\n\n2. 在github下新建仓库，仓库命名必须为`<账户名称>.github.io`\n3. 修改本地博客文件中_config.yml中的设置如下\n```\ndeploy:\n  type: git\n  repo: git@github.com:<Github账号名称>/<Github账号名称>.github.io.git\n  branch: master\n```\n4. 在博客本地目录下使用如下命令即可完成网页的生成与部署。之后在https://<Github账号名称>.github.io即可访问到自己的页面了。\n```\nhexo g  //生成\nhexo d  //部署\n```\n\n#### 云服务器\n\n","slug":"Hexo博客搭建","published":1,"updated":"2020-03-13T02:53:51.026Z","_id":"ck7ouzrky0000lwetaf556yzd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>hexo是一个基于Node.js的静态网页生成器，能直接将markdown文件生成为html文件，部署起来十分方便且有许多丰富的开源主题，是搭建博客的不二选择，具体可见<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>，本文主要记录在Ubuntu 18.04下的Hexo博客的搭建过程。</p>\n<h3 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h3><h4 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h4><pre><code>sudo apt-get install git</code></pre><p>可以直接使用命令行进行安装，但这种情况git版本往往较低，因此推荐前往<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">git官网</a>进行下载安装。安装完成后可以使用<code>git --version</code>查看一下版本。</p>\n<h4 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h4><p>进入<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"noopener\">官网</a>选择下载相关版本的Linux二进制文件（Hexo官网建议使用10.0及以上版本，而apt-get下载版本过老因此此处建议在官网下载最新版本），输入以下命令</p>\n<pre><code>tar xf  node-yourversion-linux-x64.tar.xz\ncd node-yourversion-linux-x64/\n./bin/node -v</code></pre><p>如果显示了版本，说明解压安装成功，但此时在命令行输入node是没有反应的，因此还要输入以下命令设置软连接</p>\n<pre><code>ln -s /yourlocation/nodejs/bin/npm /usr/local/bin/ \nln -s /yourlocation/nodejs/bin/node /usr/local/bin/ </code></pre><p>之后在命令行调用npm与node的相关命令，如果未显示“未找到命令”则说明安装成功。</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><pre><code>npm install -g hexo-cli</code></pre><p>在命令行输入以上命令即可安装hexo，但安装过后在命令行输入hexo显示未找到命令（hexo默认安装在与npm相同的位置），因此也要输入以下命令建立软链接。</p>\n<pre><code>ln -s /yourlocation/nodejs/bin/hexo /usr/local/bin/ </code></pre><p>之后在命令行测试无误，即安装成功。</p>\n<h4 id=\"初始化博客本地目录\"><a href=\"#初始化博客本地目录\" class=\"headerlink\" title=\"初始化博客本地目录\"></a>初始化博客本地目录</h4><p>在你打算作为博客本地目录的文件夹下打开终端输入以下命令即可完成对hexo博客的初始化。</p>\n<pre><code>hexo init\nnpm install</code></pre><p>此时文件夹下会出现如下目录：</p>\n<pre><code>.\n├── _config.yml     //配置文件，用于配置网站基本信息\n├── package.json    //安装相关插件的信息，一般可以忽略其内容\n├── scaffolds   //模板文件夹，里面可以更改之后构建相关md文件的模板\n├── source  //存放文章与各类资源的地方，被解析后相关内容会被放到生成的public文件夹内\n|   ├── _drafts\n|   └── _posts\n└── themes  //存放主题的地方，可以自己选择或开发主题放进来</code></pre><p>此时在终端输入</p>\n<pre><code>hexo s</code></pre><p>如果不出bug，在<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 便能访问到博客的初始界面了。</p>\n<h4 id=\"Windows下的安装方法\"><a href=\"#Windows下的安装方法\" class=\"headerlink\" title=\"Windows下的安装方法\"></a>Windows下的安装方法</h4><p>Windows下的安装方法更简单，到相关依赖项的官网上下载一直确定就能够安装成功。之后在git bash下的操作就与Linux基本一致了。</p>\n<h3 id=\"网站部署\"><a href=\"#网站部署\" class=\"headerlink\" title=\"网站部署\"></a>网站部署</h3><h4 id=\"GithubPage\"><a href=\"#GithubPage\" class=\"headerlink\" title=\"GithubPage\"></a>GithubPage</h4><ol>\n<li><p>创建github账户并在本地创建ssh密匙，之后在github网站中的<strong>setting</strong>中找到SSH相关选项，将本地的ssh密匙添加进去即可（本地的ssh密匙都是在<code>.ssh\\id_rsa.pub</code>中可以找到）。</p>\n</li>\n<li><p>在github下新建仓库，仓库命名必须为<code>&lt;账户名称&gt;.github.io</code></p>\n</li>\n<li><p>修改本地博客文件中_config.yml中的设置如下</p>\n<pre><code>deploy:\ntype: git\nrepo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git\nbranch: master</code></pre></li>\n<li><p>在博客本地目录下使用如下命令即可完成网页的生成与部署。之后在https://&lt;Github账号名称&gt;.github.io即可访问到自己的页面了。</p>\n<pre><code>hexo g  //生成\nhexo d  //部署</code></pre></li>\n</ol>\n<h4 id=\"云服务器\"><a href=\"#云服务器\" class=\"headerlink\" title=\"云服务器\"></a>云服务器</h4>","site":{"data":{}},"excerpt":"","more":"<p>hexo是一个基于Node.js的静态网页生成器，能直接将markdown文件生成为html文件，部署起来十分方便且有许多丰富的开源主题，是搭建博客的不二选择，具体可见<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>，本文主要记录在Ubuntu 18.04下的Hexo博客的搭建过程。</p>\n<h3 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h3><h4 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h4><pre><code>sudo apt-get install git</code></pre><p>可以直接使用命令行进行安装，但这种情况git版本往往较低，因此推荐前往<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">git官网</a>进行下载安装。安装完成后可以使用<code>git --version</code>查看一下版本。</p>\n<h4 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h4><p>进入<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"noopener\">官网</a>选择下载相关版本的Linux二进制文件（Hexo官网建议使用10.0及以上版本，而apt-get下载版本过老因此此处建议在官网下载最新版本），输入以下命令</p>\n<pre><code>tar xf  node-yourversion-linux-x64.tar.xz\ncd node-yourversion-linux-x64/\n./bin/node -v</code></pre><p>如果显示了版本，说明解压安装成功，但此时在命令行输入node是没有反应的，因此还要输入以下命令设置软连接</p>\n<pre><code>ln -s /yourlocation/nodejs/bin/npm /usr/local/bin/ \nln -s /yourlocation/nodejs/bin/node /usr/local/bin/ </code></pre><p>之后在命令行调用npm与node的相关命令，如果未显示“未找到命令”则说明安装成功。</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><pre><code>npm install -g hexo-cli</code></pre><p>在命令行输入以上命令即可安装hexo，但安装过后在命令行输入hexo显示未找到命令（hexo默认安装在与npm相同的位置），因此也要输入以下命令建立软链接。</p>\n<pre><code>ln -s /yourlocation/nodejs/bin/hexo /usr/local/bin/ </code></pre><p>之后在命令行测试无误，即安装成功。</p>\n<h4 id=\"初始化博客本地目录\"><a href=\"#初始化博客本地目录\" class=\"headerlink\" title=\"初始化博客本地目录\"></a>初始化博客本地目录</h4><p>在你打算作为博客本地目录的文件夹下打开终端输入以下命令即可完成对hexo博客的初始化。</p>\n<pre><code>hexo init\nnpm install</code></pre><p>此时文件夹下会出现如下目录：</p>\n<pre><code>.\n├── _config.yml     //配置文件，用于配置网站基本信息\n├── package.json    //安装相关插件的信息，一般可以忽略其内容\n├── scaffolds   //模板文件夹，里面可以更改之后构建相关md文件的模板\n├── source  //存放文章与各类资源的地方，被解析后相关内容会被放到生成的public文件夹内\n|   ├── _drafts\n|   └── _posts\n└── themes  //存放主题的地方，可以自己选择或开发主题放进来</code></pre><p>此时在终端输入</p>\n<pre><code>hexo s</code></pre><p>如果不出bug，在<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 便能访问到博客的初始界面了。</p>\n<h4 id=\"Windows下的安装方法\"><a href=\"#Windows下的安装方法\" class=\"headerlink\" title=\"Windows下的安装方法\"></a>Windows下的安装方法</h4><p>Windows下的安装方法更简单，到相关依赖项的官网上下载一直确定就能够安装成功。之后在git bash下的操作就与Linux基本一致了。</p>\n<h3 id=\"网站部署\"><a href=\"#网站部署\" class=\"headerlink\" title=\"网站部署\"></a>网站部署</h3><h4 id=\"GithubPage\"><a href=\"#GithubPage\" class=\"headerlink\" title=\"GithubPage\"></a>GithubPage</h4><ol>\n<li><p>创建github账户并在本地创建ssh密匙，之后在github网站中的<strong>setting</strong>中找到SSH相关选项，将本地的ssh密匙添加进去即可（本地的ssh密匙都是在<code>.ssh\\id_rsa.pub</code>中可以找到）。</p>\n</li>\n<li><p>在github下新建仓库，仓库命名必须为<code>&lt;账户名称&gt;.github.io</code></p>\n</li>\n<li><p>修改本地博客文件中_config.yml中的设置如下</p>\n<pre><code>deploy:\ntype: git\nrepo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git\nbranch: master</code></pre></li>\n<li><p>在博客本地目录下使用如下命令即可完成网页的生成与部署。之后在https://&lt;Github账号名称&gt;.github.io即可访问到自己的页面了。</p>\n<pre><code>hexo g  //生成\nhexo d  //部署</code></pre></li>\n</ol>\n<h4 id=\"云服务器\"><a href=\"#云服务器\" class=\"headerlink\" title=\"云服务器\"></a>云服务器</h4>"},{"title":"务虚时代下的国贼——李鸿章","date":"2020-03-04T04:17:16.000Z","fileName":"Li_Hongzhang","_content":"<center>一</center>\n\n近日看老剧《走向共和》，其前半段多以李鸿章之视角演绎，李鸿章何许人也，若非要集这百年悠悠之口套出几个词来，想必就是汉奸卖国贼之类的了，至少用于普及基本历史常识的历史课本中，作为百年国耻代表的《马关条约》与《辛丑条约》之上，就铸着该君的名字，所以这样说也没错。\n\n所谓汉奸，所谓卖国贼，这两个词至少在中华文化体系下是一种性质非常恶劣的词了吧，这与百年辛酸史，或者说在国家危亡之际国人对所谓“忠臣名将”的向往是分不开的，无论何人，无论何时，只要在身份认同上认为自己是中国人的，对待这些人都可以堂而皇之的啐一口唾沫，道一声“呸”。因为在我们中国人眼中，对历史的“通俗看法”（所谓通俗看法，是指不专门研究某一段历史的普通人，对身处该时段历史人物的主观看法，或说评价）是有底线和顶线的，底线想必就是卖国攘民等龌龊行径了，而顶线就是所谓为国请命的英雄们了，或者说以死明志的气节。当然除此之外，在看待历史人物时，顶线与底线往往还联络着主角道德的好与坏。\n\n<center>二</center>\n\n底线之下，无论之前干过什么，无论这个人作为一个人来讲怎么样，都不值得原谅，参考秦桧与汪精卫（前者还跪着呢）；而顶线之上，有所作为当然更好，但似乎事情做没做成也没有太大所谓，死谏，不趋附权贵，最好再带点文采写些个正气凛然的东西或者稀里糊涂的处在一段展现美好品行的故事中心，都值得树碑立传，万世景仰（至少在大部分国人心目中此类人物的形象是好的），参考孔融。\n\n底线之下，无甚好说，做了过分引人注目的坏事情，难道还会有很多人愿意去考虑你干这坏事之前的心路？大部分人会憎恶你，少部分脑袋勤快点的人会在憎恶中加上一些同情，还有极小部分人会把你当成一个工具，表达他们“看清事实”与“与众不同”的工具，这一类人不谈也罢，他们不懂得当瑕疵多到一种程度时，瑕不掩瑜这个词是不适用的。\n\n但顶线之上就会有一些问题了，在史书中活成这一类的人心念一动就能想出很多，他们大部分都可以作为鲁迅先生笔下我中华的脊梁，但我偏偏把孔融放在这里，为何呢？是因为我想说明这条适用于大众的对历史人物看法的惯性思维多半有些不客观。“孔四岁，能让梨”，这是大部分人都清楚的故事，别的不说，我在痴迷三国的那个年龄，总还是把孔融当成个人物的。但稍稍读点书，以今日之眼光，想瞧得上孔融这个人实在是难，可他却在未来的两千年里享尽英德之名，被无数父母当作启蒙孩子的一个典范，与古往今来无数仁人志士枭雄豪杰并排而立，我以为实在是忝列其中啊。\n\n<center>三</center>\n\n让一个梨便得以流芳千古，这个梨也实在是贵的很啊，让梨这个操作也算是东汉末年一个最成功的炒作了吧。但我实在是不明白大一点的梨子是孔融吃掉还是他哥哥吃掉到底对他们一家或者说对他们兄弟二人能有多大干系呢。非要说的话，难道梨子在东汉越大越香？而大到一定程度会产生口感上的质变？还是一个天生不太喜欢吃梨子的小孩在东汉不太常见？\n\n我以为是后者，毕竟在一个百姓连饭都吃不饱的时代，产生一个类似孔融这种不喜欢梨的小孩实在是困难，这也是保证这件事合理性的唯一解释了，不然孔融一家想必都有癔症。\n\n但遗憾的是，事实来看他们一家就是有癔症，也许是遗传的吧。毕竟硬要说的话，他们的老祖宗孔丘也有癔症，但孔夫子的癔症到底是在我这个两千多年后的后生眼里才能得见的，在孔夫子那个时代就算是癔症也多少有些可爱。但一种病毒也许两千年前无伤大雅甚至可以说是可爱，到一千年前病毒几经变异变成了值得称颂的一个身体特征，而到了一百多年前当一个群体把感染了这个病毒当成荣耀并认为人人便该如此的时候，来了另一群没得病且更强壮的人使得感染这个病毒变成了自然选择的一个逆选项时，有一些病人开始尝试治病但囿于同胞掣肘与病毒几经进化下的狡诈以及自身体内病毒的顽固，失败了，对于这种人，在考虑失败后果之前，我以为首先得感慨一下其知其不可而为之的勇气，至少这是我尊敬孔子的一个重要原因，也是我认为对卖国贼李鸿章，有必要进行另一番议论的原因。\n\n<center>四</center>\n\n以上所述的“癔症”，我想与今年的新冠肺炎多少有些类似，症状复杂容易变异，只是这癔症并不作用在生理上而是作用在精神上。其症状很多，五花八门，但我今天想谈谈的只有务虚。\n\n就像孔融让梨得到赞扬一样，赞扬的不是让梨这个动作而是其谦让的品德。我从不否认谦让是个美德，但让一个历史上实实在在活生生的人，因为这样一个简单的动作就成为了根植一个名族内心千年的道德符号，我认为实在是荒谬了些，哲学上喜欢将一件事情推到极端而后再观察其是否仍然符合某一标准，而长大后的孔融倒着实使这个荒谬的意味更深了些。\n\n几乎没有付出任何代价与个人的努力，一件名门世家随意记录的小小的事情，让一个人毫不费力收获了也许是古往今来来自孩子和家长们最多的赞誉，这不是偶然，而是自先秦到清末国人一直存在的务虚观念，几个小小的汉字，所谓仁义礼智信孝廉，都是好的优秀的修身品德，也从来都是封建时代的国人精英们竞相模仿参照的对象，可仔细想想，这几个字有所谓放之四海而皆准的具体的标准与定义吗？是所谓的标准管用还是历代大儒帝王的一声惊叹或者流传坊间的一段传奇更加管用呢？普通人是实实在在的做事更能得到赞扬还是卧冰求鲤式的“作秀”更能得到赞扬呢？\n\n这些品德确立之初的好坏我无从得知，但由于上述文字解释权等原因，这几个字或者说我中华中世纪所追求的那些抽象的概念，渐渐变为了权力与利益的代言人，成为了统治者所谓推行“王治”的工具（与其说是王治，不如说是愚民）。而随着皇权的愈加集中，传播这些务虚概念的工具，即我们引以为傲的科举，使得无数中世纪乃至近代的国人精英沦为了务虚的奴隶，深陷囹圄而自以为自由（李鸿章有改变很多事物的资本，但他囿于所谓忠君之类的概念敷衍其事含糊其词，想必也是务虚已入骨髓矣）。在没有西方文化冲击的情况下，整个民族和国家都浸沐在这务虚的汤药中，难以自拔。\n\n我本身是一个很懒惰的人，所谓磨洋工的一把好手，所以倘若我在百年千年前的话，肯定会变着花样以把自己弄死为标准去对应这些百姓追求统治者喜欢的概念，也许周围正好来了个大儒书圣，听说了我的故事的话还能把我的事迹记录一些，这样“流芳百世”的难度的确是大，但想必也比实干勤学的概率要大的多，还省去了不论是脑力还是体力带来的困难与麻烦，整不好运气更好点倒是能成为孔融一样的道德符号，实在是妙啊，妙不可言。\n\n既然务虚便能带来一切能够自我宽慰还得社会认可的东西，那作为贵族官员干嘛要务实呢？留着指甲，以商贾为耻，以农桑为耻，以一切实干为耻（当然社会是需要人做实事的，但做实事在我们的文化里受待见吗？所谓君子远庖厨，历朝历代各个英雄豪杰当然也有很多实干的，但实干的基础仍然是这个务虚的社会，这本身就给这个实干抹上了一层务虚的阴影），专注虚妄的经学便能高人一等，有文才胸富万经的为官一处自是高高在上，没有这个本事的寒窗苦读一番也能落个“读书人的偷能叫偷吗”的阿Q式精神胜利，在精神上又是高高在上，都是高高在上，在1793年英国使团来华时是高高在上，在19世纪被英国揍、被日本揍之后还是高高在上。永远都是高高在上，这一词也许便能概括李鸿章一生大部分清廷官员的心理了吧，即使对洋人卑躬屈膝，对着百姓照样还是高高在上，照样是所谓“牧民于野”的当代俊杰。\n\n欺民，罔民，愚民，却将这种行为解释为王化，“王化”过后便使牧民如放牧牛羊那般简单（如此看来儒家的王治倒是能够作为畜牧业一个很好的理论），古语中的这个“牧”字用的很是精髓啊。这也概括了务虚之道能够得以盛行，国人能够自欺欺人的原因，在这样一个务虚时代之末，则有国贼李鸿章。\n\n<center>五</center>\n\n梁任公先生在1901年为李鸿章做的传记里，有这样一段话：\n\n>*夫李鸿章果足称为中国第一人与否吾不敢知，而要之现今五十岁以上之人，三四品以上之官，无一可以望李之肩背者，则吾所能断言也。李之死，于中国全局有关系与否吾不敢知，而要之现在政府失一李鸿章，如虎之丧其伥，前途岌岌，愈益多事，此又吾所敢断言也*\n\n加之记述一下李鸿章光绪元年所上之奏疏：\n\n>*近时拘谨之儒，多以交涉洋务为涴人之具；取巧之士，又以引避洋务为自便之图。若非朝廷力开风气，破拘挛之故习，求制胜之实际，天下危局，终不可支，日后乏才，且有甚于今日者。以中国之大，而无自立之时，非惟可忧，抑亦可耻*\n\n摘录至此，不由扼腕感慨百多年前洋务之艰难，掣肘之猖獗。\n\n引避洋务以自便，多轻松的自便之法啊，从前务虚以留其名，尚且还得付出诸多代价，而洋人来了后为一个高风亮节之名，却只需对奇技淫巧表达不屑，对操办洋务以自强求富之人以鄙夷眼光视之。多轻便啊，居庙堂之高则上书参劾，处江湖之远则煽民怨怼，永远站在务虚下道德的制高点，倒颇像今天的键盘侠，下笔滔滔如有千言，若问韬略胸无一策。可惜的是今天的键盘侠倒是稍讲道理的人就会心生厌恶，而那个时代做一个真正杀人的键盘侠倒成了政治正确。\n\n而“求制胜之实际”这句话倒着实让我奇怪，我实在不知道制胜的实际为什么要求。在一个逝者如斯夫的三维世界，什么东西都是一锤子买卖，制胜难道还有实际与不实际的分别？一个管理着四亿五千万人口的朝廷，于国事竟要以“实际”与否为争论点，实在荒唐（也许以往务虚之实际对洋人不管用吧，毕竟洋人大部分人都不给你“牧”，明明这才是现在看来正常的表现到了晚清士大夫眼中成了蛮夷无廉耻的表现，估计他们也很苦恼吧），也难怪任公先生有以上断言了。\n\n这就是那个时代我国的头号国贼了，倒不知他卖的国是虚妄概念上的国还是实际意义上的国了，不知道满清朝廷在马关之后的朝堂上有没有这一议论。\n\n<center>六</center>\n\n说李是国贼的论据，我以为归纳起来大约有四个大点。其一为边防塞防之争；其二为甲午战争之败；其三为辛丑条约之耻；其四为死后余产之巨。针对这几点，我也想简单谈谈我的看法。\n\n关于边防塞防之争，以今日结果的眼光来看李鸿章所谓的“放弃新疆”自然是妥妥卖国行为，引述其作此决策的理由大致如下：\n\n>*历代备边，多在西北，其强弱之势，主客之形，皆适相埒，且犹有中外界限。今则东南海疆万余里，各国通商传教，往来自如，麇集京师，及各省腹地，阳托和好之名，阴怀吞噬之计，一国生事，诸国构煽，实为数千年来未有之变局。轮船、电报之速，瞬息千里，军器、机事之精，工力百倍，又为数千年来未有之强敌。外患之乘，变幻如此，而我犹以成法制之，譬如医者疗疾，不问何症，概投之以古方，诚未见其效也*\n\n彼时背景正为日本寻衅侵略台湾，海防压力巨大，若忽略新疆一事，我以为兴建海防实在算是清末洋务少有的高瞻远瞩之举了，而对于新疆问题，李鸿章倒似乎想以外交途径解决（这也是他的惯用伎俩了，甲午之败这也是因素之一）。唉，彼时之人哪里懂得弱国无外交的道理呢，如此看来若无左宗棠收复新疆，也许新疆在那时候就成为了永远收不回的东三省了吧（九一八事变后民国政府也企图通过外交途径解决东北问题）。\n\n也正应如此，世人往往厚左而薄李，但以我之见，左宗棠与李鸿章并无大分别，李并非一意放弃塞防而是以为边防更为紧迫，而左亦非务虚守旧之人，只是认为新疆之失已迫在眉睫而海上之难尚可以时日斡旋。边防塞防之争，与其说是善恶之争，倒不如说是厉害得失之争。可叹啊，百年后的课本中，左宗棠成了英雄，而李鸿章却成了国贼，实在只是命长与命短的分别啊。\n\n而对甲午战争之败，我没有什么好说的，整个战争我仿佛看到的不是战争，而是一帮小孩在拿人命、鲜血与一个民族的尊严为筹码玩过家家，仿佛这个国，不是实际意义上的国。世人皆知甲午海战北洋水师全军覆没，是以为耻，却不知陆军在朝鲜更是一败涂地。对此战的总结梁任公先生在为李所作传记中已经分析的很透彻了，我不再赘言，遂摘录如下。\n\n>*当中日战事之际，李鸿章以一身为万矢之的，几于身无完肤，人皆欲杀。平心而论，李鸿章诚有不能辞其咎者，其始误劝朝鲜与外国立约，昧于公法，咎一；既许立约，默认其自主，而复以兵干涉其内乱，授人口实，咎二；日本既调兵，势固有进无退，而不察先机，辄欲倚赖他国调停，致误时日，咎三；聂士成请乘日军未集之时，以兵直捣韩城以制敌而不能用，咎四；高升事未起之前，丁汝昌请以北洋海军先鏖敌舰，而不能用，遂令反客为主，敌坐大而我愈危，综其原因，皆由不欲衅自我开，以为外交之道应尔，而不知当甲午五六月间，中日早成敌国，而非友邦矣，误以交邻之道施诸兵机，咎五；鸿章将自解曰：量我兵力不足以敌日本，故惮于发难也。虽然，身任北洋整军经武二十年，何以不能一战？咎六；彼又将自解曰：政府掣肘，经费不足也。虽然，此不过不能扩充已耳，何以其所现有者，如叶志超、卫汝贵诸军，素以久练著名，亦脆弱乃尔，且克减口粮盗掠民妇之事，时有所闻，乃并纪律而无之也，咎七；枪或苦窳，弹或赝物，弹不对枪，药不随械，谓从前管军械局之人皆廉明，谁能信之，咎八；平壤之役，军无统帅，此兵家所忌，李乃蹈之，咎九；始终坐待敌攻，致于人而不能致人，畏敌如虎，咎十；海军不知用快船快炮，咎十一；旅顺天险，西人谓以数百兵守之，粮食苟足，三年不能破，乃委之于所亲昵阘冗恇怯之人，闻风先遁，咎十二。此皆可以为李鸿章罪者。若夫甲午九十月以后，则群盲狂吠，筑室道谋，号令不出自一人，则责备自不得归于一点。若尽以为李鸿章咎，李固不任受也。又岂惟不任受而已，吾见彼责李罪李者，其可责可罪，更倍蓰于李而未有已也。是役将帅无一人不辱国，不待言矣。然比较于百步五十步之间，则海军优于陆军，李鸿章部下之陆军，又较优于他军也。*\n\n战争之后，尚有广东水师向日本索要被俘舰只，理由竟是此次战役与广东无涉。荒唐至此，毫无国家民族观念，以五十步笑百步之典，李倒着实是那五十步之人，但一个国家只有五十步与百步的分别，岂不谬哉！\n\n至于辛丑条约，我以为无甚好说，前两者对李都有切实可责可恨之处，凡是认为李无一点错误责任，无一点卖国嫌疑者都是巧言令色之人。惟此辛丑条约，说李是代国背锅言辞尚可牵强而去。只是可惜可恨啊，面对务实之世界，务虚者仍活在往日虚幻的天朝大国的旧梦里，可惜是针对那时被虚妄的概念奴役却自以为自由的愚民，可恨是针对朝堂上自私自利毫无理性的那几家几姓。\n\n最后也就是死后遗产之巨了，关于这个我没有观点，也没做什么考证，四千万家产的言论没有什么根据，但清正廉洁的说法也就是自娱自乐了，而对于因为李鸿章财产甚多而输了甲午战争的言论，我也无话可说，见解如此，与键盘侠无异。以下摘录任公所作传记中的一段话，仁者见仁，智者见智吧。\n\n>*世人竞传李鸿章富甲天下，此其事殆不足信，大约数百万金之产业，意中事也。招商局、电报局、开平煤矿、中国通商银行，其股份皆不少，或言南京、上海各地之当铺银号，多属其管业云*\n\n以上四点，第一、第三、第四点我认为以此为依据对李进行口诛笔伐只是视李为国贼带来的惯性思维所致，即在摆出论据之前心中已有答案，而后用这些论据中的点去套已有的结论。这样做虽然看起来不够客观，但我认为实在是人心所向。而第二点则是“国贼论”的核心，也是李鸿章以及所谓大清帝国的转折点吧，在这一点上李鸿章有直接责任。从前被英法等一流列强欺负，但装饰门面倒还对的起“帝国”这两个字的隐形含义，今而兴洋务练出的新军在日本人面前不堪一击，以使敌人在朝鲜都不相信战胜的就是所谓清廷按照西法练成的精锐部队。\n\n由此看来，这些活在近代的中古士大夫在务虚本领之上倒还是实在的啊，能够做到让外人不辨雌雄。\n\n<center>七</center>\n\n对李鸿章，梁任公先生总结其为“时势所造之英雄，非造时势之英雄”，又对其一生事迹评价为“不学无术，不敢破格，是其所短也；不避劳苦，不畏谤言，是其所长也”。\n\n是英雄造时势还是时势造英雄，这一直可以视为是一个悖论问题，这一问题有诸多解法的原因其实也只是因为对英雄与时势有诸多不同的定义与见解而已。\n\n英雄是什么，一怒之下伏尸百万流血千里的应该能算，这是就其权威而论的；率性任侠义气为先的想必也能算，这是就其个性担当而言的；富国强兵振兴朝政的一定能算，这是就其能力而论的；而为国请命鞠躬尽瘁死而后已的也一定能算，这是就其一片赤子之心而论的。这四点似乎都没错，但偏偏国贼李鸿章似乎与后三点都沾些边，对部下讲情义，为国事不避艰难，临死之前尚在为国事操心，按这个道理，他该是英雄啊，在通俗历史评价上他该是顶线以上的人啊，怎么会落得底线以下的看法与待遇呢？还是引用任公先生的话。\n\n>*十九世纪列国皆有英雄，而我国独无一英雄，则吾辈安得不指鹿为马，聊自解嘲，翘李鸿章以示于世界曰，此我国之英雄也。呜呼！亦适我国之英雄而已矣，亦适成为我国十九世纪以前之英雄而已矣*\n\n是啊，自始皇帝嬴政开创中央集权政体之日起，五经四书浸染之下的千年务虚时代，又哪有什么英雄造时势的事情呢？始皇殁后有项羽，一个勇武过人的英雄在乎的是如何让锦衣不夜行，在意这种虚妄的概念使他重新推行分封。后有刘邦，有曹操，有李世民，有赵匡胤，有朱洪武，再有所谓康乾盛世，有所谓同治中兴，那么多个皇帝之下有那么多个能人猛士堪称英雄，可有谁真正造就过时势吗？似乎有，如周瑜赤壁的那一把火，似乎又没有，因为我只看到了一个个朝代的更替与牧民锁链的加重。也许以百年局部的眼光来看，总有公瑾一般的豪杰改造时势，但以千年民族国家的眼光来看，十九世纪前所谓的英雄，不过是在同一片天空之下翻手为云覆手为雨罢了，他们从没有改天换日的见识与气魄。\n\n话虽这样说，但英雄在他们的时代仍然是英雄，非要以今日之眼光视昨日之旧人未免落入历史虚无主义的窠臼。而对李鸿章以国贼的态度进行苛责，与此同理，无非是以今日之评价观点视旧时之英雄罢了。在对李一系列失误的讨论之外，我认为不应该让一个旧时代的先行者为他所处的整个时代背锅。\n\n但话又说回来，这样一个不避劳苦的旧时代先行者，究其一生却为何在历史上仍落个身败名裂的下场呢？\n\n千年务虚时代，治经论典自然是务虚，可人毕竟是活在现实世界的啊，“务实”必不可少，闻鸡起舞者有之，改政变法者有之，“格物致知”者亦有之，为何集数千年这亿万之人，却无一个堪当变务虚时势为务实的英雄呢？自是千年务虚痼疾已深，不彻底打碎更变实在是无从谈起啊。否定了这一点，就是对20世纪我们中国人长达一个世纪的更革奋斗视而不见。\n\n而以李鸿章为汉奸国贼者，必为甲午之败辛丑之耻痛惜扼腕，仿佛杀李则能改变战局避免国耻，而清廷则仍是堂堂正正的大清帝国，这实在是癔梦啊。想当造时势之英雄，则必须要能真正的打破务虚学而有术，这在当时几乎是与整个千年文化积习为敌，事实证明李鸿章这种务虚时代的实干家不行，翁同龢这种务虚时代的所谓君子、康有为这种务虚时代所谓的改革家都不行，那些务虚时代的小人就更不必说了。\n\n以李鸿章之务实敢干不辞辛劳生于务虚时代都难以学而有术，洋务半生尚“不识国民之原理，不通世界之大势，不知政治之本原”，一生兢兢业业如履薄冰都难以在后世摆脱一个“国贼”的骂名，可见务虚痼疾程度之深了。以务虚时代之英雄而成务实时代之国贼，英雄和国贼果然有所谓巨大的间隙吗？还是李鸿章生平前后的主流文化之间有这般巨大的间隙呢？这百年来，那么多只如鲁迅先生般的如椽巨笔，才堪堪扭转千年痼疾在人心中的荼毒之深，将这种荼毒所表现出的后果让李一人一力承担，我觉得实在是肤浅过分的言论。\n\n唉，以旧英雄之身份而成新时代之国贼，以今日之眼光，到底该视为李鸿章的过错还是千年务虚文化的过错呢？\n\n<center>八</center>\n\n作为一个中国人，对历史总会心存一些假如（毕竟有强汉盛唐，现在的口号也还是复兴）。总有人会说满清误国，认为遇上19世纪那千年未有之变局的假如不是满清朝廷而是汉人王朝情况会完全不同；也有人会想若遭遇此事的中国统治者不是咸丰，不是光绪，不是慈禧，而是秦皇汉武唐宗宋祖，结局也会不一样；还有人说明朝的资本主义萌芽是被满清给消灭的，否则中国也会自然而然的成为近代西方那样发达的资本主义国家。\n\n诸如此类的想法很多，但历史没有偶然，即使有偶然，在一个模拟器中能够重现历史，让那些明君圣君放弃一家一姓特权，让那些世家门阀放弃所有地方权益的概率能有多少呢？即使有人真的愿意，他能够扳的过整个旧文化的手腕吗？（过继当上皇帝的想尊自己的生父历朝历代士大夫都会罗里吧嗦的，没有点手腕的皇帝连这种事都搞不定，即使手腕通天难道能搞定整个文化变革的事情吗？因此在中国这种务虚文化的千年体系下，自上而下的改革是不可能行的通的，想变革只有改变一个民族的思想，这又哪里是一个人能够办得到的呢），孟子说过“人之所以异于禽兽者几希，庶民去之，君子存之”，孟子当然是惯于骂人禽兽，而放弃他这种庶民君子的成见，还智于百姓，让“君子”与“禽兽”平起平坐，历代有君王与权臣能够做到吗？（也许中国能够依赖如明治天皇那样的明君通过变革依靠广阔的土地在19世纪成为列强，但这种强国方式与英美等国还是有根本区别，日本明治维新后是变强了，但仍然有华族这种旧时代产物，我以为仍然带着野蛮不理性的气息，以中国之大，如此，更甚矣，仍然只会成为如沙皇俄国那样的纸老虎）王莽的改制引来了千古骂名只是因为其制过激而使掣肘过厉，而“科举”的产生也只是得益于旧门阀势力的削弱，而这种削弱，无不是血与铁的结果，而后再看19世纪末李鸿章所遭之非议，守旧势力在19世纪到20世纪的关口还指望着把洋人赶走继续上古时期的统治方法。这是他们幼稚吗？不是，实在是千年务虚积疾过深，使得四万万国人人人为鸵鸟而不自知，大才如严复尚且崇尚科举，务实如李鸿章尚且惋惜自己一生没做成军机大臣。\n\n在这种千年务虚观念深入骨髓的情况下，小修小补有用吗？剜肉补疮有用吗？我看把血全换了都未必有用。在这种情况下，将千年务虚积累下导致的癔病产生的痛苦全部归咎给李鸿章这种只会小医小补的郎中，合理吗？骂李是国贼，那必须带上当时满朝文武，带上当时被欺罔了数千年的四万万百姓，带上数千年政治文化风俗的方方面面。雪崩之时，没有一片雪花是无辜的，但作为压死骆驼的最后一根稻草，难道李鸿章留给历史的意义只是让后人怒斥痛骂吗？\n\n十九世纪以前的英雄，配上了务虚思想引导下的务实，却成了日后人们眼中的国贼，应该感到悲哀吗？不应该感到悲哀吗？对着那个由务虚向务实转化的时代，是继续痛斥那务虚时代下的国贼或者说英雄，还是应该对我们19世纪以前的文化多做一些反思呢？\n\n后者，我以为才是李鸿章这个历史车轮扭动间隙下产生的矛盾人物该给我们带来的意义。\n\n<center>后记</center>\n\n本文基本可以视为是《走向共和》电视剧前半段以及梁任公先生的传记《李鸿章》的观后感吧，写之前没想过要什么纲领也没有确定什么中心论点，写到现在洋洋洒洒有八千多字，也渐渐形成了一个很不清晰的脉络吧。\n\n全文的中心其实也就是以李鸿章个人在通俗历史评价上的矛盾为引，引出对19世纪前中华传统文化的反思吧。一个代表着那段历史的人物，以两种文化的眼光看待，会得出英雄和国贼两个迥异的看法，这种激烈的矛盾也着实可以说明旧文化的一些荒谬之处了。\n\n当然全文只是借用了务实与务虚这一对矛盾在19世纪末那个节点上所爆发出来的强弱态势，并没有对中西文化或者说中国传统文化与现代文化进行所谓优劣对比及形成原因说明。因为非要进行详细的对比说明的话，我认为恐怕得从先秦思想和古希腊哲学的迥异说起，那话题就大了，所以全文对这种矛盾在我国中世纪的表现仅仅以叙代议，所表达的仅仅只是矛盾本身而不是对矛盾产生原因的分析论证。\n\n全文以李鸿章为引，但对李鸿章一生的事迹仅仅摘捡了其作为国贼原因的几个大点论述，如果对李鸿章或那个时代感兴趣，着实推荐任公先生的传记《李鸿章》（即《同光以来大事记》），其文作于1901年李鸿章死后不久，集合了那个时代的视角与梁公极其客观的评价，我认为堪称是了解李鸿章的第一手资料，也是了解那个时代的一个不错的POV。\n\n再来谈谈文章的另一个引子孔融，也许以知人论世而言他该算是在文学上卓有成就（建安七子之首），气节上也不错（堪称魏晋风骨，虽然我以为孔融这种气节不要也罢）。我在文章中如此苛责他说实话与大众苛责李鸿章也许没有什么本质的区别吧，要说区别，其实也是因为孔融所代表的这种务虚做派着实让我disgusting吧（细细想来，古人会写字的不多，所以键盘侠才会如此弥足珍贵吧），之前读过一些孔融的史料，有机会会写写我为啥那么不喜欢孔融，在此不再说明了。\n\n最后，谈谈为何我写着写着就以务虚作为一个主线了吧，这个原因说来惭愧，实在是自己的务虚行为所致，如今三月，还有三个月本科就该画上句号，但纵观自己这四年，基本没干成什么实在的事情（书读的好当然是实在的，游戏打出了名堂也是实在的啊，唯独什么都没做的像样倒是值得思考的一个点），遂作此文以自勉。\n\n子夜，记于2020.3.4 九江。希望疫情退散武汉加油。","source":"_posts/务虚时代下的国贼——李鸿章.md","raw":"---\ntitle: 务虚时代下的国贼——李鸿章\ndate: 2020-03-04 12:17:16\ntags:\n    - 杂文\ncategories:\n    - 随笔\n    - 杂文\nfileName: Li_Hongzhang\n---\n<center>一</center>\n\n近日看老剧《走向共和》，其前半段多以李鸿章之视角演绎，李鸿章何许人也，若非要集这百年悠悠之口套出几个词来，想必就是汉奸卖国贼之类的了，至少用于普及基本历史常识的历史课本中，作为百年国耻代表的《马关条约》与《辛丑条约》之上，就铸着该君的名字，所以这样说也没错。\n\n所谓汉奸，所谓卖国贼，这两个词至少在中华文化体系下是一种性质非常恶劣的词了吧，这与百年辛酸史，或者说在国家危亡之际国人对所谓“忠臣名将”的向往是分不开的，无论何人，无论何时，只要在身份认同上认为自己是中国人的，对待这些人都可以堂而皇之的啐一口唾沫，道一声“呸”。因为在我们中国人眼中，对历史的“通俗看法”（所谓通俗看法，是指不专门研究某一段历史的普通人，对身处该时段历史人物的主观看法，或说评价）是有底线和顶线的，底线想必就是卖国攘民等龌龊行径了，而顶线就是所谓为国请命的英雄们了，或者说以死明志的气节。当然除此之外，在看待历史人物时，顶线与底线往往还联络着主角道德的好与坏。\n\n<center>二</center>\n\n底线之下，无论之前干过什么，无论这个人作为一个人来讲怎么样，都不值得原谅，参考秦桧与汪精卫（前者还跪着呢）；而顶线之上，有所作为当然更好，但似乎事情做没做成也没有太大所谓，死谏，不趋附权贵，最好再带点文采写些个正气凛然的东西或者稀里糊涂的处在一段展现美好品行的故事中心，都值得树碑立传，万世景仰（至少在大部分国人心目中此类人物的形象是好的），参考孔融。\n\n底线之下，无甚好说，做了过分引人注目的坏事情，难道还会有很多人愿意去考虑你干这坏事之前的心路？大部分人会憎恶你，少部分脑袋勤快点的人会在憎恶中加上一些同情，还有极小部分人会把你当成一个工具，表达他们“看清事实”与“与众不同”的工具，这一类人不谈也罢，他们不懂得当瑕疵多到一种程度时，瑕不掩瑜这个词是不适用的。\n\n但顶线之上就会有一些问题了，在史书中活成这一类的人心念一动就能想出很多，他们大部分都可以作为鲁迅先生笔下我中华的脊梁，但我偏偏把孔融放在这里，为何呢？是因为我想说明这条适用于大众的对历史人物看法的惯性思维多半有些不客观。“孔四岁，能让梨”，这是大部分人都清楚的故事，别的不说，我在痴迷三国的那个年龄，总还是把孔融当成个人物的。但稍稍读点书，以今日之眼光，想瞧得上孔融这个人实在是难，可他却在未来的两千年里享尽英德之名，被无数父母当作启蒙孩子的一个典范，与古往今来无数仁人志士枭雄豪杰并排而立，我以为实在是忝列其中啊。\n\n<center>三</center>\n\n让一个梨便得以流芳千古，这个梨也实在是贵的很啊，让梨这个操作也算是东汉末年一个最成功的炒作了吧。但我实在是不明白大一点的梨子是孔融吃掉还是他哥哥吃掉到底对他们一家或者说对他们兄弟二人能有多大干系呢。非要说的话，难道梨子在东汉越大越香？而大到一定程度会产生口感上的质变？还是一个天生不太喜欢吃梨子的小孩在东汉不太常见？\n\n我以为是后者，毕竟在一个百姓连饭都吃不饱的时代，产生一个类似孔融这种不喜欢梨的小孩实在是困难，这也是保证这件事合理性的唯一解释了，不然孔融一家想必都有癔症。\n\n但遗憾的是，事实来看他们一家就是有癔症，也许是遗传的吧。毕竟硬要说的话，他们的老祖宗孔丘也有癔症，但孔夫子的癔症到底是在我这个两千多年后的后生眼里才能得见的，在孔夫子那个时代就算是癔症也多少有些可爱。但一种病毒也许两千年前无伤大雅甚至可以说是可爱，到一千年前病毒几经变异变成了值得称颂的一个身体特征，而到了一百多年前当一个群体把感染了这个病毒当成荣耀并认为人人便该如此的时候，来了另一群没得病且更强壮的人使得感染这个病毒变成了自然选择的一个逆选项时，有一些病人开始尝试治病但囿于同胞掣肘与病毒几经进化下的狡诈以及自身体内病毒的顽固，失败了，对于这种人，在考虑失败后果之前，我以为首先得感慨一下其知其不可而为之的勇气，至少这是我尊敬孔子的一个重要原因，也是我认为对卖国贼李鸿章，有必要进行另一番议论的原因。\n\n<center>四</center>\n\n以上所述的“癔症”，我想与今年的新冠肺炎多少有些类似，症状复杂容易变异，只是这癔症并不作用在生理上而是作用在精神上。其症状很多，五花八门，但我今天想谈谈的只有务虚。\n\n就像孔融让梨得到赞扬一样，赞扬的不是让梨这个动作而是其谦让的品德。我从不否认谦让是个美德，但让一个历史上实实在在活生生的人，因为这样一个简单的动作就成为了根植一个名族内心千年的道德符号，我认为实在是荒谬了些，哲学上喜欢将一件事情推到极端而后再观察其是否仍然符合某一标准，而长大后的孔融倒着实使这个荒谬的意味更深了些。\n\n几乎没有付出任何代价与个人的努力，一件名门世家随意记录的小小的事情，让一个人毫不费力收获了也许是古往今来来自孩子和家长们最多的赞誉，这不是偶然，而是自先秦到清末国人一直存在的务虚观念，几个小小的汉字，所谓仁义礼智信孝廉，都是好的优秀的修身品德，也从来都是封建时代的国人精英们竞相模仿参照的对象，可仔细想想，这几个字有所谓放之四海而皆准的具体的标准与定义吗？是所谓的标准管用还是历代大儒帝王的一声惊叹或者流传坊间的一段传奇更加管用呢？普通人是实实在在的做事更能得到赞扬还是卧冰求鲤式的“作秀”更能得到赞扬呢？\n\n这些品德确立之初的好坏我无从得知，但由于上述文字解释权等原因，这几个字或者说我中华中世纪所追求的那些抽象的概念，渐渐变为了权力与利益的代言人，成为了统治者所谓推行“王治”的工具（与其说是王治，不如说是愚民）。而随着皇权的愈加集中，传播这些务虚概念的工具，即我们引以为傲的科举，使得无数中世纪乃至近代的国人精英沦为了务虚的奴隶，深陷囹圄而自以为自由（李鸿章有改变很多事物的资本，但他囿于所谓忠君之类的概念敷衍其事含糊其词，想必也是务虚已入骨髓矣）。在没有西方文化冲击的情况下，整个民族和国家都浸沐在这务虚的汤药中，难以自拔。\n\n我本身是一个很懒惰的人，所谓磨洋工的一把好手，所以倘若我在百年千年前的话，肯定会变着花样以把自己弄死为标准去对应这些百姓追求统治者喜欢的概念，也许周围正好来了个大儒书圣，听说了我的故事的话还能把我的事迹记录一些，这样“流芳百世”的难度的确是大，但想必也比实干勤学的概率要大的多，还省去了不论是脑力还是体力带来的困难与麻烦，整不好运气更好点倒是能成为孔融一样的道德符号，实在是妙啊，妙不可言。\n\n既然务虚便能带来一切能够自我宽慰还得社会认可的东西，那作为贵族官员干嘛要务实呢？留着指甲，以商贾为耻，以农桑为耻，以一切实干为耻（当然社会是需要人做实事的，但做实事在我们的文化里受待见吗？所谓君子远庖厨，历朝历代各个英雄豪杰当然也有很多实干的，但实干的基础仍然是这个务虚的社会，这本身就给这个实干抹上了一层务虚的阴影），专注虚妄的经学便能高人一等，有文才胸富万经的为官一处自是高高在上，没有这个本事的寒窗苦读一番也能落个“读书人的偷能叫偷吗”的阿Q式精神胜利，在精神上又是高高在上，都是高高在上，在1793年英国使团来华时是高高在上，在19世纪被英国揍、被日本揍之后还是高高在上。永远都是高高在上，这一词也许便能概括李鸿章一生大部分清廷官员的心理了吧，即使对洋人卑躬屈膝，对着百姓照样还是高高在上，照样是所谓“牧民于野”的当代俊杰。\n\n欺民，罔民，愚民，却将这种行为解释为王化，“王化”过后便使牧民如放牧牛羊那般简单（如此看来儒家的王治倒是能够作为畜牧业一个很好的理论），古语中的这个“牧”字用的很是精髓啊。这也概括了务虚之道能够得以盛行，国人能够自欺欺人的原因，在这样一个务虚时代之末，则有国贼李鸿章。\n\n<center>五</center>\n\n梁任公先生在1901年为李鸿章做的传记里，有这样一段话：\n\n>*夫李鸿章果足称为中国第一人与否吾不敢知，而要之现今五十岁以上之人，三四品以上之官，无一可以望李之肩背者，则吾所能断言也。李之死，于中国全局有关系与否吾不敢知，而要之现在政府失一李鸿章，如虎之丧其伥，前途岌岌，愈益多事，此又吾所敢断言也*\n\n加之记述一下李鸿章光绪元年所上之奏疏：\n\n>*近时拘谨之儒，多以交涉洋务为涴人之具；取巧之士，又以引避洋务为自便之图。若非朝廷力开风气，破拘挛之故习，求制胜之实际，天下危局，终不可支，日后乏才，且有甚于今日者。以中国之大，而无自立之时，非惟可忧，抑亦可耻*\n\n摘录至此，不由扼腕感慨百多年前洋务之艰难，掣肘之猖獗。\n\n引避洋务以自便，多轻松的自便之法啊，从前务虚以留其名，尚且还得付出诸多代价，而洋人来了后为一个高风亮节之名，却只需对奇技淫巧表达不屑，对操办洋务以自强求富之人以鄙夷眼光视之。多轻便啊，居庙堂之高则上书参劾，处江湖之远则煽民怨怼，永远站在务虚下道德的制高点，倒颇像今天的键盘侠，下笔滔滔如有千言，若问韬略胸无一策。可惜的是今天的键盘侠倒是稍讲道理的人就会心生厌恶，而那个时代做一个真正杀人的键盘侠倒成了政治正确。\n\n而“求制胜之实际”这句话倒着实让我奇怪，我实在不知道制胜的实际为什么要求。在一个逝者如斯夫的三维世界，什么东西都是一锤子买卖，制胜难道还有实际与不实际的分别？一个管理着四亿五千万人口的朝廷，于国事竟要以“实际”与否为争论点，实在荒唐（也许以往务虚之实际对洋人不管用吧，毕竟洋人大部分人都不给你“牧”，明明这才是现在看来正常的表现到了晚清士大夫眼中成了蛮夷无廉耻的表现，估计他们也很苦恼吧），也难怪任公先生有以上断言了。\n\n这就是那个时代我国的头号国贼了，倒不知他卖的国是虚妄概念上的国还是实际意义上的国了，不知道满清朝廷在马关之后的朝堂上有没有这一议论。\n\n<center>六</center>\n\n说李是国贼的论据，我以为归纳起来大约有四个大点。其一为边防塞防之争；其二为甲午战争之败；其三为辛丑条约之耻；其四为死后余产之巨。针对这几点，我也想简单谈谈我的看法。\n\n关于边防塞防之争，以今日结果的眼光来看李鸿章所谓的“放弃新疆”自然是妥妥卖国行为，引述其作此决策的理由大致如下：\n\n>*历代备边，多在西北，其强弱之势，主客之形，皆适相埒，且犹有中外界限。今则东南海疆万余里，各国通商传教，往来自如，麇集京师，及各省腹地，阳托和好之名，阴怀吞噬之计，一国生事，诸国构煽，实为数千年来未有之变局。轮船、电报之速，瞬息千里，军器、机事之精，工力百倍，又为数千年来未有之强敌。外患之乘，变幻如此，而我犹以成法制之，譬如医者疗疾，不问何症，概投之以古方，诚未见其效也*\n\n彼时背景正为日本寻衅侵略台湾，海防压力巨大，若忽略新疆一事，我以为兴建海防实在算是清末洋务少有的高瞻远瞩之举了，而对于新疆问题，李鸿章倒似乎想以外交途径解决（这也是他的惯用伎俩了，甲午之败这也是因素之一）。唉，彼时之人哪里懂得弱国无外交的道理呢，如此看来若无左宗棠收复新疆，也许新疆在那时候就成为了永远收不回的东三省了吧（九一八事变后民国政府也企图通过外交途径解决东北问题）。\n\n也正应如此，世人往往厚左而薄李，但以我之见，左宗棠与李鸿章并无大分别，李并非一意放弃塞防而是以为边防更为紧迫，而左亦非务虚守旧之人，只是认为新疆之失已迫在眉睫而海上之难尚可以时日斡旋。边防塞防之争，与其说是善恶之争，倒不如说是厉害得失之争。可叹啊，百年后的课本中，左宗棠成了英雄，而李鸿章却成了国贼，实在只是命长与命短的分别啊。\n\n而对甲午战争之败，我没有什么好说的，整个战争我仿佛看到的不是战争，而是一帮小孩在拿人命、鲜血与一个民族的尊严为筹码玩过家家，仿佛这个国，不是实际意义上的国。世人皆知甲午海战北洋水师全军覆没，是以为耻，却不知陆军在朝鲜更是一败涂地。对此战的总结梁任公先生在为李所作传记中已经分析的很透彻了，我不再赘言，遂摘录如下。\n\n>*当中日战事之际，李鸿章以一身为万矢之的，几于身无完肤，人皆欲杀。平心而论，李鸿章诚有不能辞其咎者，其始误劝朝鲜与外国立约，昧于公法，咎一；既许立约，默认其自主，而复以兵干涉其内乱，授人口实，咎二；日本既调兵，势固有进无退，而不察先机，辄欲倚赖他国调停，致误时日，咎三；聂士成请乘日军未集之时，以兵直捣韩城以制敌而不能用，咎四；高升事未起之前，丁汝昌请以北洋海军先鏖敌舰，而不能用，遂令反客为主，敌坐大而我愈危，综其原因，皆由不欲衅自我开，以为外交之道应尔，而不知当甲午五六月间，中日早成敌国，而非友邦矣，误以交邻之道施诸兵机，咎五；鸿章将自解曰：量我兵力不足以敌日本，故惮于发难也。虽然，身任北洋整军经武二十年，何以不能一战？咎六；彼又将自解曰：政府掣肘，经费不足也。虽然，此不过不能扩充已耳，何以其所现有者，如叶志超、卫汝贵诸军，素以久练著名，亦脆弱乃尔，且克减口粮盗掠民妇之事，时有所闻，乃并纪律而无之也，咎七；枪或苦窳，弹或赝物，弹不对枪，药不随械，谓从前管军械局之人皆廉明，谁能信之，咎八；平壤之役，军无统帅，此兵家所忌，李乃蹈之，咎九；始终坐待敌攻，致于人而不能致人，畏敌如虎，咎十；海军不知用快船快炮，咎十一；旅顺天险，西人谓以数百兵守之，粮食苟足，三年不能破，乃委之于所亲昵阘冗恇怯之人，闻风先遁，咎十二。此皆可以为李鸿章罪者。若夫甲午九十月以后，则群盲狂吠，筑室道谋，号令不出自一人，则责备自不得归于一点。若尽以为李鸿章咎，李固不任受也。又岂惟不任受而已，吾见彼责李罪李者，其可责可罪，更倍蓰于李而未有已也。是役将帅无一人不辱国，不待言矣。然比较于百步五十步之间，则海军优于陆军，李鸿章部下之陆军，又较优于他军也。*\n\n战争之后，尚有广东水师向日本索要被俘舰只，理由竟是此次战役与广东无涉。荒唐至此，毫无国家民族观念，以五十步笑百步之典，李倒着实是那五十步之人，但一个国家只有五十步与百步的分别，岂不谬哉！\n\n至于辛丑条约，我以为无甚好说，前两者对李都有切实可责可恨之处，凡是认为李无一点错误责任，无一点卖国嫌疑者都是巧言令色之人。惟此辛丑条约，说李是代国背锅言辞尚可牵强而去。只是可惜可恨啊，面对务实之世界，务虚者仍活在往日虚幻的天朝大国的旧梦里，可惜是针对那时被虚妄的概念奴役却自以为自由的愚民，可恨是针对朝堂上自私自利毫无理性的那几家几姓。\n\n最后也就是死后遗产之巨了，关于这个我没有观点，也没做什么考证，四千万家产的言论没有什么根据，但清正廉洁的说法也就是自娱自乐了，而对于因为李鸿章财产甚多而输了甲午战争的言论，我也无话可说，见解如此，与键盘侠无异。以下摘录任公所作传记中的一段话，仁者见仁，智者见智吧。\n\n>*世人竞传李鸿章富甲天下，此其事殆不足信，大约数百万金之产业，意中事也。招商局、电报局、开平煤矿、中国通商银行，其股份皆不少，或言南京、上海各地之当铺银号，多属其管业云*\n\n以上四点，第一、第三、第四点我认为以此为依据对李进行口诛笔伐只是视李为国贼带来的惯性思维所致，即在摆出论据之前心中已有答案，而后用这些论据中的点去套已有的结论。这样做虽然看起来不够客观，但我认为实在是人心所向。而第二点则是“国贼论”的核心，也是李鸿章以及所谓大清帝国的转折点吧，在这一点上李鸿章有直接责任。从前被英法等一流列强欺负，但装饰门面倒还对的起“帝国”这两个字的隐形含义，今而兴洋务练出的新军在日本人面前不堪一击，以使敌人在朝鲜都不相信战胜的就是所谓清廷按照西法练成的精锐部队。\n\n由此看来，这些活在近代的中古士大夫在务虚本领之上倒还是实在的啊，能够做到让外人不辨雌雄。\n\n<center>七</center>\n\n对李鸿章，梁任公先生总结其为“时势所造之英雄，非造时势之英雄”，又对其一生事迹评价为“不学无术，不敢破格，是其所短也；不避劳苦，不畏谤言，是其所长也”。\n\n是英雄造时势还是时势造英雄，这一直可以视为是一个悖论问题，这一问题有诸多解法的原因其实也只是因为对英雄与时势有诸多不同的定义与见解而已。\n\n英雄是什么，一怒之下伏尸百万流血千里的应该能算，这是就其权威而论的；率性任侠义气为先的想必也能算，这是就其个性担当而言的；富国强兵振兴朝政的一定能算，这是就其能力而论的；而为国请命鞠躬尽瘁死而后已的也一定能算，这是就其一片赤子之心而论的。这四点似乎都没错，但偏偏国贼李鸿章似乎与后三点都沾些边，对部下讲情义，为国事不避艰难，临死之前尚在为国事操心，按这个道理，他该是英雄啊，在通俗历史评价上他该是顶线以上的人啊，怎么会落得底线以下的看法与待遇呢？还是引用任公先生的话。\n\n>*十九世纪列国皆有英雄，而我国独无一英雄，则吾辈安得不指鹿为马，聊自解嘲，翘李鸿章以示于世界曰，此我国之英雄也。呜呼！亦适我国之英雄而已矣，亦适成为我国十九世纪以前之英雄而已矣*\n\n是啊，自始皇帝嬴政开创中央集权政体之日起，五经四书浸染之下的千年务虚时代，又哪有什么英雄造时势的事情呢？始皇殁后有项羽，一个勇武过人的英雄在乎的是如何让锦衣不夜行，在意这种虚妄的概念使他重新推行分封。后有刘邦，有曹操，有李世民，有赵匡胤，有朱洪武，再有所谓康乾盛世，有所谓同治中兴，那么多个皇帝之下有那么多个能人猛士堪称英雄，可有谁真正造就过时势吗？似乎有，如周瑜赤壁的那一把火，似乎又没有，因为我只看到了一个个朝代的更替与牧民锁链的加重。也许以百年局部的眼光来看，总有公瑾一般的豪杰改造时势，但以千年民族国家的眼光来看，十九世纪前所谓的英雄，不过是在同一片天空之下翻手为云覆手为雨罢了，他们从没有改天换日的见识与气魄。\n\n话虽这样说，但英雄在他们的时代仍然是英雄，非要以今日之眼光视昨日之旧人未免落入历史虚无主义的窠臼。而对李鸿章以国贼的态度进行苛责，与此同理，无非是以今日之评价观点视旧时之英雄罢了。在对李一系列失误的讨论之外，我认为不应该让一个旧时代的先行者为他所处的整个时代背锅。\n\n但话又说回来，这样一个不避劳苦的旧时代先行者，究其一生却为何在历史上仍落个身败名裂的下场呢？\n\n千年务虚时代，治经论典自然是务虚，可人毕竟是活在现实世界的啊，“务实”必不可少，闻鸡起舞者有之，改政变法者有之，“格物致知”者亦有之，为何集数千年这亿万之人，却无一个堪当变务虚时势为务实的英雄呢？自是千年务虚痼疾已深，不彻底打碎更变实在是无从谈起啊。否定了这一点，就是对20世纪我们中国人长达一个世纪的更革奋斗视而不见。\n\n而以李鸿章为汉奸国贼者，必为甲午之败辛丑之耻痛惜扼腕，仿佛杀李则能改变战局避免国耻，而清廷则仍是堂堂正正的大清帝国，这实在是癔梦啊。想当造时势之英雄，则必须要能真正的打破务虚学而有术，这在当时几乎是与整个千年文化积习为敌，事实证明李鸿章这种务虚时代的实干家不行，翁同龢这种务虚时代的所谓君子、康有为这种务虚时代所谓的改革家都不行，那些务虚时代的小人就更不必说了。\n\n以李鸿章之务实敢干不辞辛劳生于务虚时代都难以学而有术，洋务半生尚“不识国民之原理，不通世界之大势，不知政治之本原”，一生兢兢业业如履薄冰都难以在后世摆脱一个“国贼”的骂名，可见务虚痼疾程度之深了。以务虚时代之英雄而成务实时代之国贼，英雄和国贼果然有所谓巨大的间隙吗？还是李鸿章生平前后的主流文化之间有这般巨大的间隙呢？这百年来，那么多只如鲁迅先生般的如椽巨笔，才堪堪扭转千年痼疾在人心中的荼毒之深，将这种荼毒所表现出的后果让李一人一力承担，我觉得实在是肤浅过分的言论。\n\n唉，以旧英雄之身份而成新时代之国贼，以今日之眼光，到底该视为李鸿章的过错还是千年务虚文化的过错呢？\n\n<center>八</center>\n\n作为一个中国人，对历史总会心存一些假如（毕竟有强汉盛唐，现在的口号也还是复兴）。总有人会说满清误国，认为遇上19世纪那千年未有之变局的假如不是满清朝廷而是汉人王朝情况会完全不同；也有人会想若遭遇此事的中国统治者不是咸丰，不是光绪，不是慈禧，而是秦皇汉武唐宗宋祖，结局也会不一样；还有人说明朝的资本主义萌芽是被满清给消灭的，否则中国也会自然而然的成为近代西方那样发达的资本主义国家。\n\n诸如此类的想法很多，但历史没有偶然，即使有偶然，在一个模拟器中能够重现历史，让那些明君圣君放弃一家一姓特权，让那些世家门阀放弃所有地方权益的概率能有多少呢？即使有人真的愿意，他能够扳的过整个旧文化的手腕吗？（过继当上皇帝的想尊自己的生父历朝历代士大夫都会罗里吧嗦的，没有点手腕的皇帝连这种事都搞不定，即使手腕通天难道能搞定整个文化变革的事情吗？因此在中国这种务虚文化的千年体系下，自上而下的改革是不可能行的通的，想变革只有改变一个民族的思想，这又哪里是一个人能够办得到的呢），孟子说过“人之所以异于禽兽者几希，庶民去之，君子存之”，孟子当然是惯于骂人禽兽，而放弃他这种庶民君子的成见，还智于百姓，让“君子”与“禽兽”平起平坐，历代有君王与权臣能够做到吗？（也许中国能够依赖如明治天皇那样的明君通过变革依靠广阔的土地在19世纪成为列强，但这种强国方式与英美等国还是有根本区别，日本明治维新后是变强了，但仍然有华族这种旧时代产物，我以为仍然带着野蛮不理性的气息，以中国之大，如此，更甚矣，仍然只会成为如沙皇俄国那样的纸老虎）王莽的改制引来了千古骂名只是因为其制过激而使掣肘过厉，而“科举”的产生也只是得益于旧门阀势力的削弱，而这种削弱，无不是血与铁的结果，而后再看19世纪末李鸿章所遭之非议，守旧势力在19世纪到20世纪的关口还指望着把洋人赶走继续上古时期的统治方法。这是他们幼稚吗？不是，实在是千年务虚积疾过深，使得四万万国人人人为鸵鸟而不自知，大才如严复尚且崇尚科举，务实如李鸿章尚且惋惜自己一生没做成军机大臣。\n\n在这种千年务虚观念深入骨髓的情况下，小修小补有用吗？剜肉补疮有用吗？我看把血全换了都未必有用。在这种情况下，将千年务虚积累下导致的癔病产生的痛苦全部归咎给李鸿章这种只会小医小补的郎中，合理吗？骂李是国贼，那必须带上当时满朝文武，带上当时被欺罔了数千年的四万万百姓，带上数千年政治文化风俗的方方面面。雪崩之时，没有一片雪花是无辜的，但作为压死骆驼的最后一根稻草，难道李鸿章留给历史的意义只是让后人怒斥痛骂吗？\n\n十九世纪以前的英雄，配上了务虚思想引导下的务实，却成了日后人们眼中的国贼，应该感到悲哀吗？不应该感到悲哀吗？对着那个由务虚向务实转化的时代，是继续痛斥那务虚时代下的国贼或者说英雄，还是应该对我们19世纪以前的文化多做一些反思呢？\n\n后者，我以为才是李鸿章这个历史车轮扭动间隙下产生的矛盾人物该给我们带来的意义。\n\n<center>后记</center>\n\n本文基本可以视为是《走向共和》电视剧前半段以及梁任公先生的传记《李鸿章》的观后感吧，写之前没想过要什么纲领也没有确定什么中心论点，写到现在洋洋洒洒有八千多字，也渐渐形成了一个很不清晰的脉络吧。\n\n全文的中心其实也就是以李鸿章个人在通俗历史评价上的矛盾为引，引出对19世纪前中华传统文化的反思吧。一个代表着那段历史的人物，以两种文化的眼光看待，会得出英雄和国贼两个迥异的看法，这种激烈的矛盾也着实可以说明旧文化的一些荒谬之处了。\n\n当然全文只是借用了务实与务虚这一对矛盾在19世纪末那个节点上所爆发出来的强弱态势，并没有对中西文化或者说中国传统文化与现代文化进行所谓优劣对比及形成原因说明。因为非要进行详细的对比说明的话，我认为恐怕得从先秦思想和古希腊哲学的迥异说起，那话题就大了，所以全文对这种矛盾在我国中世纪的表现仅仅以叙代议，所表达的仅仅只是矛盾本身而不是对矛盾产生原因的分析论证。\n\n全文以李鸿章为引，但对李鸿章一生的事迹仅仅摘捡了其作为国贼原因的几个大点论述，如果对李鸿章或那个时代感兴趣，着实推荐任公先生的传记《李鸿章》（即《同光以来大事记》），其文作于1901年李鸿章死后不久，集合了那个时代的视角与梁公极其客观的评价，我认为堪称是了解李鸿章的第一手资料，也是了解那个时代的一个不错的POV。\n\n再来谈谈文章的另一个引子孔融，也许以知人论世而言他该算是在文学上卓有成就（建安七子之首），气节上也不错（堪称魏晋风骨，虽然我以为孔融这种气节不要也罢）。我在文章中如此苛责他说实话与大众苛责李鸿章也许没有什么本质的区别吧，要说区别，其实也是因为孔融所代表的这种务虚做派着实让我disgusting吧（细细想来，古人会写字的不多，所以键盘侠才会如此弥足珍贵吧），之前读过一些孔融的史料，有机会会写写我为啥那么不喜欢孔融，在此不再说明了。\n\n最后，谈谈为何我写着写着就以务虚作为一个主线了吧，这个原因说来惭愧，实在是自己的务虚行为所致，如今三月，还有三个月本科就该画上句号，但纵观自己这四年，基本没干成什么实在的事情（书读的好当然是实在的，游戏打出了名堂也是实在的啊，唯独什么都没做的像样倒是值得思考的一个点），遂作此文以自勉。\n\n子夜，记于2020.3.4 九江。希望疫情退散武汉加油。","slug":"务虚时代下的国贼——李鸿章","published":1,"updated":"2020-03-12T18:41:04.872Z","_id":"ck7ouzrm80001lwetd03x3y6o","comments":1,"layout":"post","photos":[],"link":"","content":"<center>一</center>\n\n<p>近日看老剧《走向共和》，其前半段多以李鸿章之视角演绎，李鸿章何许人也，若非要集这百年悠悠之口套出几个词来，想必就是汉奸卖国贼之类的了，至少用于普及基本历史常识的历史课本中，作为百年国耻代表的《马关条约》与《辛丑条约》之上，就铸着该君的名字，所以这样说也没错。</p>\n<p>所谓汉奸，所谓卖国贼，这两个词至少在中华文化体系下是一种性质非常恶劣的词了吧，这与百年辛酸史，或者说在国家危亡之际国人对所谓“忠臣名将”的向往是分不开的，无论何人，无论何时，只要在身份认同上认为自己是中国人的，对待这些人都可以堂而皇之的啐一口唾沫，道一声“呸”。因为在我们中国人眼中，对历史的“通俗看法”（所谓通俗看法，是指不专门研究某一段历史的普通人，对身处该时段历史人物的主观看法，或说评价）是有底线和顶线的，底线想必就是卖国攘民等龌龊行径了，而顶线就是所谓为国请命的英雄们了，或者说以死明志的气节。当然除此之外，在看待历史人物时，顶线与底线往往还联络着主角道德的好与坏。</p>\n<center>二</center>\n\n<p>底线之下，无论之前干过什么，无论这个人作为一个人来讲怎么样，都不值得原谅，参考秦桧与汪精卫（前者还跪着呢）；而顶线之上，有所作为当然更好，但似乎事情做没做成也没有太大所谓，死谏，不趋附权贵，最好再带点文采写些个正气凛然的东西或者稀里糊涂的处在一段展现美好品行的故事中心，都值得树碑立传，万世景仰（至少在大部分国人心目中此类人物的形象是好的），参考孔融。</p>\n<p>底线之下，无甚好说，做了过分引人注目的坏事情，难道还会有很多人愿意去考虑你干这坏事之前的心路？大部分人会憎恶你，少部分脑袋勤快点的人会在憎恶中加上一些同情，还有极小部分人会把你当成一个工具，表达他们“看清事实”与“与众不同”的工具，这一类人不谈也罢，他们不懂得当瑕疵多到一种程度时，瑕不掩瑜这个词是不适用的。</p>\n<p>但顶线之上就会有一些问题了，在史书中活成这一类的人心念一动就能想出很多，他们大部分都可以作为鲁迅先生笔下我中华的脊梁，但我偏偏把孔融放在这里，为何呢？是因为我想说明这条适用于大众的对历史人物看法的惯性思维多半有些不客观。“孔四岁，能让梨”，这是大部分人都清楚的故事，别的不说，我在痴迷三国的那个年龄，总还是把孔融当成个人物的。但稍稍读点书，以今日之眼光，想瞧得上孔融这个人实在是难，可他却在未来的两千年里享尽英德之名，被无数父母当作启蒙孩子的一个典范，与古往今来无数仁人志士枭雄豪杰并排而立，我以为实在是忝列其中啊。</p>\n<center>三</center>\n\n<p>让一个梨便得以流芳千古，这个梨也实在是贵的很啊，让梨这个操作也算是东汉末年一个最成功的炒作了吧。但我实在是不明白大一点的梨子是孔融吃掉还是他哥哥吃掉到底对他们一家或者说对他们兄弟二人能有多大干系呢。非要说的话，难道梨子在东汉越大越香？而大到一定程度会产生口感上的质变？还是一个天生不太喜欢吃梨子的小孩在东汉不太常见？</p>\n<p>我以为是后者，毕竟在一个百姓连饭都吃不饱的时代，产生一个类似孔融这种不喜欢梨的小孩实在是困难，这也是保证这件事合理性的唯一解释了，不然孔融一家想必都有癔症。</p>\n<p>但遗憾的是，事实来看他们一家就是有癔症，也许是遗传的吧。毕竟硬要说的话，他们的老祖宗孔丘也有癔症，但孔夫子的癔症到底是在我这个两千多年后的后生眼里才能得见的，在孔夫子那个时代就算是癔症也多少有些可爱。但一种病毒也许两千年前无伤大雅甚至可以说是可爱，到一千年前病毒几经变异变成了值得称颂的一个身体特征，而到了一百多年前当一个群体把感染了这个病毒当成荣耀并认为人人便该如此的时候，来了另一群没得病且更强壮的人使得感染这个病毒变成了自然选择的一个逆选项时，有一些病人开始尝试治病但囿于同胞掣肘与病毒几经进化下的狡诈以及自身体内病毒的顽固，失败了，对于这种人，在考虑失败后果之前，我以为首先得感慨一下其知其不可而为之的勇气，至少这是我尊敬孔子的一个重要原因，也是我认为对卖国贼李鸿章，有必要进行另一番议论的原因。</p>\n<center>四</center>\n\n<p>以上所述的“癔症”，我想与今年的新冠肺炎多少有些类似，症状复杂容易变异，只是这癔症并不作用在生理上而是作用在精神上。其症状很多，五花八门，但我今天想谈谈的只有务虚。</p>\n<p>就像孔融让梨得到赞扬一样，赞扬的不是让梨这个动作而是其谦让的品德。我从不否认谦让是个美德，但让一个历史上实实在在活生生的人，因为这样一个简单的动作就成为了根植一个名族内心千年的道德符号，我认为实在是荒谬了些，哲学上喜欢将一件事情推到极端而后再观察其是否仍然符合某一标准，而长大后的孔融倒着实使这个荒谬的意味更深了些。</p>\n<p>几乎没有付出任何代价与个人的努力，一件名门世家随意记录的小小的事情，让一个人毫不费力收获了也许是古往今来来自孩子和家长们最多的赞誉，这不是偶然，而是自先秦到清末国人一直存在的务虚观念，几个小小的汉字，所谓仁义礼智信孝廉，都是好的优秀的修身品德，也从来都是封建时代的国人精英们竞相模仿参照的对象，可仔细想想，这几个字有所谓放之四海而皆准的具体的标准与定义吗？是所谓的标准管用还是历代大儒帝王的一声惊叹或者流传坊间的一段传奇更加管用呢？普通人是实实在在的做事更能得到赞扬还是卧冰求鲤式的“作秀”更能得到赞扬呢？</p>\n<p>这些品德确立之初的好坏我无从得知，但由于上述文字解释权等原因，这几个字或者说我中华中世纪所追求的那些抽象的概念，渐渐变为了权力与利益的代言人，成为了统治者所谓推行“王治”的工具（与其说是王治，不如说是愚民）。而随着皇权的愈加集中，传播这些务虚概念的工具，即我们引以为傲的科举，使得无数中世纪乃至近代的国人精英沦为了务虚的奴隶，深陷囹圄而自以为自由（李鸿章有改变很多事物的资本，但他囿于所谓忠君之类的概念敷衍其事含糊其词，想必也是务虚已入骨髓矣）。在没有西方文化冲击的情况下，整个民族和国家都浸沐在这务虚的汤药中，难以自拔。</p>\n<p>我本身是一个很懒惰的人，所谓磨洋工的一把好手，所以倘若我在百年千年前的话，肯定会变着花样以把自己弄死为标准去对应这些百姓追求统治者喜欢的概念，也许周围正好来了个大儒书圣，听说了我的故事的话还能把我的事迹记录一些，这样“流芳百世”的难度的确是大，但想必也比实干勤学的概率要大的多，还省去了不论是脑力还是体力带来的困难与麻烦，整不好运气更好点倒是能成为孔融一样的道德符号，实在是妙啊，妙不可言。</p>\n<p>既然务虚便能带来一切能够自我宽慰还得社会认可的东西，那作为贵族官员干嘛要务实呢？留着指甲，以商贾为耻，以农桑为耻，以一切实干为耻（当然社会是需要人做实事的，但做实事在我们的文化里受待见吗？所谓君子远庖厨，历朝历代各个英雄豪杰当然也有很多实干的，但实干的基础仍然是这个务虚的社会，这本身就给这个实干抹上了一层务虚的阴影），专注虚妄的经学便能高人一等，有文才胸富万经的为官一处自是高高在上，没有这个本事的寒窗苦读一番也能落个“读书人的偷能叫偷吗”的阿Q式精神胜利，在精神上又是高高在上，都是高高在上，在1793年英国使团来华时是高高在上，在19世纪被英国揍、被日本揍之后还是高高在上。永远都是高高在上，这一词也许便能概括李鸿章一生大部分清廷官员的心理了吧，即使对洋人卑躬屈膝，对着百姓照样还是高高在上，照样是所谓“牧民于野”的当代俊杰。</p>\n<p>欺民，罔民，愚民，却将这种行为解释为王化，“王化”过后便使牧民如放牧牛羊那般简单（如此看来儒家的王治倒是能够作为畜牧业一个很好的理论），古语中的这个“牧”字用的很是精髓啊。这也概括了务虚之道能够得以盛行，国人能够自欺欺人的原因，在这样一个务虚时代之末，则有国贼李鸿章。</p>\n<center>五</center>\n\n<p>梁任公先生在1901年为李鸿章做的传记里，有这样一段话：</p>\n<blockquote>\n<p><em>夫李鸿章果足称为中国第一人与否吾不敢知，而要之现今五十岁以上之人，三四品以上之官，无一可以望李之肩背者，则吾所能断言也。李之死，于中国全局有关系与否吾不敢知，而要之现在政府失一李鸿章，如虎之丧其伥，前途岌岌，愈益多事，此又吾所敢断言也</em></p>\n</blockquote>\n<p>加之记述一下李鸿章光绪元年所上之奏疏：</p>\n<blockquote>\n<p><em>近时拘谨之儒，多以交涉洋务为涴人之具；取巧之士，又以引避洋务为自便之图。若非朝廷力开风气，破拘挛之故习，求制胜之实际，天下危局，终不可支，日后乏才，且有甚于今日者。以中国之大，而无自立之时，非惟可忧，抑亦可耻</em></p>\n</blockquote>\n<p>摘录至此，不由扼腕感慨百多年前洋务之艰难，掣肘之猖獗。</p>\n<p>引避洋务以自便，多轻松的自便之法啊，从前务虚以留其名，尚且还得付出诸多代价，而洋人来了后为一个高风亮节之名，却只需对奇技淫巧表达不屑，对操办洋务以自强求富之人以鄙夷眼光视之。多轻便啊，居庙堂之高则上书参劾，处江湖之远则煽民怨怼，永远站在务虚下道德的制高点，倒颇像今天的键盘侠，下笔滔滔如有千言，若问韬略胸无一策。可惜的是今天的键盘侠倒是稍讲道理的人就会心生厌恶，而那个时代做一个真正杀人的键盘侠倒成了政治正确。</p>\n<p>而“求制胜之实际”这句话倒着实让我奇怪，我实在不知道制胜的实际为什么要求。在一个逝者如斯夫的三维世界，什么东西都是一锤子买卖，制胜难道还有实际与不实际的分别？一个管理着四亿五千万人口的朝廷，于国事竟要以“实际”与否为争论点，实在荒唐（也许以往务虚之实际对洋人不管用吧，毕竟洋人大部分人都不给你“牧”，明明这才是现在看来正常的表现到了晚清士大夫眼中成了蛮夷无廉耻的表现，估计他们也很苦恼吧），也难怪任公先生有以上断言了。</p>\n<p>这就是那个时代我国的头号国贼了，倒不知他卖的国是虚妄概念上的国还是实际意义上的国了，不知道满清朝廷在马关之后的朝堂上有没有这一议论。</p>\n<center>六</center>\n\n<p>说李是国贼的论据，我以为归纳起来大约有四个大点。其一为边防塞防之争；其二为甲午战争之败；其三为辛丑条约之耻；其四为死后余产之巨。针对这几点，我也想简单谈谈我的看法。</p>\n<p>关于边防塞防之争，以今日结果的眼光来看李鸿章所谓的“放弃新疆”自然是妥妥卖国行为，引述其作此决策的理由大致如下：</p>\n<blockquote>\n<p><em>历代备边，多在西北，其强弱之势，主客之形，皆适相埒，且犹有中外界限。今则东南海疆万余里，各国通商传教，往来自如，麇集京师，及各省腹地，阳托和好之名，阴怀吞噬之计，一国生事，诸国构煽，实为数千年来未有之变局。轮船、电报之速，瞬息千里，军器、机事之精，工力百倍，又为数千年来未有之强敌。外患之乘，变幻如此，而我犹以成法制之，譬如医者疗疾，不问何症，概投之以古方，诚未见其效也</em></p>\n</blockquote>\n<p>彼时背景正为日本寻衅侵略台湾，海防压力巨大，若忽略新疆一事，我以为兴建海防实在算是清末洋务少有的高瞻远瞩之举了，而对于新疆问题，李鸿章倒似乎想以外交途径解决（这也是他的惯用伎俩了，甲午之败这也是因素之一）。唉，彼时之人哪里懂得弱国无外交的道理呢，如此看来若无左宗棠收复新疆，也许新疆在那时候就成为了永远收不回的东三省了吧（九一八事变后民国政府也企图通过外交途径解决东北问题）。</p>\n<p>也正应如此，世人往往厚左而薄李，但以我之见，左宗棠与李鸿章并无大分别，李并非一意放弃塞防而是以为边防更为紧迫，而左亦非务虚守旧之人，只是认为新疆之失已迫在眉睫而海上之难尚可以时日斡旋。边防塞防之争，与其说是善恶之争，倒不如说是厉害得失之争。可叹啊，百年后的课本中，左宗棠成了英雄，而李鸿章却成了国贼，实在只是命长与命短的分别啊。</p>\n<p>而对甲午战争之败，我没有什么好说的，整个战争我仿佛看到的不是战争，而是一帮小孩在拿人命、鲜血与一个民族的尊严为筹码玩过家家，仿佛这个国，不是实际意义上的国。世人皆知甲午海战北洋水师全军覆没，是以为耻，却不知陆军在朝鲜更是一败涂地。对此战的总结梁任公先生在为李所作传记中已经分析的很透彻了，我不再赘言，遂摘录如下。</p>\n<blockquote>\n<p><em>当中日战事之际，李鸿章以一身为万矢之的，几于身无完肤，人皆欲杀。平心而论，李鸿章诚有不能辞其咎者，其始误劝朝鲜与外国立约，昧于公法，咎一；既许立约，默认其自主，而复以兵干涉其内乱，授人口实，咎二；日本既调兵，势固有进无退，而不察先机，辄欲倚赖他国调停，致误时日，咎三；聂士成请乘日军未集之时，以兵直捣韩城以制敌而不能用，咎四；高升事未起之前，丁汝昌请以北洋海军先鏖敌舰，而不能用，遂令反客为主，敌坐大而我愈危，综其原因，皆由不欲衅自我开，以为外交之道应尔，而不知当甲午五六月间，中日早成敌国，而非友邦矣，误以交邻之道施诸兵机，咎五；鸿章将自解曰：量我兵力不足以敌日本，故惮于发难也。虽然，身任北洋整军经武二十年，何以不能一战？咎六；彼又将自解曰：政府掣肘，经费不足也。虽然，此不过不能扩充已耳，何以其所现有者，如叶志超、卫汝贵诸军，素以久练著名，亦脆弱乃尔，且克减口粮盗掠民妇之事，时有所闻，乃并纪律而无之也，咎七；枪或苦窳，弹或赝物，弹不对枪，药不随械，谓从前管军械局之人皆廉明，谁能信之，咎八；平壤之役，军无统帅，此兵家所忌，李乃蹈之，咎九；始终坐待敌攻，致于人而不能致人，畏敌如虎，咎十；海军不知用快船快炮，咎十一；旅顺天险，西人谓以数百兵守之，粮食苟足，三年不能破，乃委之于所亲昵阘冗恇怯之人，闻风先遁，咎十二。此皆可以为李鸿章罪者。若夫甲午九十月以后，则群盲狂吠，筑室道谋，号令不出自一人，则责备自不得归于一点。若尽以为李鸿章咎，李固不任受也。又岂惟不任受而已，吾见彼责李罪李者，其可责可罪，更倍蓰于李而未有已也。是役将帅无一人不辱国，不待言矣。然比较于百步五十步之间，则海军优于陆军，李鸿章部下之陆军，又较优于他军也。</em></p>\n</blockquote>\n<p>战争之后，尚有广东水师向日本索要被俘舰只，理由竟是此次战役与广东无涉。荒唐至此，毫无国家民族观念，以五十步笑百步之典，李倒着实是那五十步之人，但一个国家只有五十步与百步的分别，岂不谬哉！</p>\n<p>至于辛丑条约，我以为无甚好说，前两者对李都有切实可责可恨之处，凡是认为李无一点错误责任，无一点卖国嫌疑者都是巧言令色之人。惟此辛丑条约，说李是代国背锅言辞尚可牵强而去。只是可惜可恨啊，面对务实之世界，务虚者仍活在往日虚幻的天朝大国的旧梦里，可惜是针对那时被虚妄的概念奴役却自以为自由的愚民，可恨是针对朝堂上自私自利毫无理性的那几家几姓。</p>\n<p>最后也就是死后遗产之巨了，关于这个我没有观点，也没做什么考证，四千万家产的言论没有什么根据，但清正廉洁的说法也就是自娱自乐了，而对于因为李鸿章财产甚多而输了甲午战争的言论，我也无话可说，见解如此，与键盘侠无异。以下摘录任公所作传记中的一段话，仁者见仁，智者见智吧。</p>\n<blockquote>\n<p><em>世人竞传李鸿章富甲天下，此其事殆不足信，大约数百万金之产业，意中事也。招商局、电报局、开平煤矿、中国通商银行，其股份皆不少，或言南京、上海各地之当铺银号，多属其管业云</em></p>\n</blockquote>\n<p>以上四点，第一、第三、第四点我认为以此为依据对李进行口诛笔伐只是视李为国贼带来的惯性思维所致，即在摆出论据之前心中已有答案，而后用这些论据中的点去套已有的结论。这样做虽然看起来不够客观，但我认为实在是人心所向。而第二点则是“国贼论”的核心，也是李鸿章以及所谓大清帝国的转折点吧，在这一点上李鸿章有直接责任。从前被英法等一流列强欺负，但装饰门面倒还对的起“帝国”这两个字的隐形含义，今而兴洋务练出的新军在日本人面前不堪一击，以使敌人在朝鲜都不相信战胜的就是所谓清廷按照西法练成的精锐部队。</p>\n<p>由此看来，这些活在近代的中古士大夫在务虚本领之上倒还是实在的啊，能够做到让外人不辨雌雄。</p>\n<center>七</center>\n\n<p>对李鸿章，梁任公先生总结其为“时势所造之英雄，非造时势之英雄”，又对其一生事迹评价为“不学无术，不敢破格，是其所短也；不避劳苦，不畏谤言，是其所长也”。</p>\n<p>是英雄造时势还是时势造英雄，这一直可以视为是一个悖论问题，这一问题有诸多解法的原因其实也只是因为对英雄与时势有诸多不同的定义与见解而已。</p>\n<p>英雄是什么，一怒之下伏尸百万流血千里的应该能算，这是就其权威而论的；率性任侠义气为先的想必也能算，这是就其个性担当而言的；富国强兵振兴朝政的一定能算，这是就其能力而论的；而为国请命鞠躬尽瘁死而后已的也一定能算，这是就其一片赤子之心而论的。这四点似乎都没错，但偏偏国贼李鸿章似乎与后三点都沾些边，对部下讲情义，为国事不避艰难，临死之前尚在为国事操心，按这个道理，他该是英雄啊，在通俗历史评价上他该是顶线以上的人啊，怎么会落得底线以下的看法与待遇呢？还是引用任公先生的话。</p>\n<blockquote>\n<p><em>十九世纪列国皆有英雄，而我国独无一英雄，则吾辈安得不指鹿为马，聊自解嘲，翘李鸿章以示于世界曰，此我国之英雄也。呜呼！亦适我国之英雄而已矣，亦适成为我国十九世纪以前之英雄而已矣</em></p>\n</blockquote>\n<p>是啊，自始皇帝嬴政开创中央集权政体之日起，五经四书浸染之下的千年务虚时代，又哪有什么英雄造时势的事情呢？始皇殁后有项羽，一个勇武过人的英雄在乎的是如何让锦衣不夜行，在意这种虚妄的概念使他重新推行分封。后有刘邦，有曹操，有李世民，有赵匡胤，有朱洪武，再有所谓康乾盛世，有所谓同治中兴，那么多个皇帝之下有那么多个能人猛士堪称英雄，可有谁真正造就过时势吗？似乎有，如周瑜赤壁的那一把火，似乎又没有，因为我只看到了一个个朝代的更替与牧民锁链的加重。也许以百年局部的眼光来看，总有公瑾一般的豪杰改造时势，但以千年民族国家的眼光来看，十九世纪前所谓的英雄，不过是在同一片天空之下翻手为云覆手为雨罢了，他们从没有改天换日的见识与气魄。</p>\n<p>话虽这样说，但英雄在他们的时代仍然是英雄，非要以今日之眼光视昨日之旧人未免落入历史虚无主义的窠臼。而对李鸿章以国贼的态度进行苛责，与此同理，无非是以今日之评价观点视旧时之英雄罢了。在对李一系列失误的讨论之外，我认为不应该让一个旧时代的先行者为他所处的整个时代背锅。</p>\n<p>但话又说回来，这样一个不避劳苦的旧时代先行者，究其一生却为何在历史上仍落个身败名裂的下场呢？</p>\n<p>千年务虚时代，治经论典自然是务虚，可人毕竟是活在现实世界的啊，“务实”必不可少，闻鸡起舞者有之，改政变法者有之，“格物致知”者亦有之，为何集数千年这亿万之人，却无一个堪当变务虚时势为务实的英雄呢？自是千年务虚痼疾已深，不彻底打碎更变实在是无从谈起啊。否定了这一点，就是对20世纪我们中国人长达一个世纪的更革奋斗视而不见。</p>\n<p>而以李鸿章为汉奸国贼者，必为甲午之败辛丑之耻痛惜扼腕，仿佛杀李则能改变战局避免国耻，而清廷则仍是堂堂正正的大清帝国，这实在是癔梦啊。想当造时势之英雄，则必须要能真正的打破务虚学而有术，这在当时几乎是与整个千年文化积习为敌，事实证明李鸿章这种务虚时代的实干家不行，翁同龢这种务虚时代的所谓君子、康有为这种务虚时代所谓的改革家都不行，那些务虚时代的小人就更不必说了。</p>\n<p>以李鸿章之务实敢干不辞辛劳生于务虚时代都难以学而有术，洋务半生尚“不识国民之原理，不通世界之大势，不知政治之本原”，一生兢兢业业如履薄冰都难以在后世摆脱一个“国贼”的骂名，可见务虚痼疾程度之深了。以务虚时代之英雄而成务实时代之国贼，英雄和国贼果然有所谓巨大的间隙吗？还是李鸿章生平前后的主流文化之间有这般巨大的间隙呢？这百年来，那么多只如鲁迅先生般的如椽巨笔，才堪堪扭转千年痼疾在人心中的荼毒之深，将这种荼毒所表现出的后果让李一人一力承担，我觉得实在是肤浅过分的言论。</p>\n<p>唉，以旧英雄之身份而成新时代之国贼，以今日之眼光，到底该视为李鸿章的过错还是千年务虚文化的过错呢？</p>\n<center>八</center>\n\n<p>作为一个中国人，对历史总会心存一些假如（毕竟有强汉盛唐，现在的口号也还是复兴）。总有人会说满清误国，认为遇上19世纪那千年未有之变局的假如不是满清朝廷而是汉人王朝情况会完全不同；也有人会想若遭遇此事的中国统治者不是咸丰，不是光绪，不是慈禧，而是秦皇汉武唐宗宋祖，结局也会不一样；还有人说明朝的资本主义萌芽是被满清给消灭的，否则中国也会自然而然的成为近代西方那样发达的资本主义国家。</p>\n<p>诸如此类的想法很多，但历史没有偶然，即使有偶然，在一个模拟器中能够重现历史，让那些明君圣君放弃一家一姓特权，让那些世家门阀放弃所有地方权益的概率能有多少呢？即使有人真的愿意，他能够扳的过整个旧文化的手腕吗？（过继当上皇帝的想尊自己的生父历朝历代士大夫都会罗里吧嗦的，没有点手腕的皇帝连这种事都搞不定，即使手腕通天难道能搞定整个文化变革的事情吗？因此在中国这种务虚文化的千年体系下，自上而下的改革是不可能行的通的，想变革只有改变一个民族的思想，这又哪里是一个人能够办得到的呢），孟子说过“人之所以异于禽兽者几希，庶民去之，君子存之”，孟子当然是惯于骂人禽兽，而放弃他这种庶民君子的成见，还智于百姓，让“君子”与“禽兽”平起平坐，历代有君王与权臣能够做到吗？（也许中国能够依赖如明治天皇那样的明君通过变革依靠广阔的土地在19世纪成为列强，但这种强国方式与英美等国还是有根本区别，日本明治维新后是变强了，但仍然有华族这种旧时代产物，我以为仍然带着野蛮不理性的气息，以中国之大，如此，更甚矣，仍然只会成为如沙皇俄国那样的纸老虎）王莽的改制引来了千古骂名只是因为其制过激而使掣肘过厉，而“科举”的产生也只是得益于旧门阀势力的削弱，而这种削弱，无不是血与铁的结果，而后再看19世纪末李鸿章所遭之非议，守旧势力在19世纪到20世纪的关口还指望着把洋人赶走继续上古时期的统治方法。这是他们幼稚吗？不是，实在是千年务虚积疾过深，使得四万万国人人人为鸵鸟而不自知，大才如严复尚且崇尚科举，务实如李鸿章尚且惋惜自己一生没做成军机大臣。</p>\n<p>在这种千年务虚观念深入骨髓的情况下，小修小补有用吗？剜肉补疮有用吗？我看把血全换了都未必有用。在这种情况下，将千年务虚积累下导致的癔病产生的痛苦全部归咎给李鸿章这种只会小医小补的郎中，合理吗？骂李是国贼，那必须带上当时满朝文武，带上当时被欺罔了数千年的四万万百姓，带上数千年政治文化风俗的方方面面。雪崩之时，没有一片雪花是无辜的，但作为压死骆驼的最后一根稻草，难道李鸿章留给历史的意义只是让后人怒斥痛骂吗？</p>\n<p>十九世纪以前的英雄，配上了务虚思想引导下的务实，却成了日后人们眼中的国贼，应该感到悲哀吗？不应该感到悲哀吗？对着那个由务虚向务实转化的时代，是继续痛斥那务虚时代下的国贼或者说英雄，还是应该对我们19世纪以前的文化多做一些反思呢？</p>\n<p>后者，我以为才是李鸿章这个历史车轮扭动间隙下产生的矛盾人物该给我们带来的意义。</p>\n<center>后记</center>\n\n<p>本文基本可以视为是《走向共和》电视剧前半段以及梁任公先生的传记《李鸿章》的观后感吧，写之前没想过要什么纲领也没有确定什么中心论点，写到现在洋洋洒洒有八千多字，也渐渐形成了一个很不清晰的脉络吧。</p>\n<p>全文的中心其实也就是以李鸿章个人在通俗历史评价上的矛盾为引，引出对19世纪前中华传统文化的反思吧。一个代表着那段历史的人物，以两种文化的眼光看待，会得出英雄和国贼两个迥异的看法，这种激烈的矛盾也着实可以说明旧文化的一些荒谬之处了。</p>\n<p>当然全文只是借用了务实与务虚这一对矛盾在19世纪末那个节点上所爆发出来的强弱态势，并没有对中西文化或者说中国传统文化与现代文化进行所谓优劣对比及形成原因说明。因为非要进行详细的对比说明的话，我认为恐怕得从先秦思想和古希腊哲学的迥异说起，那话题就大了，所以全文对这种矛盾在我国中世纪的表现仅仅以叙代议，所表达的仅仅只是矛盾本身而不是对矛盾产生原因的分析论证。</p>\n<p>全文以李鸿章为引，但对李鸿章一生的事迹仅仅摘捡了其作为国贼原因的几个大点论述，如果对李鸿章或那个时代感兴趣，着实推荐任公先生的传记《李鸿章》（即《同光以来大事记》），其文作于1901年李鸿章死后不久，集合了那个时代的视角与梁公极其客观的评价，我认为堪称是了解李鸿章的第一手资料，也是了解那个时代的一个不错的POV。</p>\n<p>再来谈谈文章的另一个引子孔融，也许以知人论世而言他该算是在文学上卓有成就（建安七子之首），气节上也不错（堪称魏晋风骨，虽然我以为孔融这种气节不要也罢）。我在文章中如此苛责他说实话与大众苛责李鸿章也许没有什么本质的区别吧，要说区别，其实也是因为孔融所代表的这种务虚做派着实让我disgusting吧（细细想来，古人会写字的不多，所以键盘侠才会如此弥足珍贵吧），之前读过一些孔融的史料，有机会会写写我为啥那么不喜欢孔融，在此不再说明了。</p>\n<p>最后，谈谈为何我写着写着就以务虚作为一个主线了吧，这个原因说来惭愧，实在是自己的务虚行为所致，如今三月，还有三个月本科就该画上句号，但纵观自己这四年，基本没干成什么实在的事情（书读的好当然是实在的，游戏打出了名堂也是实在的啊，唯独什么都没做的像样倒是值得思考的一个点），遂作此文以自勉。</p>\n<p>子夜，记于2020.3.4 九江。希望疫情退散武汉加油。</p>\n","site":{"data":{}},"excerpt":"","more":"<center>一</center>\n\n<p>近日看老剧《走向共和》，其前半段多以李鸿章之视角演绎，李鸿章何许人也，若非要集这百年悠悠之口套出几个词来，想必就是汉奸卖国贼之类的了，至少用于普及基本历史常识的历史课本中，作为百年国耻代表的《马关条约》与《辛丑条约》之上，就铸着该君的名字，所以这样说也没错。</p>\n<p>所谓汉奸，所谓卖国贼，这两个词至少在中华文化体系下是一种性质非常恶劣的词了吧，这与百年辛酸史，或者说在国家危亡之际国人对所谓“忠臣名将”的向往是分不开的，无论何人，无论何时，只要在身份认同上认为自己是中国人的，对待这些人都可以堂而皇之的啐一口唾沫，道一声“呸”。因为在我们中国人眼中，对历史的“通俗看法”（所谓通俗看法，是指不专门研究某一段历史的普通人，对身处该时段历史人物的主观看法，或说评价）是有底线和顶线的，底线想必就是卖国攘民等龌龊行径了，而顶线就是所谓为国请命的英雄们了，或者说以死明志的气节。当然除此之外，在看待历史人物时，顶线与底线往往还联络着主角道德的好与坏。</p>\n<center>二</center>\n\n<p>底线之下，无论之前干过什么，无论这个人作为一个人来讲怎么样，都不值得原谅，参考秦桧与汪精卫（前者还跪着呢）；而顶线之上，有所作为当然更好，但似乎事情做没做成也没有太大所谓，死谏，不趋附权贵，最好再带点文采写些个正气凛然的东西或者稀里糊涂的处在一段展现美好品行的故事中心，都值得树碑立传，万世景仰（至少在大部分国人心目中此类人物的形象是好的），参考孔融。</p>\n<p>底线之下，无甚好说，做了过分引人注目的坏事情，难道还会有很多人愿意去考虑你干这坏事之前的心路？大部分人会憎恶你，少部分脑袋勤快点的人会在憎恶中加上一些同情，还有极小部分人会把你当成一个工具，表达他们“看清事实”与“与众不同”的工具，这一类人不谈也罢，他们不懂得当瑕疵多到一种程度时，瑕不掩瑜这个词是不适用的。</p>\n<p>但顶线之上就会有一些问题了，在史书中活成这一类的人心念一动就能想出很多，他们大部分都可以作为鲁迅先生笔下我中华的脊梁，但我偏偏把孔融放在这里，为何呢？是因为我想说明这条适用于大众的对历史人物看法的惯性思维多半有些不客观。“孔四岁，能让梨”，这是大部分人都清楚的故事，别的不说，我在痴迷三国的那个年龄，总还是把孔融当成个人物的。但稍稍读点书，以今日之眼光，想瞧得上孔融这个人实在是难，可他却在未来的两千年里享尽英德之名，被无数父母当作启蒙孩子的一个典范，与古往今来无数仁人志士枭雄豪杰并排而立，我以为实在是忝列其中啊。</p>\n<center>三</center>\n\n<p>让一个梨便得以流芳千古，这个梨也实在是贵的很啊，让梨这个操作也算是东汉末年一个最成功的炒作了吧。但我实在是不明白大一点的梨子是孔融吃掉还是他哥哥吃掉到底对他们一家或者说对他们兄弟二人能有多大干系呢。非要说的话，难道梨子在东汉越大越香？而大到一定程度会产生口感上的质变？还是一个天生不太喜欢吃梨子的小孩在东汉不太常见？</p>\n<p>我以为是后者，毕竟在一个百姓连饭都吃不饱的时代，产生一个类似孔融这种不喜欢梨的小孩实在是困难，这也是保证这件事合理性的唯一解释了，不然孔融一家想必都有癔症。</p>\n<p>但遗憾的是，事实来看他们一家就是有癔症，也许是遗传的吧。毕竟硬要说的话，他们的老祖宗孔丘也有癔症，但孔夫子的癔症到底是在我这个两千多年后的后生眼里才能得见的，在孔夫子那个时代就算是癔症也多少有些可爱。但一种病毒也许两千年前无伤大雅甚至可以说是可爱，到一千年前病毒几经变异变成了值得称颂的一个身体特征，而到了一百多年前当一个群体把感染了这个病毒当成荣耀并认为人人便该如此的时候，来了另一群没得病且更强壮的人使得感染这个病毒变成了自然选择的一个逆选项时，有一些病人开始尝试治病但囿于同胞掣肘与病毒几经进化下的狡诈以及自身体内病毒的顽固，失败了，对于这种人，在考虑失败后果之前，我以为首先得感慨一下其知其不可而为之的勇气，至少这是我尊敬孔子的一个重要原因，也是我认为对卖国贼李鸿章，有必要进行另一番议论的原因。</p>\n<center>四</center>\n\n<p>以上所述的“癔症”，我想与今年的新冠肺炎多少有些类似，症状复杂容易变异，只是这癔症并不作用在生理上而是作用在精神上。其症状很多，五花八门，但我今天想谈谈的只有务虚。</p>\n<p>就像孔融让梨得到赞扬一样，赞扬的不是让梨这个动作而是其谦让的品德。我从不否认谦让是个美德，但让一个历史上实实在在活生生的人，因为这样一个简单的动作就成为了根植一个名族内心千年的道德符号，我认为实在是荒谬了些，哲学上喜欢将一件事情推到极端而后再观察其是否仍然符合某一标准，而长大后的孔融倒着实使这个荒谬的意味更深了些。</p>\n<p>几乎没有付出任何代价与个人的努力，一件名门世家随意记录的小小的事情，让一个人毫不费力收获了也许是古往今来来自孩子和家长们最多的赞誉，这不是偶然，而是自先秦到清末国人一直存在的务虚观念，几个小小的汉字，所谓仁义礼智信孝廉，都是好的优秀的修身品德，也从来都是封建时代的国人精英们竞相模仿参照的对象，可仔细想想，这几个字有所谓放之四海而皆准的具体的标准与定义吗？是所谓的标准管用还是历代大儒帝王的一声惊叹或者流传坊间的一段传奇更加管用呢？普通人是实实在在的做事更能得到赞扬还是卧冰求鲤式的“作秀”更能得到赞扬呢？</p>\n<p>这些品德确立之初的好坏我无从得知，但由于上述文字解释权等原因，这几个字或者说我中华中世纪所追求的那些抽象的概念，渐渐变为了权力与利益的代言人，成为了统治者所谓推行“王治”的工具（与其说是王治，不如说是愚民）。而随着皇权的愈加集中，传播这些务虚概念的工具，即我们引以为傲的科举，使得无数中世纪乃至近代的国人精英沦为了务虚的奴隶，深陷囹圄而自以为自由（李鸿章有改变很多事物的资本，但他囿于所谓忠君之类的概念敷衍其事含糊其词，想必也是务虚已入骨髓矣）。在没有西方文化冲击的情况下，整个民族和国家都浸沐在这务虚的汤药中，难以自拔。</p>\n<p>我本身是一个很懒惰的人，所谓磨洋工的一把好手，所以倘若我在百年千年前的话，肯定会变着花样以把自己弄死为标准去对应这些百姓追求统治者喜欢的概念，也许周围正好来了个大儒书圣，听说了我的故事的话还能把我的事迹记录一些，这样“流芳百世”的难度的确是大，但想必也比实干勤学的概率要大的多，还省去了不论是脑力还是体力带来的困难与麻烦，整不好运气更好点倒是能成为孔融一样的道德符号，实在是妙啊，妙不可言。</p>\n<p>既然务虚便能带来一切能够自我宽慰还得社会认可的东西，那作为贵族官员干嘛要务实呢？留着指甲，以商贾为耻，以农桑为耻，以一切实干为耻（当然社会是需要人做实事的，但做实事在我们的文化里受待见吗？所谓君子远庖厨，历朝历代各个英雄豪杰当然也有很多实干的，但实干的基础仍然是这个务虚的社会，这本身就给这个实干抹上了一层务虚的阴影），专注虚妄的经学便能高人一等，有文才胸富万经的为官一处自是高高在上，没有这个本事的寒窗苦读一番也能落个“读书人的偷能叫偷吗”的阿Q式精神胜利，在精神上又是高高在上，都是高高在上，在1793年英国使团来华时是高高在上，在19世纪被英国揍、被日本揍之后还是高高在上。永远都是高高在上，这一词也许便能概括李鸿章一生大部分清廷官员的心理了吧，即使对洋人卑躬屈膝，对着百姓照样还是高高在上，照样是所谓“牧民于野”的当代俊杰。</p>\n<p>欺民，罔民，愚民，却将这种行为解释为王化，“王化”过后便使牧民如放牧牛羊那般简单（如此看来儒家的王治倒是能够作为畜牧业一个很好的理论），古语中的这个“牧”字用的很是精髓啊。这也概括了务虚之道能够得以盛行，国人能够自欺欺人的原因，在这样一个务虚时代之末，则有国贼李鸿章。</p>\n<center>五</center>\n\n<p>梁任公先生在1901年为李鸿章做的传记里，有这样一段话：</p>\n<blockquote>\n<p><em>夫李鸿章果足称为中国第一人与否吾不敢知，而要之现今五十岁以上之人，三四品以上之官，无一可以望李之肩背者，则吾所能断言也。李之死，于中国全局有关系与否吾不敢知，而要之现在政府失一李鸿章，如虎之丧其伥，前途岌岌，愈益多事，此又吾所敢断言也</em></p>\n</blockquote>\n<p>加之记述一下李鸿章光绪元年所上之奏疏：</p>\n<blockquote>\n<p><em>近时拘谨之儒，多以交涉洋务为涴人之具；取巧之士，又以引避洋务为自便之图。若非朝廷力开风气，破拘挛之故习，求制胜之实际，天下危局，终不可支，日后乏才，且有甚于今日者。以中国之大，而无自立之时，非惟可忧，抑亦可耻</em></p>\n</blockquote>\n<p>摘录至此，不由扼腕感慨百多年前洋务之艰难，掣肘之猖獗。</p>\n<p>引避洋务以自便，多轻松的自便之法啊，从前务虚以留其名，尚且还得付出诸多代价，而洋人来了后为一个高风亮节之名，却只需对奇技淫巧表达不屑，对操办洋务以自强求富之人以鄙夷眼光视之。多轻便啊，居庙堂之高则上书参劾，处江湖之远则煽民怨怼，永远站在务虚下道德的制高点，倒颇像今天的键盘侠，下笔滔滔如有千言，若问韬略胸无一策。可惜的是今天的键盘侠倒是稍讲道理的人就会心生厌恶，而那个时代做一个真正杀人的键盘侠倒成了政治正确。</p>\n<p>而“求制胜之实际”这句话倒着实让我奇怪，我实在不知道制胜的实际为什么要求。在一个逝者如斯夫的三维世界，什么东西都是一锤子买卖，制胜难道还有实际与不实际的分别？一个管理着四亿五千万人口的朝廷，于国事竟要以“实际”与否为争论点，实在荒唐（也许以往务虚之实际对洋人不管用吧，毕竟洋人大部分人都不给你“牧”，明明这才是现在看来正常的表现到了晚清士大夫眼中成了蛮夷无廉耻的表现，估计他们也很苦恼吧），也难怪任公先生有以上断言了。</p>\n<p>这就是那个时代我国的头号国贼了，倒不知他卖的国是虚妄概念上的国还是实际意义上的国了，不知道满清朝廷在马关之后的朝堂上有没有这一议论。</p>\n<center>六</center>\n\n<p>说李是国贼的论据，我以为归纳起来大约有四个大点。其一为边防塞防之争；其二为甲午战争之败；其三为辛丑条约之耻；其四为死后余产之巨。针对这几点，我也想简单谈谈我的看法。</p>\n<p>关于边防塞防之争，以今日结果的眼光来看李鸿章所谓的“放弃新疆”自然是妥妥卖国行为，引述其作此决策的理由大致如下：</p>\n<blockquote>\n<p><em>历代备边，多在西北，其强弱之势，主客之形，皆适相埒，且犹有中外界限。今则东南海疆万余里，各国通商传教，往来自如，麇集京师，及各省腹地，阳托和好之名，阴怀吞噬之计，一国生事，诸国构煽，实为数千年来未有之变局。轮船、电报之速，瞬息千里，军器、机事之精，工力百倍，又为数千年来未有之强敌。外患之乘，变幻如此，而我犹以成法制之，譬如医者疗疾，不问何症，概投之以古方，诚未见其效也</em></p>\n</blockquote>\n<p>彼时背景正为日本寻衅侵略台湾，海防压力巨大，若忽略新疆一事，我以为兴建海防实在算是清末洋务少有的高瞻远瞩之举了，而对于新疆问题，李鸿章倒似乎想以外交途径解决（这也是他的惯用伎俩了，甲午之败这也是因素之一）。唉，彼时之人哪里懂得弱国无外交的道理呢，如此看来若无左宗棠收复新疆，也许新疆在那时候就成为了永远收不回的东三省了吧（九一八事变后民国政府也企图通过外交途径解决东北问题）。</p>\n<p>也正应如此，世人往往厚左而薄李，但以我之见，左宗棠与李鸿章并无大分别，李并非一意放弃塞防而是以为边防更为紧迫，而左亦非务虚守旧之人，只是认为新疆之失已迫在眉睫而海上之难尚可以时日斡旋。边防塞防之争，与其说是善恶之争，倒不如说是厉害得失之争。可叹啊，百年后的课本中，左宗棠成了英雄，而李鸿章却成了国贼，实在只是命长与命短的分别啊。</p>\n<p>而对甲午战争之败，我没有什么好说的，整个战争我仿佛看到的不是战争，而是一帮小孩在拿人命、鲜血与一个民族的尊严为筹码玩过家家，仿佛这个国，不是实际意义上的国。世人皆知甲午海战北洋水师全军覆没，是以为耻，却不知陆军在朝鲜更是一败涂地。对此战的总结梁任公先生在为李所作传记中已经分析的很透彻了，我不再赘言，遂摘录如下。</p>\n<blockquote>\n<p><em>当中日战事之际，李鸿章以一身为万矢之的，几于身无完肤，人皆欲杀。平心而论，李鸿章诚有不能辞其咎者，其始误劝朝鲜与外国立约，昧于公法，咎一；既许立约，默认其自主，而复以兵干涉其内乱，授人口实，咎二；日本既调兵，势固有进无退，而不察先机，辄欲倚赖他国调停，致误时日，咎三；聂士成请乘日军未集之时，以兵直捣韩城以制敌而不能用，咎四；高升事未起之前，丁汝昌请以北洋海军先鏖敌舰，而不能用，遂令反客为主，敌坐大而我愈危，综其原因，皆由不欲衅自我开，以为外交之道应尔，而不知当甲午五六月间，中日早成敌国，而非友邦矣，误以交邻之道施诸兵机，咎五；鸿章将自解曰：量我兵力不足以敌日本，故惮于发难也。虽然，身任北洋整军经武二十年，何以不能一战？咎六；彼又将自解曰：政府掣肘，经费不足也。虽然，此不过不能扩充已耳，何以其所现有者，如叶志超、卫汝贵诸军，素以久练著名，亦脆弱乃尔，且克减口粮盗掠民妇之事，时有所闻，乃并纪律而无之也，咎七；枪或苦窳，弹或赝物，弹不对枪，药不随械，谓从前管军械局之人皆廉明，谁能信之，咎八；平壤之役，军无统帅，此兵家所忌，李乃蹈之，咎九；始终坐待敌攻，致于人而不能致人，畏敌如虎，咎十；海军不知用快船快炮，咎十一；旅顺天险，西人谓以数百兵守之，粮食苟足，三年不能破，乃委之于所亲昵阘冗恇怯之人，闻风先遁，咎十二。此皆可以为李鸿章罪者。若夫甲午九十月以后，则群盲狂吠，筑室道谋，号令不出自一人，则责备自不得归于一点。若尽以为李鸿章咎，李固不任受也。又岂惟不任受而已，吾见彼责李罪李者，其可责可罪，更倍蓰于李而未有已也。是役将帅无一人不辱国，不待言矣。然比较于百步五十步之间，则海军优于陆军，李鸿章部下之陆军，又较优于他军也。</em></p>\n</blockquote>\n<p>战争之后，尚有广东水师向日本索要被俘舰只，理由竟是此次战役与广东无涉。荒唐至此，毫无国家民族观念，以五十步笑百步之典，李倒着实是那五十步之人，但一个国家只有五十步与百步的分别，岂不谬哉！</p>\n<p>至于辛丑条约，我以为无甚好说，前两者对李都有切实可责可恨之处，凡是认为李无一点错误责任，无一点卖国嫌疑者都是巧言令色之人。惟此辛丑条约，说李是代国背锅言辞尚可牵强而去。只是可惜可恨啊，面对务实之世界，务虚者仍活在往日虚幻的天朝大国的旧梦里，可惜是针对那时被虚妄的概念奴役却自以为自由的愚民，可恨是针对朝堂上自私自利毫无理性的那几家几姓。</p>\n<p>最后也就是死后遗产之巨了，关于这个我没有观点，也没做什么考证，四千万家产的言论没有什么根据，但清正廉洁的说法也就是自娱自乐了，而对于因为李鸿章财产甚多而输了甲午战争的言论，我也无话可说，见解如此，与键盘侠无异。以下摘录任公所作传记中的一段话，仁者见仁，智者见智吧。</p>\n<blockquote>\n<p><em>世人竞传李鸿章富甲天下，此其事殆不足信，大约数百万金之产业，意中事也。招商局、电报局、开平煤矿、中国通商银行，其股份皆不少，或言南京、上海各地之当铺银号，多属其管业云</em></p>\n</blockquote>\n<p>以上四点，第一、第三、第四点我认为以此为依据对李进行口诛笔伐只是视李为国贼带来的惯性思维所致，即在摆出论据之前心中已有答案，而后用这些论据中的点去套已有的结论。这样做虽然看起来不够客观，但我认为实在是人心所向。而第二点则是“国贼论”的核心，也是李鸿章以及所谓大清帝国的转折点吧，在这一点上李鸿章有直接责任。从前被英法等一流列强欺负，但装饰门面倒还对的起“帝国”这两个字的隐形含义，今而兴洋务练出的新军在日本人面前不堪一击，以使敌人在朝鲜都不相信战胜的就是所谓清廷按照西法练成的精锐部队。</p>\n<p>由此看来，这些活在近代的中古士大夫在务虚本领之上倒还是实在的啊，能够做到让外人不辨雌雄。</p>\n<center>七</center>\n\n<p>对李鸿章，梁任公先生总结其为“时势所造之英雄，非造时势之英雄”，又对其一生事迹评价为“不学无术，不敢破格，是其所短也；不避劳苦，不畏谤言，是其所长也”。</p>\n<p>是英雄造时势还是时势造英雄，这一直可以视为是一个悖论问题，这一问题有诸多解法的原因其实也只是因为对英雄与时势有诸多不同的定义与见解而已。</p>\n<p>英雄是什么，一怒之下伏尸百万流血千里的应该能算，这是就其权威而论的；率性任侠义气为先的想必也能算，这是就其个性担当而言的；富国强兵振兴朝政的一定能算，这是就其能力而论的；而为国请命鞠躬尽瘁死而后已的也一定能算，这是就其一片赤子之心而论的。这四点似乎都没错，但偏偏国贼李鸿章似乎与后三点都沾些边，对部下讲情义，为国事不避艰难，临死之前尚在为国事操心，按这个道理，他该是英雄啊，在通俗历史评价上他该是顶线以上的人啊，怎么会落得底线以下的看法与待遇呢？还是引用任公先生的话。</p>\n<blockquote>\n<p><em>十九世纪列国皆有英雄，而我国独无一英雄，则吾辈安得不指鹿为马，聊自解嘲，翘李鸿章以示于世界曰，此我国之英雄也。呜呼！亦适我国之英雄而已矣，亦适成为我国十九世纪以前之英雄而已矣</em></p>\n</blockquote>\n<p>是啊，自始皇帝嬴政开创中央集权政体之日起，五经四书浸染之下的千年务虚时代，又哪有什么英雄造时势的事情呢？始皇殁后有项羽，一个勇武过人的英雄在乎的是如何让锦衣不夜行，在意这种虚妄的概念使他重新推行分封。后有刘邦，有曹操，有李世民，有赵匡胤，有朱洪武，再有所谓康乾盛世，有所谓同治中兴，那么多个皇帝之下有那么多个能人猛士堪称英雄，可有谁真正造就过时势吗？似乎有，如周瑜赤壁的那一把火，似乎又没有，因为我只看到了一个个朝代的更替与牧民锁链的加重。也许以百年局部的眼光来看，总有公瑾一般的豪杰改造时势，但以千年民族国家的眼光来看，十九世纪前所谓的英雄，不过是在同一片天空之下翻手为云覆手为雨罢了，他们从没有改天换日的见识与气魄。</p>\n<p>话虽这样说，但英雄在他们的时代仍然是英雄，非要以今日之眼光视昨日之旧人未免落入历史虚无主义的窠臼。而对李鸿章以国贼的态度进行苛责，与此同理，无非是以今日之评价观点视旧时之英雄罢了。在对李一系列失误的讨论之外，我认为不应该让一个旧时代的先行者为他所处的整个时代背锅。</p>\n<p>但话又说回来，这样一个不避劳苦的旧时代先行者，究其一生却为何在历史上仍落个身败名裂的下场呢？</p>\n<p>千年务虚时代，治经论典自然是务虚，可人毕竟是活在现实世界的啊，“务实”必不可少，闻鸡起舞者有之，改政变法者有之，“格物致知”者亦有之，为何集数千年这亿万之人，却无一个堪当变务虚时势为务实的英雄呢？自是千年务虚痼疾已深，不彻底打碎更变实在是无从谈起啊。否定了这一点，就是对20世纪我们中国人长达一个世纪的更革奋斗视而不见。</p>\n<p>而以李鸿章为汉奸国贼者，必为甲午之败辛丑之耻痛惜扼腕，仿佛杀李则能改变战局避免国耻，而清廷则仍是堂堂正正的大清帝国，这实在是癔梦啊。想当造时势之英雄，则必须要能真正的打破务虚学而有术，这在当时几乎是与整个千年文化积习为敌，事实证明李鸿章这种务虚时代的实干家不行，翁同龢这种务虚时代的所谓君子、康有为这种务虚时代所谓的改革家都不行，那些务虚时代的小人就更不必说了。</p>\n<p>以李鸿章之务实敢干不辞辛劳生于务虚时代都难以学而有术，洋务半生尚“不识国民之原理，不通世界之大势，不知政治之本原”，一生兢兢业业如履薄冰都难以在后世摆脱一个“国贼”的骂名，可见务虚痼疾程度之深了。以务虚时代之英雄而成务实时代之国贼，英雄和国贼果然有所谓巨大的间隙吗？还是李鸿章生平前后的主流文化之间有这般巨大的间隙呢？这百年来，那么多只如鲁迅先生般的如椽巨笔，才堪堪扭转千年痼疾在人心中的荼毒之深，将这种荼毒所表现出的后果让李一人一力承担，我觉得实在是肤浅过分的言论。</p>\n<p>唉，以旧英雄之身份而成新时代之国贼，以今日之眼光，到底该视为李鸿章的过错还是千年务虚文化的过错呢？</p>\n<center>八</center>\n\n<p>作为一个中国人，对历史总会心存一些假如（毕竟有强汉盛唐，现在的口号也还是复兴）。总有人会说满清误国，认为遇上19世纪那千年未有之变局的假如不是满清朝廷而是汉人王朝情况会完全不同；也有人会想若遭遇此事的中国统治者不是咸丰，不是光绪，不是慈禧，而是秦皇汉武唐宗宋祖，结局也会不一样；还有人说明朝的资本主义萌芽是被满清给消灭的，否则中国也会自然而然的成为近代西方那样发达的资本主义国家。</p>\n<p>诸如此类的想法很多，但历史没有偶然，即使有偶然，在一个模拟器中能够重现历史，让那些明君圣君放弃一家一姓特权，让那些世家门阀放弃所有地方权益的概率能有多少呢？即使有人真的愿意，他能够扳的过整个旧文化的手腕吗？（过继当上皇帝的想尊自己的生父历朝历代士大夫都会罗里吧嗦的，没有点手腕的皇帝连这种事都搞不定，即使手腕通天难道能搞定整个文化变革的事情吗？因此在中国这种务虚文化的千年体系下，自上而下的改革是不可能行的通的，想变革只有改变一个民族的思想，这又哪里是一个人能够办得到的呢），孟子说过“人之所以异于禽兽者几希，庶民去之，君子存之”，孟子当然是惯于骂人禽兽，而放弃他这种庶民君子的成见，还智于百姓，让“君子”与“禽兽”平起平坐，历代有君王与权臣能够做到吗？（也许中国能够依赖如明治天皇那样的明君通过变革依靠广阔的土地在19世纪成为列强，但这种强国方式与英美等国还是有根本区别，日本明治维新后是变强了，但仍然有华族这种旧时代产物，我以为仍然带着野蛮不理性的气息，以中国之大，如此，更甚矣，仍然只会成为如沙皇俄国那样的纸老虎）王莽的改制引来了千古骂名只是因为其制过激而使掣肘过厉，而“科举”的产生也只是得益于旧门阀势力的削弱，而这种削弱，无不是血与铁的结果，而后再看19世纪末李鸿章所遭之非议，守旧势力在19世纪到20世纪的关口还指望着把洋人赶走继续上古时期的统治方法。这是他们幼稚吗？不是，实在是千年务虚积疾过深，使得四万万国人人人为鸵鸟而不自知，大才如严复尚且崇尚科举，务实如李鸿章尚且惋惜自己一生没做成军机大臣。</p>\n<p>在这种千年务虚观念深入骨髓的情况下，小修小补有用吗？剜肉补疮有用吗？我看把血全换了都未必有用。在这种情况下，将千年务虚积累下导致的癔病产生的痛苦全部归咎给李鸿章这种只会小医小补的郎中，合理吗？骂李是国贼，那必须带上当时满朝文武，带上当时被欺罔了数千年的四万万百姓，带上数千年政治文化风俗的方方面面。雪崩之时，没有一片雪花是无辜的，但作为压死骆驼的最后一根稻草，难道李鸿章留给历史的意义只是让后人怒斥痛骂吗？</p>\n<p>十九世纪以前的英雄，配上了务虚思想引导下的务实，却成了日后人们眼中的国贼，应该感到悲哀吗？不应该感到悲哀吗？对着那个由务虚向务实转化的时代，是继续痛斥那务虚时代下的国贼或者说英雄，还是应该对我们19世纪以前的文化多做一些反思呢？</p>\n<p>后者，我以为才是李鸿章这个历史车轮扭动间隙下产生的矛盾人物该给我们带来的意义。</p>\n<center>后记</center>\n\n<p>本文基本可以视为是《走向共和》电视剧前半段以及梁任公先生的传记《李鸿章》的观后感吧，写之前没想过要什么纲领也没有确定什么中心论点，写到现在洋洋洒洒有八千多字，也渐渐形成了一个很不清晰的脉络吧。</p>\n<p>全文的中心其实也就是以李鸿章个人在通俗历史评价上的矛盾为引，引出对19世纪前中华传统文化的反思吧。一个代表着那段历史的人物，以两种文化的眼光看待，会得出英雄和国贼两个迥异的看法，这种激烈的矛盾也着实可以说明旧文化的一些荒谬之处了。</p>\n<p>当然全文只是借用了务实与务虚这一对矛盾在19世纪末那个节点上所爆发出来的强弱态势，并没有对中西文化或者说中国传统文化与现代文化进行所谓优劣对比及形成原因说明。因为非要进行详细的对比说明的话，我认为恐怕得从先秦思想和古希腊哲学的迥异说起，那话题就大了，所以全文对这种矛盾在我国中世纪的表现仅仅以叙代议，所表达的仅仅只是矛盾本身而不是对矛盾产生原因的分析论证。</p>\n<p>全文以李鸿章为引，但对李鸿章一生的事迹仅仅摘捡了其作为国贼原因的几个大点论述，如果对李鸿章或那个时代感兴趣，着实推荐任公先生的传记《李鸿章》（即《同光以来大事记》），其文作于1901年李鸿章死后不久，集合了那个时代的视角与梁公极其客观的评价，我认为堪称是了解李鸿章的第一手资料，也是了解那个时代的一个不错的POV。</p>\n<p>再来谈谈文章的另一个引子孔融，也许以知人论世而言他该算是在文学上卓有成就（建安七子之首），气节上也不错（堪称魏晋风骨，虽然我以为孔融这种气节不要也罢）。我在文章中如此苛责他说实话与大众苛责李鸿章也许没有什么本质的区别吧，要说区别，其实也是因为孔融所代表的这种务虚做派着实让我disgusting吧（细细想来，古人会写字的不多，所以键盘侠才会如此弥足珍贵吧），之前读过一些孔融的史料，有机会会写写我为啥那么不喜欢孔融，在此不再说明了。</p>\n<p>最后，谈谈为何我写着写着就以务虚作为一个主线了吧，这个原因说来惭愧，实在是自己的务虚行为所致，如今三月，还有三个月本科就该画上句号，但纵观自己这四年，基本没干成什么实在的事情（书读的好当然是实在的，游戏打出了名堂也是实在的啊，唯独什么都没做的像样倒是值得思考的一个点），遂作此文以自勉。</p>\n<p>子夜，记于2020.3.4 九江。希望疫情退散武汉加油。</p>\n"},{"title":"改变","date":"2019-05-04T11:46:58.000Z","fileName":"the_change","_content":"时光本身没有魔力，它的奇妙来自于人们很容易愣神。\n\n当你发呆的时候，当你全身心地在做一件事的时候，当你摊在沙发上消磨时光的时候，它总会轻而易举地从你的指尖溜走。“溜”，这是个形容时光已经用烂了的动词，但大可不必对这种形容做一些所谓老生常谈的说教，因为这在汉语中确实用的很妙。\n\n小学生用文字形容时光是一把好手，因为似乎我们的教育自小到大一个很大的主题就是劝人切莫虚度时光。所谓“少壮不努力，老大徒伤悲”也可以视为是对时光的隐喻，这种隐喻隐藏在许许多多与时光本身看似并不相关的事物上，但作为两种状态之间的对比却往往体现出时光的作用来。从这个角度来看，也许本身就没有什么隐喻不隐喻的吧，毕竟活在时光长河里的生物，怎么可能规避的了时光二字呢。如此看来“时光”这两个汉字也着实幸运，明明是人造出的东西，表达的却是一种任何人也捉摸不透却又身在其中的感觉。\n\n现在已经五月份了，其实我也很纳闷怎么就五月份了。我不记得上一次愣神是在什么时候，大概是今年二月？或者是去年的什么时间，或许是十年前？总之现在已经快要接近我生命中的第21个年头了。我在愣神当中曾经说过我才18，也曾经说过我才20，但我现在快满21了。这是一种相当奇妙的感觉，你不知道起点在哪，也无法推算终点何在，你一次又一次的愣神，又一次又一次地回过神来开始思考，可每次回忆起自己上一次的思考，又会发现那不过是无数次愣神递归过程之中的某个终止条件。人的一生永远是在愣神中度过，而时光却又如此狡猾，永远会在你愣神的时候从你的指尖溜走。\n\n仿佛避开守卫出逃的囚犯，仿佛透过缝隙射入的阳光。\n\n今年的五一假期，武汉的阳光十分强烈，但温度并不高，是让人很舒服的那种天气，但又给人以预示，夏天显然快要来了。\n\n我很喜欢夏天，现在回想起来也许是因为夏天是成长过程中唯一可以自由自在的季节吧。庐山上的夏天并不热，反而充满着慵懒的感觉。其他地方的夏天虽然普遍地能够被称为酷暑，但酷热之中却又蕴含了随意与激情，透露着狄俄倪索斯的气息，我很喜欢去品尝这种缺乏理性的味道，它会让愣神与发呆变得顺理成章。\n\n这不是我今年第一次感到夏天要来了。我依稀可以记得，度过清明节假期之后的那天，很热。在回汉的路上，高铁里那种通过机器进行流通的空气的味道。呆板，麻木，但每每闻到它我总能想起旅行的过程，想起我四处寻找不同城市中别样的迪厄尼多斯的故事。这种感觉将过去的我和现在的我融为一体，时刻提醒从前的我与现在的我还是同一个人。这种非人的物质不断地通过嗅觉神经冲击你的大脑，一遍又一遍地通过一种缺乏科学与理性的方法强迫你去相信一个没有理性能够论证的哲学命题，强行告诉你你已经惫藾了多久以及你是否将永远以这种状态惫藾下去。\n\n我还能够记得，从学校南二门回寝室的路上，四月的空气显得过于闷热了，给了我一种很不舒服的感觉。仿佛我还在去年的6月，大病初愈在六月的烈阳下回寝室收拾东西回家，我无法形容那是一种什么感觉，大病过后精神似乎由于充裕的休息变得很好，但总给人以一种缺憾的感觉。就像六月的阳光除去酷热以外似乎于我而言少了一层意义，但少的是什么呢？我苦苦思索也得不到答案。也许今年的夏天我能够找到它，也许永远也找不到了，也许它将被我遗忘，这也是大概率的事情了，也许这种缺憾感只是因为我对阳光多了一层理解而产生的错觉，也许缺憾的感觉与获得的感觉纠缠一起令我无法区分。但不论产生这种感觉的机理是什么，我只知道那时的我与现在的我多少有些不同了，也许是去年躺在病床上痛苦地享受闲暇时光以及六月的天气造成的，也许是命中注定在这个年龄会产生的改变，也许只是一个发展趋势附着于生病这件事情上带给我的错觉。我能写下很多种也许，但也许它们没有一个是答案。\n\n从前有一段时间我热衷于探讨“Riddles of Existence”这个永远也不会有答案的形而上学问题，里面有一种支持宿命论的观点。如果加上空间三维与时间一维的话，在我们的生活中每一个结点的坐标都是固定的，一切事情都是一定会发生的。具体的证明方法我已经记不清了，但的的确确，我们的每一秒，每一个抉择，每一个时间节点上发生的事，都在我们愣神之后被一笔带过，被时光这个东西窃取而空。而下一个时间节点当我们思虑从前那些改变的时候，这种思虑又成为了下下个节点思考的素材。我们就如俄罗斯套娃一般死死地在时光的长河之中套下过去的自己，再被将来的自己套下，无穷无尽。而在我们执着于套娃本身的方法时，时光流逝，间断性地带给我们套下过去自己的满足感，告诉我们有些东西从未改变，就如木制娃娃用颜料画上的微笑的脸庞。\n\n五月出头，这几天天气很好，阳光明媚却不毒辣，路边的梧桐树重新长出了夏天最亮眼的绿，我于道中抬头，看见阳光透过树叶缝隙泛起的柔和的光。\n\n我感觉并不舒服，就像感受到了从前的自己。傍晚看到了属于夏天独有的那种灿烂的夕阳，我于美感之中蹉跎，我想起了海，想起了很多年前在海边的自己，想起了自己惫藾的时光，亦美亦不美，两个时空的我产生了龃龉，这是很难用理性判断的事情。\n\n改变是必然的，“往者不可谏，来者犹可追”这句话永远是苍白无力的，但也没有多少人会纠结于改变本身而放弃对这句话的追求。\n\n毕竟，人们在愣神之时总会开始学会欣赏从前的自己，总会以最柔和的方法面对改变所带来的龃龉。\n\n就像俄罗斯套娃，大的娃娃总会接纳小的，尽管它们是那么不同。\n\n> 记于19.5.5  武汉","source":"_posts/改变.md","raw":"---\ntitle: 改变\ndate: 2019-05-04 19:46:58\ntags:\n    - 散文\ncategories:\n    - 随笔\n    - 散文\nfileName: the_change\n---\n时光本身没有魔力，它的奇妙来自于人们很容易愣神。\n\n当你发呆的时候，当你全身心地在做一件事的时候，当你摊在沙发上消磨时光的时候，它总会轻而易举地从你的指尖溜走。“溜”，这是个形容时光已经用烂了的动词，但大可不必对这种形容做一些所谓老生常谈的说教，因为这在汉语中确实用的很妙。\n\n小学生用文字形容时光是一把好手，因为似乎我们的教育自小到大一个很大的主题就是劝人切莫虚度时光。所谓“少壮不努力，老大徒伤悲”也可以视为是对时光的隐喻，这种隐喻隐藏在许许多多与时光本身看似并不相关的事物上，但作为两种状态之间的对比却往往体现出时光的作用来。从这个角度来看，也许本身就没有什么隐喻不隐喻的吧，毕竟活在时光长河里的生物，怎么可能规避的了时光二字呢。如此看来“时光”这两个汉字也着实幸运，明明是人造出的东西，表达的却是一种任何人也捉摸不透却又身在其中的感觉。\n\n现在已经五月份了，其实我也很纳闷怎么就五月份了。我不记得上一次愣神是在什么时候，大概是今年二月？或者是去年的什么时间，或许是十年前？总之现在已经快要接近我生命中的第21个年头了。我在愣神当中曾经说过我才18，也曾经说过我才20，但我现在快满21了。这是一种相当奇妙的感觉，你不知道起点在哪，也无法推算终点何在，你一次又一次的愣神，又一次又一次地回过神来开始思考，可每次回忆起自己上一次的思考，又会发现那不过是无数次愣神递归过程之中的某个终止条件。人的一生永远是在愣神中度过，而时光却又如此狡猾，永远会在你愣神的时候从你的指尖溜走。\n\n仿佛避开守卫出逃的囚犯，仿佛透过缝隙射入的阳光。\n\n今年的五一假期，武汉的阳光十分强烈，但温度并不高，是让人很舒服的那种天气，但又给人以预示，夏天显然快要来了。\n\n我很喜欢夏天，现在回想起来也许是因为夏天是成长过程中唯一可以自由自在的季节吧。庐山上的夏天并不热，反而充满着慵懒的感觉。其他地方的夏天虽然普遍地能够被称为酷暑，但酷热之中却又蕴含了随意与激情，透露着狄俄倪索斯的气息，我很喜欢去品尝这种缺乏理性的味道，它会让愣神与发呆变得顺理成章。\n\n这不是我今年第一次感到夏天要来了。我依稀可以记得，度过清明节假期之后的那天，很热。在回汉的路上，高铁里那种通过机器进行流通的空气的味道。呆板，麻木，但每每闻到它我总能想起旅行的过程，想起我四处寻找不同城市中别样的迪厄尼多斯的故事。这种感觉将过去的我和现在的我融为一体，时刻提醒从前的我与现在的我还是同一个人。这种非人的物质不断地通过嗅觉神经冲击你的大脑，一遍又一遍地通过一种缺乏科学与理性的方法强迫你去相信一个没有理性能够论证的哲学命题，强行告诉你你已经惫藾了多久以及你是否将永远以这种状态惫藾下去。\n\n我还能够记得，从学校南二门回寝室的路上，四月的空气显得过于闷热了，给了我一种很不舒服的感觉。仿佛我还在去年的6月，大病初愈在六月的烈阳下回寝室收拾东西回家，我无法形容那是一种什么感觉，大病过后精神似乎由于充裕的休息变得很好，但总给人以一种缺憾的感觉。就像六月的阳光除去酷热以外似乎于我而言少了一层意义，但少的是什么呢？我苦苦思索也得不到答案。也许今年的夏天我能够找到它，也许永远也找不到了，也许它将被我遗忘，这也是大概率的事情了，也许这种缺憾感只是因为我对阳光多了一层理解而产生的错觉，也许缺憾的感觉与获得的感觉纠缠一起令我无法区分。但不论产生这种感觉的机理是什么，我只知道那时的我与现在的我多少有些不同了，也许是去年躺在病床上痛苦地享受闲暇时光以及六月的天气造成的，也许是命中注定在这个年龄会产生的改变，也许只是一个发展趋势附着于生病这件事情上带给我的错觉。我能写下很多种也许，但也许它们没有一个是答案。\n\n从前有一段时间我热衷于探讨“Riddles of Existence”这个永远也不会有答案的形而上学问题，里面有一种支持宿命论的观点。如果加上空间三维与时间一维的话，在我们的生活中每一个结点的坐标都是固定的，一切事情都是一定会发生的。具体的证明方法我已经记不清了，但的的确确，我们的每一秒，每一个抉择，每一个时间节点上发生的事，都在我们愣神之后被一笔带过，被时光这个东西窃取而空。而下一个时间节点当我们思虑从前那些改变的时候，这种思虑又成为了下下个节点思考的素材。我们就如俄罗斯套娃一般死死地在时光的长河之中套下过去的自己，再被将来的自己套下，无穷无尽。而在我们执着于套娃本身的方法时，时光流逝，间断性地带给我们套下过去自己的满足感，告诉我们有些东西从未改变，就如木制娃娃用颜料画上的微笑的脸庞。\n\n五月出头，这几天天气很好，阳光明媚却不毒辣，路边的梧桐树重新长出了夏天最亮眼的绿，我于道中抬头，看见阳光透过树叶缝隙泛起的柔和的光。\n\n我感觉并不舒服，就像感受到了从前的自己。傍晚看到了属于夏天独有的那种灿烂的夕阳，我于美感之中蹉跎，我想起了海，想起了很多年前在海边的自己，想起了自己惫藾的时光，亦美亦不美，两个时空的我产生了龃龉，这是很难用理性判断的事情。\n\n改变是必然的，“往者不可谏，来者犹可追”这句话永远是苍白无力的，但也没有多少人会纠结于改变本身而放弃对这句话的追求。\n\n毕竟，人们在愣神之时总会开始学会欣赏从前的自己，总会以最柔和的方法面对改变所带来的龃龉。\n\n就像俄罗斯套娃，大的娃娃总会接纳小的，尽管它们是那么不同。\n\n> 记于19.5.5  武汉","slug":"改变","published":1,"updated":"2020-03-12T18:41:04.872Z","_id":"ck7ouzrmp0004lwetc9mwhjor","comments":1,"layout":"post","photos":[],"link":"","content":"<p>时光本身没有魔力，它的奇妙来自于人们很容易愣神。</p>\n<p>当你发呆的时候，当你全身心地在做一件事的时候，当你摊在沙发上消磨时光的时候，它总会轻而易举地从你的指尖溜走。“溜”，这是个形容时光已经用烂了的动词，但大可不必对这种形容做一些所谓老生常谈的说教，因为这在汉语中确实用的很妙。</p>\n<p>小学生用文字形容时光是一把好手，因为似乎我们的教育自小到大一个很大的主题就是劝人切莫虚度时光。所谓“少壮不努力，老大徒伤悲”也可以视为是对时光的隐喻，这种隐喻隐藏在许许多多与时光本身看似并不相关的事物上，但作为两种状态之间的对比却往往体现出时光的作用来。从这个角度来看，也许本身就没有什么隐喻不隐喻的吧，毕竟活在时光长河里的生物，怎么可能规避的了时光二字呢。如此看来“时光”这两个汉字也着实幸运，明明是人造出的东西，表达的却是一种任何人也捉摸不透却又身在其中的感觉。</p>\n<p>现在已经五月份了，其实我也很纳闷怎么就五月份了。我不记得上一次愣神是在什么时候，大概是今年二月？或者是去年的什么时间，或许是十年前？总之现在已经快要接近我生命中的第21个年头了。我在愣神当中曾经说过我才18，也曾经说过我才20，但我现在快满21了。这是一种相当奇妙的感觉，你不知道起点在哪，也无法推算终点何在，你一次又一次的愣神，又一次又一次地回过神来开始思考，可每次回忆起自己上一次的思考，又会发现那不过是无数次愣神递归过程之中的某个终止条件。人的一生永远是在愣神中度过，而时光却又如此狡猾，永远会在你愣神的时候从你的指尖溜走。</p>\n<p>仿佛避开守卫出逃的囚犯，仿佛透过缝隙射入的阳光。</p>\n<p>今年的五一假期，武汉的阳光十分强烈，但温度并不高，是让人很舒服的那种天气，但又给人以预示，夏天显然快要来了。</p>\n<p>我很喜欢夏天，现在回想起来也许是因为夏天是成长过程中唯一可以自由自在的季节吧。庐山上的夏天并不热，反而充满着慵懒的感觉。其他地方的夏天虽然普遍地能够被称为酷暑，但酷热之中却又蕴含了随意与激情，透露着狄俄倪索斯的气息，我很喜欢去品尝这种缺乏理性的味道，它会让愣神与发呆变得顺理成章。</p>\n<p>这不是我今年第一次感到夏天要来了。我依稀可以记得，度过清明节假期之后的那天，很热。在回汉的路上，高铁里那种通过机器进行流通的空气的味道。呆板，麻木，但每每闻到它我总能想起旅行的过程，想起我四处寻找不同城市中别样的迪厄尼多斯的故事。这种感觉将过去的我和现在的我融为一体，时刻提醒从前的我与现在的我还是同一个人。这种非人的物质不断地通过嗅觉神经冲击你的大脑，一遍又一遍地通过一种缺乏科学与理性的方法强迫你去相信一个没有理性能够论证的哲学命题，强行告诉你你已经惫藾了多久以及你是否将永远以这种状态惫藾下去。</p>\n<p>我还能够记得，从学校南二门回寝室的路上，四月的空气显得过于闷热了，给了我一种很不舒服的感觉。仿佛我还在去年的6月，大病初愈在六月的烈阳下回寝室收拾东西回家，我无法形容那是一种什么感觉，大病过后精神似乎由于充裕的休息变得很好，但总给人以一种缺憾的感觉。就像六月的阳光除去酷热以外似乎于我而言少了一层意义，但少的是什么呢？我苦苦思索也得不到答案。也许今年的夏天我能够找到它，也许永远也找不到了，也许它将被我遗忘，这也是大概率的事情了，也许这种缺憾感只是因为我对阳光多了一层理解而产生的错觉，也许缺憾的感觉与获得的感觉纠缠一起令我无法区分。但不论产生这种感觉的机理是什么，我只知道那时的我与现在的我多少有些不同了，也许是去年躺在病床上痛苦地享受闲暇时光以及六月的天气造成的，也许是命中注定在这个年龄会产生的改变，也许只是一个发展趋势附着于生病这件事情上带给我的错觉。我能写下很多种也许，但也许它们没有一个是答案。</p>\n<p>从前有一段时间我热衷于探讨“Riddles of Existence”这个永远也不会有答案的形而上学问题，里面有一种支持宿命论的观点。如果加上空间三维与时间一维的话，在我们的生活中每一个结点的坐标都是固定的，一切事情都是一定会发生的。具体的证明方法我已经记不清了，但的的确确，我们的每一秒，每一个抉择，每一个时间节点上发生的事，都在我们愣神之后被一笔带过，被时光这个东西窃取而空。而下一个时间节点当我们思虑从前那些改变的时候，这种思虑又成为了下下个节点思考的素材。我们就如俄罗斯套娃一般死死地在时光的长河之中套下过去的自己，再被将来的自己套下，无穷无尽。而在我们执着于套娃本身的方法时，时光流逝，间断性地带给我们套下过去自己的满足感，告诉我们有些东西从未改变，就如木制娃娃用颜料画上的微笑的脸庞。</p>\n<p>五月出头，这几天天气很好，阳光明媚却不毒辣，路边的梧桐树重新长出了夏天最亮眼的绿，我于道中抬头，看见阳光透过树叶缝隙泛起的柔和的光。</p>\n<p>我感觉并不舒服，就像感受到了从前的自己。傍晚看到了属于夏天独有的那种灿烂的夕阳，我于美感之中蹉跎，我想起了海，想起了很多年前在海边的自己，想起了自己惫藾的时光，亦美亦不美，两个时空的我产生了龃龉，这是很难用理性判断的事情。</p>\n<p>改变是必然的，“往者不可谏，来者犹可追”这句话永远是苍白无力的，但也没有多少人会纠结于改变本身而放弃对这句话的追求。</p>\n<p>毕竟，人们在愣神之时总会开始学会欣赏从前的自己，总会以最柔和的方法面对改变所带来的龃龉。</p>\n<p>就像俄罗斯套娃，大的娃娃总会接纳小的，尽管它们是那么不同。</p>\n<blockquote>\n<p>记于19.5.5  武汉</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>时光本身没有魔力，它的奇妙来自于人们很容易愣神。</p>\n<p>当你发呆的时候，当你全身心地在做一件事的时候，当你摊在沙发上消磨时光的时候，它总会轻而易举地从你的指尖溜走。“溜”，这是个形容时光已经用烂了的动词，但大可不必对这种形容做一些所谓老生常谈的说教，因为这在汉语中确实用的很妙。</p>\n<p>小学生用文字形容时光是一把好手，因为似乎我们的教育自小到大一个很大的主题就是劝人切莫虚度时光。所谓“少壮不努力，老大徒伤悲”也可以视为是对时光的隐喻，这种隐喻隐藏在许许多多与时光本身看似并不相关的事物上，但作为两种状态之间的对比却往往体现出时光的作用来。从这个角度来看，也许本身就没有什么隐喻不隐喻的吧，毕竟活在时光长河里的生物，怎么可能规避的了时光二字呢。如此看来“时光”这两个汉字也着实幸运，明明是人造出的东西，表达的却是一种任何人也捉摸不透却又身在其中的感觉。</p>\n<p>现在已经五月份了，其实我也很纳闷怎么就五月份了。我不记得上一次愣神是在什么时候，大概是今年二月？或者是去年的什么时间，或许是十年前？总之现在已经快要接近我生命中的第21个年头了。我在愣神当中曾经说过我才18，也曾经说过我才20，但我现在快满21了。这是一种相当奇妙的感觉，你不知道起点在哪，也无法推算终点何在，你一次又一次的愣神，又一次又一次地回过神来开始思考，可每次回忆起自己上一次的思考，又会发现那不过是无数次愣神递归过程之中的某个终止条件。人的一生永远是在愣神中度过，而时光却又如此狡猾，永远会在你愣神的时候从你的指尖溜走。</p>\n<p>仿佛避开守卫出逃的囚犯，仿佛透过缝隙射入的阳光。</p>\n<p>今年的五一假期，武汉的阳光十分强烈，但温度并不高，是让人很舒服的那种天气，但又给人以预示，夏天显然快要来了。</p>\n<p>我很喜欢夏天，现在回想起来也许是因为夏天是成长过程中唯一可以自由自在的季节吧。庐山上的夏天并不热，反而充满着慵懒的感觉。其他地方的夏天虽然普遍地能够被称为酷暑，但酷热之中却又蕴含了随意与激情，透露着狄俄倪索斯的气息，我很喜欢去品尝这种缺乏理性的味道，它会让愣神与发呆变得顺理成章。</p>\n<p>这不是我今年第一次感到夏天要来了。我依稀可以记得，度过清明节假期之后的那天，很热。在回汉的路上，高铁里那种通过机器进行流通的空气的味道。呆板，麻木，但每每闻到它我总能想起旅行的过程，想起我四处寻找不同城市中别样的迪厄尼多斯的故事。这种感觉将过去的我和现在的我融为一体，时刻提醒从前的我与现在的我还是同一个人。这种非人的物质不断地通过嗅觉神经冲击你的大脑，一遍又一遍地通过一种缺乏科学与理性的方法强迫你去相信一个没有理性能够论证的哲学命题，强行告诉你你已经惫藾了多久以及你是否将永远以这种状态惫藾下去。</p>\n<p>我还能够记得，从学校南二门回寝室的路上，四月的空气显得过于闷热了，给了我一种很不舒服的感觉。仿佛我还在去年的6月，大病初愈在六月的烈阳下回寝室收拾东西回家，我无法形容那是一种什么感觉，大病过后精神似乎由于充裕的休息变得很好，但总给人以一种缺憾的感觉。就像六月的阳光除去酷热以外似乎于我而言少了一层意义，但少的是什么呢？我苦苦思索也得不到答案。也许今年的夏天我能够找到它，也许永远也找不到了，也许它将被我遗忘，这也是大概率的事情了，也许这种缺憾感只是因为我对阳光多了一层理解而产生的错觉，也许缺憾的感觉与获得的感觉纠缠一起令我无法区分。但不论产生这种感觉的机理是什么，我只知道那时的我与现在的我多少有些不同了，也许是去年躺在病床上痛苦地享受闲暇时光以及六月的天气造成的，也许是命中注定在这个年龄会产生的改变，也许只是一个发展趋势附着于生病这件事情上带给我的错觉。我能写下很多种也许，但也许它们没有一个是答案。</p>\n<p>从前有一段时间我热衷于探讨“Riddles of Existence”这个永远也不会有答案的形而上学问题，里面有一种支持宿命论的观点。如果加上空间三维与时间一维的话，在我们的生活中每一个结点的坐标都是固定的，一切事情都是一定会发生的。具体的证明方法我已经记不清了，但的的确确，我们的每一秒，每一个抉择，每一个时间节点上发生的事，都在我们愣神之后被一笔带过，被时光这个东西窃取而空。而下一个时间节点当我们思虑从前那些改变的时候，这种思虑又成为了下下个节点思考的素材。我们就如俄罗斯套娃一般死死地在时光的长河之中套下过去的自己，再被将来的自己套下，无穷无尽。而在我们执着于套娃本身的方法时，时光流逝，间断性地带给我们套下过去自己的满足感，告诉我们有些东西从未改变，就如木制娃娃用颜料画上的微笑的脸庞。</p>\n<p>五月出头，这几天天气很好，阳光明媚却不毒辣，路边的梧桐树重新长出了夏天最亮眼的绿，我于道中抬头，看见阳光透过树叶缝隙泛起的柔和的光。</p>\n<p>我感觉并不舒服，就像感受到了从前的自己。傍晚看到了属于夏天独有的那种灿烂的夕阳，我于美感之中蹉跎，我想起了海，想起了很多年前在海边的自己，想起了自己惫藾的时光，亦美亦不美，两个时空的我产生了龃龉，这是很难用理性判断的事情。</p>\n<p>改变是必然的，“往者不可谏，来者犹可追”这句话永远是苍白无力的，但也没有多少人会纠结于改变本身而放弃对这句话的追求。</p>\n<p>毕竟，人们在愣神之时总会开始学会欣赏从前的自己，总会以最柔和的方法面对改变所带来的龃龉。</p>\n<p>就像俄罗斯套娃，大的娃娃总会接纳小的，尽管它们是那么不同。</p>\n<blockquote>\n<p>记于19.5.5  武汉</p>\n</blockquote>\n"},{"title":"雨与晴","date":"2019-03-20T11:13:06.000Z","fileName":"the_rain_and_the_shine","_content":"今天早上8点半左右，我像往常一样上三楼接水，在楼梯间的窗户向外瞥，围墙外的篮球场的塑胶地上湿了一片。围墙略显斑驳，是本来就不那么年经了的建筑被大水冲洗过后的一种自然姿态，带着一些年迈的美丽。\n\n没事的时候我很喜欢透过这里向外望，但这次不是，因为我的眼光里多少带了些形色匆匆的味道。被水洗过的塑胶绿和围墙这边的绿色的植物，与其说是我看到了她们，不如说是她们的颜色主宰了那一秒内我的视神经。现在窗外夜色朦胧，是置身城市里很少见到的那种纯粹的墨蓝，纯粹的证明也并非是我自情自愿，是因为我抬头能看到星星。\n\n不对，在东边的天空，还有一轮月亮，也许足够用皓月来形容。\n\n我并不像一些下午一样，站在那个楼梯间的窗户面前带着什么思考或者纯粹性的发呆向外望。清晨的我手里拿着洗面奶和脸盆毛巾经过了那里，我现在也只能以上帝的姿态回顾那个瞬间我究竟是迈开了左腿还是右腿，脑子中想的究竟是窗外的绿还是一些什么别的乱七八糟的东西。这到底是模拟，有一万种不同的可能，这花了我很长的时间，沉淀了许多情感。我并不喜欢喝白酒，事实上也的确没怎么喝过，但我觉得所谓后劲，就是如此吧。在张开嘴的瞬间，咽下的酒精会让觥筹交错之后的你花上几个小时醉在自己的梦里，所需要的契机也只是热闹向平淡的自然转变。\n\n雨是早就要下的了，昨晚睡前就已经开始了，但我并没有太在意，只记得它很大，像是夏天的雷雨，全然不同于上个月那阴雨绵绵的枯燥，倒是热烈洒脱，干脆利落。昨晚12点左右的时候，我躺在床上，感觉很累很累。我不知道“累”这种感觉的产生是基于什么，也许是某种激素，那我觉得自己想必是有些内分泌失调了。我并没有什么能过得去的让我感觉到疲惫的理由，但我就是很累。这一个月来我思考了很多，这个多也只是相对于我某种程度上放弃思考开始自欺欺人的那大段时间而已，只是一个正常水平，就像冬末的阴雨只要地球还在正常的轨道上，只要太阳不出什么问题，就一定会消散一样。阴天和晴天，只不过是地球表面的两种正常状态，但其微小的不同，的确会对地表的生物造成一些困扰，这我想是肯定的。\n\n半夜的时候我被雨声惊醒了，这很少见，除去呼噜声与钟表的滴答，我是很难被别的声音惊醒的。半夜醒来的人对时间是没法计数的，一切理性和情感都处于朦胧的状态，也许这道朦胧会在大脑留下沙滩上城堡般的记忆，也许不会。但我却记得，那算是雨后的阴沉的味道吧。翠绿的世界总是会给人一种虽然充满生气但却脆弱稚嫩的感觉，在这脆弱稚嫩之下不知纯粹为何物，但被大雨蹂躏过后的植物的墨绿虽然给人阴沉郁结之感，却又十足纯粹。淅沥小雨下的天空阴沉混沌，赶时间的人会痛恨这种“欲擒故纵”般的感觉，世界并不是在接受清洗，而是在把污浊借雨水之名平摊到各地，也许是为了遮瑕，但却使原来作为“瑜”的部分都消失殆尽，纯粹一词无处藏身。而大雨磅礴的天空也许更是阴沉可怖，但却给人以十足的命令感，再赶时间你也不会为“走”或“不走”而面露难色，只有在屋檐下耐心等待。等待的过程也许是生活中难得的纯粹的仪式，因为静坐听雨的意境在当代实在是少的可怜，就连裤腿被大雨淋湿的触感都变得弥足珍贵。\n\n雨后，空气中会有清爽的纯粹，世界接受清洗之后，无论是借着日光还是霓虹，路面倒映出的射影，是世界的另一种面貌，印着纯粹二字。\n\n但我并不知道纯粹为何物，它是最狡诈多变的一个词。在我有不同的情感时，思考不同的问题时，面临不同的选择时，它是我最后的仪仗，是我追求的东西，尽管为此我注定没有方向。\n\n我不知道小时候庐山上的蓝天白云与我的无忧无虑算不算纯粹，也许无忧无虑只是假象，是人丢掉一段时间内的大部分记忆的一种自然而然的感受。我马上21了，在我以1开头的年岁里，我的确很少看到记忆中的那种蓝天了。在熬过二月的阴雨之后，最近武汉的天气晴空万里，就连今天早上阴沉潮湿的墨绿在我中午再一次以相同的视角观望时都已经消失殆尽了，但蓝天上仍然有一层阴霾，蓝的并不纯粹，而我已经习惯了这种蓝，并且也开始用湛蓝形容它。没事的时候我也会在教五门口的广场上休息，或者在万林艺术馆的天台上坐着以一个不至于让太阳抢去风头的角度欣赏蓝天，我为这种天气而欣喜，但内心中又似乎对一场夏天的雷雨更为期待。我不知道是因为暴雨真的能够洗刷世界，还是因为我仅仅期待那雨声给我带来的视觉、听觉再到触觉的全方位的模拟，能够带我回到小时候，或者说情感更加纯粹的年岁。\n\n现在外面天很黑，皓月当空，高悬东方，在宿舍门口我看到有人在用微单拍摄。我很遗憾单反不在身边，同时又很庆幸单反不在身边。我尝试用手机对这个美丽的夜色进行记录，但最后发现它只属于我的眼睛，属于在我记忆中注定渐渐消散的那一块区域。我很快会把昨晚的雨、清晨的绿以及东方的月这些印记着今天的一切特征给淡忘，因为未来还会有无数个相同的日子，武大的樱花会一直开下去，我的路，我的追求，我的思考也不会停下，至死方休。时不时想想上一个今天自己对纯粹的定义，也许会发现愚蠢，也许会发现美丽，但更重要的是找到不同日子纯粹变化的轨迹。文字的意义总会是虚无缥缈的，但追求的东西如果套用一个词来表达的话我认为总不至于两个时间的方向会是南北迥异的吧。\n\n说句实话，我想家了。\n\n人只有在意识到自己脆弱的时候才会顿生羁旅之情。\n\n但也从来没有用羁旅表达自己状态的人会停下脚步。\n\n> 记于 19.3.20 武汉","source":"_posts/雨与晴.md","raw":"---\ntitle: 雨与晴\ndate: 2019-03-20 19:13:06\ntags:\n    - 日志\n    - 散文\ncategories:\n    - 随笔\n    - 散文\nfileName: the_rain_and_the_shine\n---\n今天早上8点半左右，我像往常一样上三楼接水，在楼梯间的窗户向外瞥，围墙外的篮球场的塑胶地上湿了一片。围墙略显斑驳，是本来就不那么年经了的建筑被大水冲洗过后的一种自然姿态，带着一些年迈的美丽。\n\n没事的时候我很喜欢透过这里向外望，但这次不是，因为我的眼光里多少带了些形色匆匆的味道。被水洗过的塑胶绿和围墙这边的绿色的植物，与其说是我看到了她们，不如说是她们的颜色主宰了那一秒内我的视神经。现在窗外夜色朦胧，是置身城市里很少见到的那种纯粹的墨蓝，纯粹的证明也并非是我自情自愿，是因为我抬头能看到星星。\n\n不对，在东边的天空，还有一轮月亮，也许足够用皓月来形容。\n\n我并不像一些下午一样，站在那个楼梯间的窗户面前带着什么思考或者纯粹性的发呆向外望。清晨的我手里拿着洗面奶和脸盆毛巾经过了那里，我现在也只能以上帝的姿态回顾那个瞬间我究竟是迈开了左腿还是右腿，脑子中想的究竟是窗外的绿还是一些什么别的乱七八糟的东西。这到底是模拟，有一万种不同的可能，这花了我很长的时间，沉淀了许多情感。我并不喜欢喝白酒，事实上也的确没怎么喝过，但我觉得所谓后劲，就是如此吧。在张开嘴的瞬间，咽下的酒精会让觥筹交错之后的你花上几个小时醉在自己的梦里，所需要的契机也只是热闹向平淡的自然转变。\n\n雨是早就要下的了，昨晚睡前就已经开始了，但我并没有太在意，只记得它很大，像是夏天的雷雨，全然不同于上个月那阴雨绵绵的枯燥，倒是热烈洒脱，干脆利落。昨晚12点左右的时候，我躺在床上，感觉很累很累。我不知道“累”这种感觉的产生是基于什么，也许是某种激素，那我觉得自己想必是有些内分泌失调了。我并没有什么能过得去的让我感觉到疲惫的理由，但我就是很累。这一个月来我思考了很多，这个多也只是相对于我某种程度上放弃思考开始自欺欺人的那大段时间而已，只是一个正常水平，就像冬末的阴雨只要地球还在正常的轨道上，只要太阳不出什么问题，就一定会消散一样。阴天和晴天，只不过是地球表面的两种正常状态，但其微小的不同，的确会对地表的生物造成一些困扰，这我想是肯定的。\n\n半夜的时候我被雨声惊醒了，这很少见，除去呼噜声与钟表的滴答，我是很难被别的声音惊醒的。半夜醒来的人对时间是没法计数的，一切理性和情感都处于朦胧的状态，也许这道朦胧会在大脑留下沙滩上城堡般的记忆，也许不会。但我却记得，那算是雨后的阴沉的味道吧。翠绿的世界总是会给人一种虽然充满生气但却脆弱稚嫩的感觉，在这脆弱稚嫩之下不知纯粹为何物，但被大雨蹂躏过后的植物的墨绿虽然给人阴沉郁结之感，却又十足纯粹。淅沥小雨下的天空阴沉混沌，赶时间的人会痛恨这种“欲擒故纵”般的感觉，世界并不是在接受清洗，而是在把污浊借雨水之名平摊到各地，也许是为了遮瑕，但却使原来作为“瑜”的部分都消失殆尽，纯粹一词无处藏身。而大雨磅礴的天空也许更是阴沉可怖，但却给人以十足的命令感，再赶时间你也不会为“走”或“不走”而面露难色，只有在屋檐下耐心等待。等待的过程也许是生活中难得的纯粹的仪式，因为静坐听雨的意境在当代实在是少的可怜，就连裤腿被大雨淋湿的触感都变得弥足珍贵。\n\n雨后，空气中会有清爽的纯粹，世界接受清洗之后，无论是借着日光还是霓虹，路面倒映出的射影，是世界的另一种面貌，印着纯粹二字。\n\n但我并不知道纯粹为何物，它是最狡诈多变的一个词。在我有不同的情感时，思考不同的问题时，面临不同的选择时，它是我最后的仪仗，是我追求的东西，尽管为此我注定没有方向。\n\n我不知道小时候庐山上的蓝天白云与我的无忧无虑算不算纯粹，也许无忧无虑只是假象，是人丢掉一段时间内的大部分记忆的一种自然而然的感受。我马上21了，在我以1开头的年岁里，我的确很少看到记忆中的那种蓝天了。在熬过二月的阴雨之后，最近武汉的天气晴空万里，就连今天早上阴沉潮湿的墨绿在我中午再一次以相同的视角观望时都已经消失殆尽了，但蓝天上仍然有一层阴霾，蓝的并不纯粹，而我已经习惯了这种蓝，并且也开始用湛蓝形容它。没事的时候我也会在教五门口的广场上休息，或者在万林艺术馆的天台上坐着以一个不至于让太阳抢去风头的角度欣赏蓝天，我为这种天气而欣喜，但内心中又似乎对一场夏天的雷雨更为期待。我不知道是因为暴雨真的能够洗刷世界，还是因为我仅仅期待那雨声给我带来的视觉、听觉再到触觉的全方位的模拟，能够带我回到小时候，或者说情感更加纯粹的年岁。\n\n现在外面天很黑，皓月当空，高悬东方，在宿舍门口我看到有人在用微单拍摄。我很遗憾单反不在身边，同时又很庆幸单反不在身边。我尝试用手机对这个美丽的夜色进行记录，但最后发现它只属于我的眼睛，属于在我记忆中注定渐渐消散的那一块区域。我很快会把昨晚的雨、清晨的绿以及东方的月这些印记着今天的一切特征给淡忘，因为未来还会有无数个相同的日子，武大的樱花会一直开下去，我的路，我的追求，我的思考也不会停下，至死方休。时不时想想上一个今天自己对纯粹的定义，也许会发现愚蠢，也许会发现美丽，但更重要的是找到不同日子纯粹变化的轨迹。文字的意义总会是虚无缥缈的，但追求的东西如果套用一个词来表达的话我认为总不至于两个时间的方向会是南北迥异的吧。\n\n说句实话，我想家了。\n\n人只有在意识到自己脆弱的时候才会顿生羁旅之情。\n\n但也从来没有用羁旅表达自己状态的人会停下脚步。\n\n> 记于 19.3.20 武汉","slug":"雨与晴","published":1,"updated":"2020-03-12T18:41:04.873Z","_id":"ck7ouzrms0006lwetgqye2h5m","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天早上8点半左右，我像往常一样上三楼接水，在楼梯间的窗户向外瞥，围墙外的篮球场的塑胶地上湿了一片。围墙略显斑驳，是本来就不那么年经了的建筑被大水冲洗过后的一种自然姿态，带着一些年迈的美丽。</p>\n<p>没事的时候我很喜欢透过这里向外望，但这次不是，因为我的眼光里多少带了些形色匆匆的味道。被水洗过的塑胶绿和围墙这边的绿色的植物，与其说是我看到了她们，不如说是她们的颜色主宰了那一秒内我的视神经。现在窗外夜色朦胧，是置身城市里很少见到的那种纯粹的墨蓝，纯粹的证明也并非是我自情自愿，是因为我抬头能看到星星。</p>\n<p>不对，在东边的天空，还有一轮月亮，也许足够用皓月来形容。</p>\n<p>我并不像一些下午一样，站在那个楼梯间的窗户面前带着什么思考或者纯粹性的发呆向外望。清晨的我手里拿着洗面奶和脸盆毛巾经过了那里，我现在也只能以上帝的姿态回顾那个瞬间我究竟是迈开了左腿还是右腿，脑子中想的究竟是窗外的绿还是一些什么别的乱七八糟的东西。这到底是模拟，有一万种不同的可能，这花了我很长的时间，沉淀了许多情感。我并不喜欢喝白酒，事实上也的确没怎么喝过，但我觉得所谓后劲，就是如此吧。在张开嘴的瞬间，咽下的酒精会让觥筹交错之后的你花上几个小时醉在自己的梦里，所需要的契机也只是热闹向平淡的自然转变。</p>\n<p>雨是早就要下的了，昨晚睡前就已经开始了，但我并没有太在意，只记得它很大，像是夏天的雷雨，全然不同于上个月那阴雨绵绵的枯燥，倒是热烈洒脱，干脆利落。昨晚12点左右的时候，我躺在床上，感觉很累很累。我不知道“累”这种感觉的产生是基于什么，也许是某种激素，那我觉得自己想必是有些内分泌失调了。我并没有什么能过得去的让我感觉到疲惫的理由，但我就是很累。这一个月来我思考了很多，这个多也只是相对于我某种程度上放弃思考开始自欺欺人的那大段时间而已，只是一个正常水平，就像冬末的阴雨只要地球还在正常的轨道上，只要太阳不出什么问题，就一定会消散一样。阴天和晴天，只不过是地球表面的两种正常状态，但其微小的不同，的确会对地表的生物造成一些困扰，这我想是肯定的。</p>\n<p>半夜的时候我被雨声惊醒了，这很少见，除去呼噜声与钟表的滴答，我是很难被别的声音惊醒的。半夜醒来的人对时间是没法计数的，一切理性和情感都处于朦胧的状态，也许这道朦胧会在大脑留下沙滩上城堡般的记忆，也许不会。但我却记得，那算是雨后的阴沉的味道吧。翠绿的世界总是会给人一种虽然充满生气但却脆弱稚嫩的感觉，在这脆弱稚嫩之下不知纯粹为何物，但被大雨蹂躏过后的植物的墨绿虽然给人阴沉郁结之感，却又十足纯粹。淅沥小雨下的天空阴沉混沌，赶时间的人会痛恨这种“欲擒故纵”般的感觉，世界并不是在接受清洗，而是在把污浊借雨水之名平摊到各地，也许是为了遮瑕，但却使原来作为“瑜”的部分都消失殆尽，纯粹一词无处藏身。而大雨磅礴的天空也许更是阴沉可怖，但却给人以十足的命令感，再赶时间你也不会为“走”或“不走”而面露难色，只有在屋檐下耐心等待。等待的过程也许是生活中难得的纯粹的仪式，因为静坐听雨的意境在当代实在是少的可怜，就连裤腿被大雨淋湿的触感都变得弥足珍贵。</p>\n<p>雨后，空气中会有清爽的纯粹，世界接受清洗之后，无论是借着日光还是霓虹，路面倒映出的射影，是世界的另一种面貌，印着纯粹二字。</p>\n<p>但我并不知道纯粹为何物，它是最狡诈多变的一个词。在我有不同的情感时，思考不同的问题时，面临不同的选择时，它是我最后的仪仗，是我追求的东西，尽管为此我注定没有方向。</p>\n<p>我不知道小时候庐山上的蓝天白云与我的无忧无虑算不算纯粹，也许无忧无虑只是假象，是人丢掉一段时间内的大部分记忆的一种自然而然的感受。我马上21了，在我以1开头的年岁里，我的确很少看到记忆中的那种蓝天了。在熬过二月的阴雨之后，最近武汉的天气晴空万里，就连今天早上阴沉潮湿的墨绿在我中午再一次以相同的视角观望时都已经消失殆尽了，但蓝天上仍然有一层阴霾，蓝的并不纯粹，而我已经习惯了这种蓝，并且也开始用湛蓝形容它。没事的时候我也会在教五门口的广场上休息，或者在万林艺术馆的天台上坐着以一个不至于让太阳抢去风头的角度欣赏蓝天，我为这种天气而欣喜，但内心中又似乎对一场夏天的雷雨更为期待。我不知道是因为暴雨真的能够洗刷世界，还是因为我仅仅期待那雨声给我带来的视觉、听觉再到触觉的全方位的模拟，能够带我回到小时候，或者说情感更加纯粹的年岁。</p>\n<p>现在外面天很黑，皓月当空，高悬东方，在宿舍门口我看到有人在用微单拍摄。我很遗憾单反不在身边，同时又很庆幸单反不在身边。我尝试用手机对这个美丽的夜色进行记录，但最后发现它只属于我的眼睛，属于在我记忆中注定渐渐消散的那一块区域。我很快会把昨晚的雨、清晨的绿以及东方的月这些印记着今天的一切特征给淡忘，因为未来还会有无数个相同的日子，武大的樱花会一直开下去，我的路，我的追求，我的思考也不会停下，至死方休。时不时想想上一个今天自己对纯粹的定义，也许会发现愚蠢，也许会发现美丽，但更重要的是找到不同日子纯粹变化的轨迹。文字的意义总会是虚无缥缈的，但追求的东西如果套用一个词来表达的话我认为总不至于两个时间的方向会是南北迥异的吧。</p>\n<p>说句实话，我想家了。</p>\n<p>人只有在意识到自己脆弱的时候才会顿生羁旅之情。</p>\n<p>但也从来没有用羁旅表达自己状态的人会停下脚步。</p>\n<blockquote>\n<p>记于 19.3.20 武汉</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>今天早上8点半左右，我像往常一样上三楼接水，在楼梯间的窗户向外瞥，围墙外的篮球场的塑胶地上湿了一片。围墙略显斑驳，是本来就不那么年经了的建筑被大水冲洗过后的一种自然姿态，带着一些年迈的美丽。</p>\n<p>没事的时候我很喜欢透过这里向外望，但这次不是，因为我的眼光里多少带了些形色匆匆的味道。被水洗过的塑胶绿和围墙这边的绿色的植物，与其说是我看到了她们，不如说是她们的颜色主宰了那一秒内我的视神经。现在窗外夜色朦胧，是置身城市里很少见到的那种纯粹的墨蓝，纯粹的证明也并非是我自情自愿，是因为我抬头能看到星星。</p>\n<p>不对，在东边的天空，还有一轮月亮，也许足够用皓月来形容。</p>\n<p>我并不像一些下午一样，站在那个楼梯间的窗户面前带着什么思考或者纯粹性的发呆向外望。清晨的我手里拿着洗面奶和脸盆毛巾经过了那里，我现在也只能以上帝的姿态回顾那个瞬间我究竟是迈开了左腿还是右腿，脑子中想的究竟是窗外的绿还是一些什么别的乱七八糟的东西。这到底是模拟，有一万种不同的可能，这花了我很长的时间，沉淀了许多情感。我并不喜欢喝白酒，事实上也的确没怎么喝过，但我觉得所谓后劲，就是如此吧。在张开嘴的瞬间，咽下的酒精会让觥筹交错之后的你花上几个小时醉在自己的梦里，所需要的契机也只是热闹向平淡的自然转变。</p>\n<p>雨是早就要下的了，昨晚睡前就已经开始了，但我并没有太在意，只记得它很大，像是夏天的雷雨，全然不同于上个月那阴雨绵绵的枯燥，倒是热烈洒脱，干脆利落。昨晚12点左右的时候，我躺在床上，感觉很累很累。我不知道“累”这种感觉的产生是基于什么，也许是某种激素，那我觉得自己想必是有些内分泌失调了。我并没有什么能过得去的让我感觉到疲惫的理由，但我就是很累。这一个月来我思考了很多，这个多也只是相对于我某种程度上放弃思考开始自欺欺人的那大段时间而已，只是一个正常水平，就像冬末的阴雨只要地球还在正常的轨道上，只要太阳不出什么问题，就一定会消散一样。阴天和晴天，只不过是地球表面的两种正常状态，但其微小的不同，的确会对地表的生物造成一些困扰，这我想是肯定的。</p>\n<p>半夜的时候我被雨声惊醒了，这很少见，除去呼噜声与钟表的滴答，我是很难被别的声音惊醒的。半夜醒来的人对时间是没法计数的，一切理性和情感都处于朦胧的状态，也许这道朦胧会在大脑留下沙滩上城堡般的记忆，也许不会。但我却记得，那算是雨后的阴沉的味道吧。翠绿的世界总是会给人一种虽然充满生气但却脆弱稚嫩的感觉，在这脆弱稚嫩之下不知纯粹为何物，但被大雨蹂躏过后的植物的墨绿虽然给人阴沉郁结之感，却又十足纯粹。淅沥小雨下的天空阴沉混沌，赶时间的人会痛恨这种“欲擒故纵”般的感觉，世界并不是在接受清洗，而是在把污浊借雨水之名平摊到各地，也许是为了遮瑕，但却使原来作为“瑜”的部分都消失殆尽，纯粹一词无处藏身。而大雨磅礴的天空也许更是阴沉可怖，但却给人以十足的命令感，再赶时间你也不会为“走”或“不走”而面露难色，只有在屋檐下耐心等待。等待的过程也许是生活中难得的纯粹的仪式，因为静坐听雨的意境在当代实在是少的可怜，就连裤腿被大雨淋湿的触感都变得弥足珍贵。</p>\n<p>雨后，空气中会有清爽的纯粹，世界接受清洗之后，无论是借着日光还是霓虹，路面倒映出的射影，是世界的另一种面貌，印着纯粹二字。</p>\n<p>但我并不知道纯粹为何物，它是最狡诈多变的一个词。在我有不同的情感时，思考不同的问题时，面临不同的选择时，它是我最后的仪仗，是我追求的东西，尽管为此我注定没有方向。</p>\n<p>我不知道小时候庐山上的蓝天白云与我的无忧无虑算不算纯粹，也许无忧无虑只是假象，是人丢掉一段时间内的大部分记忆的一种自然而然的感受。我马上21了，在我以1开头的年岁里，我的确很少看到记忆中的那种蓝天了。在熬过二月的阴雨之后，最近武汉的天气晴空万里，就连今天早上阴沉潮湿的墨绿在我中午再一次以相同的视角观望时都已经消失殆尽了，但蓝天上仍然有一层阴霾，蓝的并不纯粹，而我已经习惯了这种蓝，并且也开始用湛蓝形容它。没事的时候我也会在教五门口的广场上休息，或者在万林艺术馆的天台上坐着以一个不至于让太阳抢去风头的角度欣赏蓝天，我为这种天气而欣喜，但内心中又似乎对一场夏天的雷雨更为期待。我不知道是因为暴雨真的能够洗刷世界，还是因为我仅仅期待那雨声给我带来的视觉、听觉再到触觉的全方位的模拟，能够带我回到小时候，或者说情感更加纯粹的年岁。</p>\n<p>现在外面天很黑，皓月当空，高悬东方，在宿舍门口我看到有人在用微单拍摄。我很遗憾单反不在身边，同时又很庆幸单反不在身边。我尝试用手机对这个美丽的夜色进行记录，但最后发现它只属于我的眼睛，属于在我记忆中注定渐渐消散的那一块区域。我很快会把昨晚的雨、清晨的绿以及东方的月这些印记着今天的一切特征给淡忘，因为未来还会有无数个相同的日子，武大的樱花会一直开下去，我的路，我的追求，我的思考也不会停下，至死方休。时不时想想上一个今天自己对纯粹的定义，也许会发现愚蠢，也许会发现美丽，但更重要的是找到不同日子纯粹变化的轨迹。文字的意义总会是虚无缥缈的，但追求的东西如果套用一个词来表达的话我认为总不至于两个时间的方向会是南北迥异的吧。</p>\n<p>说句实话，我想家了。</p>\n<p>人只有在意识到自己脆弱的时候才会顿生羁旅之情。</p>\n<p>但也从来没有用羁旅表达自己状态的人会停下脚步。</p>\n<blockquote>\n<p>记于 19.3.20 武汉</p>\n</blockquote>\n"},{"title":"Hexo博客部署到腾讯云服务器全流程","date":"2020-03-12T18:48:15.000Z","fileName":"hexo2","_content":"\n部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n\n\nHexo署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n## 部署环境\n\n* 本地环境\n  * Ubuntu 18.04（64bit）\n  * 所需环境：git，Node.js，hexo\n* 服务器环境\n  * 腾讯云（CentOS 7.6 64bit）\n  * 所需环境：git，Nginx\n\n## 服务器配置\n\n### 安装git\n\n安装依赖包：\n\n```\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker\n```\n\n卸载旧版本git（如果服务器自带git太旧的话）\n\n```\ncd /usr/local/src   // 选择文件保存位置\nwget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.19.0.tar.gz   // 下载链接\ntar -zxvf git-2.19.0.tar.gz   // 解压\n```\n\n具体的版本选择可在https://mirrors.edge.kernel.org/pub/software/scm/git/ 查看。\n\n编译安装\n\n```\ncd git-2.19.0   // 进入文件夹\nmake prefix=/usr/local/git all  // 编译源码\nmake prefix=/usr/local/git install  // 安装至 /usr/local/git 路径\n```\n\n之后正常的话`git --version`就可以看到git的版本了，如果在终端输入git没反应，则应该将git的安装位置加入环境变量中。\n\n### 创建git用户\n\n```\nadduser git\npasswd git\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n找到以下内容\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)       ALL\n```\n\n在root的下面添加一行\n\n```\ngit ALL=(ALL) ALL\n```\n\n保存退出后将权限改回来\n\n```\nchmod 400 /etc/sudoers\n```\n\n### 密匙配置\n\n与将本地博客文件连接至GitHub一样，将本地的`id_rsa.pub`复制好，在服务器创建.ssh下的文件，粘贴进去。\n\n```\nsu git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys\n```\n\n修改权限\n\n```\ncd ~\nchmod 600 .ssh/authorzied_keys\nchmod 700 .ssh\n```\n\n### 测试连接\n\n在本地终端输入\n\n```\nssh -v git@SERVER\n```\n\nSERVER为你的服务器的公网地址，在控制台可以找到，如果成功连接说明服务器git配置成功。\n\n### 创建网站根目录\n\n网站根目录就是之后存放博客静态文件与资源的位置，你可以自己挑选位置创建你的根目录，之后再赋予权限。\n\n```\nsu root\nmkdir /home/myblog    # 此目录为网站的根目录\nchown git:git -R /home/myblog\n```\n\n### 安装Nginx\n\n```\nyum install -y nginx    // 安装\nsystemctl start nginx.service     // 启动服务\n```\n\n此时访问**公网ip/80**应该就能看到nginx的初始界面。\n\n### 配置Nginx\n\n使用`nginx -t`查看配置文件位置，一般为`/etc/nginx/nginx.conf`\n\n打开nginx.conf文件，修改配置文件如下\n\n```\nserver {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  www.ziyedy.top;    # 修改为自己的域名\n    root         /home/myblog;    # 修改为网站的根目录\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    \tindex index.html\t# 设置自己的index网页\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n\n```\n\n之后可以使用`nginx -t`检查配置文件中是否有语法错误，之后重启服务即可。\n\n## hexo自动部署\n\n### 建立git裸库\n\n在与文件同一根目录下建立裸库\n\n```\nsu root\ngit init --bare blog.git\n```\n\n这时，`git` 用户的 `~` 目录下就存在一个 `blog.git` 文件夹，可使用 `ls` 命令查看。再修改 `blog.git` 的权限。\n\n```\nchown git:git -R blog.git\n```\n\n### 使用git-hooks同步网站根目录\n\n在这使用的是 `post-receive` 这个钩子，当 `git` 有收发的时候就会调用这个钩子。 在 `blog.git` 裸库的 hooks 文件夹中，新建 `post-receive` 文件。\n\n```\nvim blog.git/hooks/post-receive\n```\n\n填入以下内容，注意myblog应该填入自己的根目录文件名\n\n```\n#!/bin/sh\ngit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f\n```\n\n保存后，赋予该文件可执行权限\n\n```\nchmod +x /home/git/blog.git/hooks/post-receive\n```\n\n### 本地配置\n\n与部署到GitHub相同，在本地博客文件根目录下的`_config.yml` 文件中修改`deploy`设置如下。SERVER为服务器的公网ip，如果不想部署到GitHub了将`github`一行删去即可。\n\n```\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:xxxx/xxxx.github.io.git\n    git1: git@SERVER:/home/git/blog.git \n  branch: master\n```\n\n之后正常配置\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n这是输入你的公网ip即可进入你的博客，要实现域名访问，在你的域名内解析你的公网ip即可。","source":"_posts/Hexo博客部署到腾讯云服务器全流程.md","raw":"---\ntitle: Hexo博客部署到腾讯云服务器全流程\ndate: 2020-03-13 02:48:15\ntags:\n\t- hexo\n\t- 云服务器\ncategories:\n\t- 记录\n\t- hexo\nfileName: hexo2\n---\n\n部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n\n\nHexo署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客https://blog.csdn.net/StaunchKai/article/details/82878928\n\n## 部署环境\n\n* 本地环境\n  * Ubuntu 18.04（64bit）\n  * 所需环境：git，Node.js，hexo\n* 服务器环境\n  * 腾讯云（CentOS 7.6 64bit）\n  * 所需环境：git，Nginx\n\n## 服务器配置\n\n### 安装git\n\n安装依赖包：\n\n```\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker\n```\n\n卸载旧版本git（如果服务器自带git太旧的话）\n\n```\ncd /usr/local/src   // 选择文件保存位置\nwget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.19.0.tar.gz   // 下载链接\ntar -zxvf git-2.19.0.tar.gz   // 解压\n```\n\n具体的版本选择可在https://mirrors.edge.kernel.org/pub/software/scm/git/ 查看。\n\n编译安装\n\n```\ncd git-2.19.0   // 进入文件夹\nmake prefix=/usr/local/git all  // 编译源码\nmake prefix=/usr/local/git install  // 安装至 /usr/local/git 路径\n```\n\n之后正常的话`git --version`就可以看到git的版本了，如果在终端输入git没反应，则应该将git的安装位置加入环境变量中。\n\n### 创建git用户\n\n```\nadduser git\npasswd git\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n找到以下内容\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)       ALL\n```\n\n在root的下面添加一行\n\n```\ngit ALL=(ALL) ALL\n```\n\n保存退出后将权限改回来\n\n```\nchmod 400 /etc/sudoers\n```\n\n### 密匙配置\n\n与将本地博客文件连接至GitHub一样，将本地的`id_rsa.pub`复制好，在服务器创建.ssh下的文件，粘贴进去。\n\n```\nsu git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys\n```\n\n修改权限\n\n```\ncd ~\nchmod 600 .ssh/authorzied_keys\nchmod 700 .ssh\n```\n\n### 测试连接\n\n在本地终端输入\n\n```\nssh -v git@SERVER\n```\n\nSERVER为你的服务器的公网地址，在控制台可以找到，如果成功连接说明服务器git配置成功。\n\n### 创建网站根目录\n\n网站根目录就是之后存放博客静态文件与资源的位置，你可以自己挑选位置创建你的根目录，之后再赋予权限。\n\n```\nsu root\nmkdir /home/myblog    # 此目录为网站的根目录\nchown git:git -R /home/myblog\n```\n\n### 安装Nginx\n\n```\nyum install -y nginx    // 安装\nsystemctl start nginx.service     // 启动服务\n```\n\n此时访问**公网ip/80**应该就能看到nginx的初始界面。\n\n### 配置Nginx\n\n使用`nginx -t`查看配置文件位置，一般为`/etc/nginx/nginx.conf`\n\n打开nginx.conf文件，修改配置文件如下\n\n```\nserver {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  www.ziyedy.top;    # 修改为自己的域名\n    root         /home/myblog;    # 修改为网站的根目录\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    \tindex index.html\t# 设置自己的index网页\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n\n```\n\n之后可以使用`nginx -t`检查配置文件中是否有语法错误，之后重启服务即可。\n\n## hexo自动部署\n\n### 建立git裸库\n\n在与文件同一根目录下建立裸库\n\n```\nsu root\ngit init --bare blog.git\n```\n\n这时，`git` 用户的 `~` 目录下就存在一个 `blog.git` 文件夹，可使用 `ls` 命令查看。再修改 `blog.git` 的权限。\n\n```\nchown git:git -R blog.git\n```\n\n### 使用git-hooks同步网站根目录\n\n在这使用的是 `post-receive` 这个钩子，当 `git` 有收发的时候就会调用这个钩子。 在 `blog.git` 裸库的 hooks 文件夹中，新建 `post-receive` 文件。\n\n```\nvim blog.git/hooks/post-receive\n```\n\n填入以下内容，注意myblog应该填入自己的根目录文件名\n\n```\n#!/bin/sh\ngit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f\n```\n\n保存后，赋予该文件可执行权限\n\n```\nchmod +x /home/git/blog.git/hooks/post-receive\n```\n\n### 本地配置\n\n与部署到GitHub相同，在本地博客文件根目录下的`_config.yml` 文件中修改`deploy`设置如下。SERVER为服务器的公网ip，如果不想部署到GitHub了将`github`一行删去即可。\n\n```\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:xxxx/xxxx.github.io.git\n    git1: git@SERVER:/home/git/blog.git \n  branch: master\n```\n\n之后正常配置\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n这是输入你的公网ip即可进入你的博客，要实现域名访问，在你的域名内解析你的公网ip即可。","slug":"Hexo博客部署到腾讯云服务器全流程","published":1,"updated":"2020-03-13T02:58:55.458Z","_id":"ck7pl7yh100003ojs55rlhy1b","comments":1,"layout":"post","photos":[],"link":"","content":"<p>部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<p>部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<p>Hexo署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<h2 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h2><ul>\n<li>本地环境<ul>\n<li>Ubuntu 18.04（64bit）</li>\n<li>所需环境：git，Node.js，hexo</li>\n</ul>\n</li>\n<li>服务器环境<ul>\n<li>腾讯云（CentOS 7.6 64bit）</li>\n<li>所需环境：git，Nginx</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"服务器配置\"><a href=\"#服务器配置\" class=\"headerlink\" title=\"服务器配置\"></a>服务器配置</h2><h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><p>安装依赖包：</p>\n<pre><code>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker</code></pre><p>卸载旧版本git（如果服务器自带git太旧的话）</p>\n<pre><code>cd /usr/local/src   // 选择文件保存位置\nwget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.19.0.tar.gz   // 下载链接\ntar -zxvf git-2.19.0.tar.gz   // 解压</code></pre><p>具体的版本选择可在<a href=\"https://mirrors.edge.kernel.org/pub/software/scm/git/\" target=\"_blank\" rel=\"noopener\">https://mirrors.edge.kernel.org/pub/software/scm/git/</a> 查看。</p>\n<p>编译安装</p>\n<pre><code>cd git-2.19.0   // 进入文件夹\nmake prefix=/usr/local/git all  // 编译源码\nmake prefix=/usr/local/git install  // 安装至 /usr/local/git 路径</code></pre><p>之后正常的话<code>git --version</code>就可以看到git的版本了，如果在终端输入git没反应，则应该将git的安装位置加入环境变量中。</p>\n<h3 id=\"创建git用户\"><a href=\"#创建git用户\" class=\"headerlink\" title=\"创建git用户\"></a>创建git用户</h3><pre><code>adduser git\npasswd git\nchmod 740 /etc/sudoers\nvim /etc/sudoers</code></pre><p>找到以下内容</p>\n<pre><code>## Allow root to run any commands anywhere\nroot    ALL=(ALL)       ALL</code></pre><p>在root的下面添加一行</p>\n<pre><code>git ALL=(ALL) ALL</code></pre><p>保存退出后将权限改回来</p>\n<pre><code>chmod 400 /etc/sudoers</code></pre><h3 id=\"密匙配置\"><a href=\"#密匙配置\" class=\"headerlink\" title=\"密匙配置\"></a>密匙配置</h3><p>与将本地博客文件连接至GitHub一样，将本地的<code>id_rsa.pub</code>复制好，在服务器创建.ssh下的文件，粘贴进去。</p>\n<pre><code>su git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys</code></pre><p>修改权限</p>\n<pre><code>cd ~\nchmod 600 .ssh/authorzied_keys\nchmod 700 .ssh</code></pre><h3 id=\"测试连接\"><a href=\"#测试连接\" class=\"headerlink\" title=\"测试连接\"></a>测试连接</h3><p>在本地终端输入</p>\n<pre><code>ssh -v git@SERVER</code></pre><p>SERVER为你的服务器的公网地址，在控制台可以找到，如果成功连接说明服务器git配置成功。</p>\n<h3 id=\"创建网站根目录\"><a href=\"#创建网站根目录\" class=\"headerlink\" title=\"创建网站根目录\"></a>创建网站根目录</h3><p>网站根目录就是之后存放博客静态文件与资源的位置，你可以自己挑选位置创建你的根目录，之后再赋予权限。</p>\n<pre><code>su root\nmkdir /home/myblog    # 此目录为网站的根目录\nchown git:git -R /home/myblog</code></pre><h3 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h3><pre><code>yum install -y nginx    // 安装\nsystemctl start nginx.service     // 启动服务</code></pre><p>此时访问<strong>公网ip/80</strong>应该就能看到nginx的初始界面。</p>\n<h3 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h3><p>使用<code>nginx -t</code>查看配置文件位置，一般为<code>/etc/nginx/nginx.conf</code></p>\n<p>打开nginx.conf文件，修改配置文件如下</p>\n<pre><code>server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  www.ziyedy.top;    # 修改为自己的域名\n    root         /home/myblog;    # 修改为网站的根目录\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        index index.html    # 设置自己的index网页\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n</code></pre><p>之后可以使用<code>nginx -t</code>检查配置文件中是否有语法错误，之后重启服务即可。</p>\n<h2 id=\"hexo自动部署\"><a href=\"#hexo自动部署\" class=\"headerlink\" title=\"hexo自动部署\"></a>hexo自动部署</h2><h3 id=\"建立git裸库\"><a href=\"#建立git裸库\" class=\"headerlink\" title=\"建立git裸库\"></a>建立git裸库</h3><p>在与文件同一根目录下建立裸库</p>\n<pre><code>su root\ngit init --bare blog.git</code></pre><p>这时，<code>git</code> 用户的 <code>~</code> 目录下就存在一个 <code>blog.git</code> 文件夹，可使用 <code>ls</code> 命令查看。再修改 <code>blog.git</code> 的权限。</p>\n<pre><code>chown git:git -R blog.git</code></pre><h3 id=\"使用git-hooks同步网站根目录\"><a href=\"#使用git-hooks同步网站根目录\" class=\"headerlink\" title=\"使用git-hooks同步网站根目录\"></a>使用git-hooks同步网站根目录</h3><p>在这使用的是 <code>post-receive</code> 这个钩子，当 <code>git</code> 有收发的时候就会调用这个钩子。 在 <code>blog.git</code> 裸库的 hooks 文件夹中，新建 <code>post-receive</code> 文件。</p>\n<pre><code>vim blog.git/hooks/post-receive</code></pre><p>填入以下内容，注意myblog应该填入自己的根目录文件名</p>\n<pre><code>#!/bin/sh\ngit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f</code></pre><p>保存后，赋予该文件可执行权限</p>\n<pre><code>chmod +x /home/git/blog.git/hooks/post-receive</code></pre><h3 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h3><p>与部署到GitHub相同，在本地博客文件根目录下的<code>_config.yml</code> 文件中修改<code>deploy</code>设置如下。SERVER为服务器的公网ip，如果不想部署到GitHub了将<code>github</code>一行删去即可。</p>\n<pre><code>deploy:\n  type: git\n  repo:\n    github: git@github.com:xxxx/xxxx.github.io.git\n    git1: git@SERVER:/home/git/blog.git \n  branch: master</code></pre><p>之后正常配置</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><p>这是输入你的公网ip即可进入你的博客，要实现域名访问，在你的域名内解析你的公网ip即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<p>部署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<p>Hexo署到Githubpage上在国内访问速度很慢，正好前段时间买了一个腾讯云服务器，就干脆把hexo生成的博客文件直接放到云上跑算了，本文记录将hexo同时部署到GitHub与腾讯云服务器的过程。参考博客<a href=\"https://blog.csdn.net/StaunchKai/article/details/82878928\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/StaunchKai/article/details/82878928</a></p>\n<h2 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h2><ul>\n<li>本地环境<ul>\n<li>Ubuntu 18.04（64bit）</li>\n<li>所需环境：git，Node.js，hexo</li>\n</ul>\n</li>\n<li>服务器环境<ul>\n<li>腾讯云（CentOS 7.6 64bit）</li>\n<li>所需环境：git，Nginx</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"服务器配置\"><a href=\"#服务器配置\" class=\"headerlink\" title=\"服务器配置\"></a>服务器配置</h2><h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><p>安装依赖包：</p>\n<pre><code>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker</code></pre><p>卸载旧版本git（如果服务器自带git太旧的话）</p>\n<pre><code>cd /usr/local/src   // 选择文件保存位置\nwget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.19.0.tar.gz   // 下载链接\ntar -zxvf git-2.19.0.tar.gz   // 解压</code></pre><p>具体的版本选择可在<a href=\"https://mirrors.edge.kernel.org/pub/software/scm/git/\" target=\"_blank\" rel=\"noopener\">https://mirrors.edge.kernel.org/pub/software/scm/git/</a> 查看。</p>\n<p>编译安装</p>\n<pre><code>cd git-2.19.0   // 进入文件夹\nmake prefix=/usr/local/git all  // 编译源码\nmake prefix=/usr/local/git install  // 安装至 /usr/local/git 路径</code></pre><p>之后正常的话<code>git --version</code>就可以看到git的版本了，如果在终端输入git没反应，则应该将git的安装位置加入环境变量中。</p>\n<h3 id=\"创建git用户\"><a href=\"#创建git用户\" class=\"headerlink\" title=\"创建git用户\"></a>创建git用户</h3><pre><code>adduser git\npasswd git\nchmod 740 /etc/sudoers\nvim /etc/sudoers</code></pre><p>找到以下内容</p>\n<pre><code>## Allow root to run any commands anywhere\nroot    ALL=(ALL)       ALL</code></pre><p>在root的下面添加一行</p>\n<pre><code>git ALL=(ALL) ALL</code></pre><p>保存退出后将权限改回来</p>\n<pre><code>chmod 400 /etc/sudoers</code></pre><h3 id=\"密匙配置\"><a href=\"#密匙配置\" class=\"headerlink\" title=\"密匙配置\"></a>密匙配置</h3><p>与将本地博客文件连接至GitHub一样，将本地的<code>id_rsa.pub</code>复制好，在服务器创建.ssh下的文件，粘贴进去。</p>\n<pre><code>su git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys</code></pre><p>修改权限</p>\n<pre><code>cd ~\nchmod 600 .ssh/authorzied_keys\nchmod 700 .ssh</code></pre><h3 id=\"测试连接\"><a href=\"#测试连接\" class=\"headerlink\" title=\"测试连接\"></a>测试连接</h3><p>在本地终端输入</p>\n<pre><code>ssh -v git@SERVER</code></pre><p>SERVER为你的服务器的公网地址，在控制台可以找到，如果成功连接说明服务器git配置成功。</p>\n<h3 id=\"创建网站根目录\"><a href=\"#创建网站根目录\" class=\"headerlink\" title=\"创建网站根目录\"></a>创建网站根目录</h3><p>网站根目录就是之后存放博客静态文件与资源的位置，你可以自己挑选位置创建你的根目录，之后再赋予权限。</p>\n<pre><code>su root\nmkdir /home/myblog    # 此目录为网站的根目录\nchown git:git -R /home/myblog</code></pre><h3 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h3><pre><code>yum install -y nginx    // 安装\nsystemctl start nginx.service     // 启动服务</code></pre><p>此时访问<strong>公网ip/80</strong>应该就能看到nginx的初始界面。</p>\n<h3 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h3><p>使用<code>nginx -t</code>查看配置文件位置，一般为<code>/etc/nginx/nginx.conf</code></p>\n<p>打开nginx.conf文件，修改配置文件如下</p>\n<pre><code>server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  www.ziyedy.top;    # 修改为自己的域名\n    root         /home/myblog;    # 修改为网站的根目录\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        index index.html    # 设置自己的index网页\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n</code></pre><p>之后可以使用<code>nginx -t</code>检查配置文件中是否有语法错误，之后重启服务即可。</p>\n<h2 id=\"hexo自动部署\"><a href=\"#hexo自动部署\" class=\"headerlink\" title=\"hexo自动部署\"></a>hexo自动部署</h2><h3 id=\"建立git裸库\"><a href=\"#建立git裸库\" class=\"headerlink\" title=\"建立git裸库\"></a>建立git裸库</h3><p>在与文件同一根目录下建立裸库</p>\n<pre><code>su root\ngit init --bare blog.git</code></pre><p>这时，<code>git</code> 用户的 <code>~</code> 目录下就存在一个 <code>blog.git</code> 文件夹，可使用 <code>ls</code> 命令查看。再修改 <code>blog.git</code> 的权限。</p>\n<pre><code>chown git:git -R blog.git</code></pre><h3 id=\"使用git-hooks同步网站根目录\"><a href=\"#使用git-hooks同步网站根目录\" class=\"headerlink\" title=\"使用git-hooks同步网站根目录\"></a>使用git-hooks同步网站根目录</h3><p>在这使用的是 <code>post-receive</code> 这个钩子，当 <code>git</code> 有收发的时候就会调用这个钩子。 在 <code>blog.git</code> 裸库的 hooks 文件夹中，新建 <code>post-receive</code> 文件。</p>\n<pre><code>vim blog.git/hooks/post-receive</code></pre><p>填入以下内容，注意myblog应该填入自己的根目录文件名</p>\n<pre><code>#!/bin/sh\ngit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f</code></pre><p>保存后，赋予该文件可执行权限</p>\n<pre><code>chmod +x /home/git/blog.git/hooks/post-receive</code></pre><h3 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h3><p>与部署到GitHub相同，在本地博客文件根目录下的<code>_config.yml</code> 文件中修改<code>deploy</code>设置如下。SERVER为服务器的公网ip，如果不想部署到GitHub了将<code>github</code>一行删去即可。</p>\n<pre><code>deploy:\n  type: git\n  repo:\n    github: git@github.com:xxxx/xxxx.github.io.git\n    git1: git@SERVER:/home/git/blog.git \n  branch: master</code></pre><p>之后正常配置</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><p>这是输入你的公网ip即可进入你的博客，要实现域名访问，在你的域名内解析你的公网ip即可。</p>\n"},{"title":"Hexo实现多台机器同时编写博客","date":"2020-03-13T03:05:41.000Z","fileName":"hexo3","_content":"\n正常情况下，只在一台电脑上使用hexo编写部署博客非常方便，但多台电脑进行部署就需要云盘等媒介进行md文件的传输了。我的电脑是双系统，因此如果要部署的话还得重启，比较麻烦，因此干脆实现一个博客多设备管理，方便快捷。\n\n实现多设备的博客管理关键就是要实现本地hexo源文件的多台设备传输与修改，首先想到的当然是使用git了。本地的`_config.yml`文件中默认使用`hexo d`进行部署是部署在GitHub相应项目（也就是以用户名命名的博客项目）的`master`分支上的，因此，只需要在同一项目上新建一个存储源文件的分支即可解决问题。\n\n### 创建分支\n\n在已经作为博客本地文件的地方打开终端输入以下命令\n\n```\ngit branch <hexo>\t//hexo处为你想建立的分支的名字\n```\n\n之后在github中博客仓库的`->Settings->Branches->Default branch`下将默认分支改为新建的分支，并保存更新。\n\n### 分支连接本地文件\n\n1. 最简单且有效的方法就是将新建的`hexo`分支`git clone`到本地文件夹内，输入`git branch`即可看到当前分支为`hexo`。\n\n2. 再将之前新建的博客文件复制到以上文件夹中，注意将`themes`文件中隐藏的`.git`文件等与git有关的文件删除，否则主题文件会默认为是整个项目的一个子模块而不被上传到你的GitHub。\n3. 将之前部署生成的`.deploy_git`文件删除，否则由于之前删去了部分原来的git信息部署时有可能会发生错误。\n4. 输入如下命令你的博客的源码分支hexo就建立好了。\n\n```\ngit add .\ngit commit -m \"first push\"\ngit push origin hexo\n```\n\n5. 想在另一台电脑上写博客时。只要确保该电脑安装了hexo所需要的各种环境（再在GitHub上加入ssh密匙），只需要在本地建立一个文件夹将博客源文件`clone`下来即可。而每次更新上传后，在另一台计算机上只需每次使用`git pull`更新一下源文件即可十分方便。\n\n### 其他问题\n\n多机同时管理博客其实就是在一个github仓库的`master`分支存储网页静态文件，在`hexo`分支存储博客源文件。由于hexo进行部署时默认是在`master`分支上部署（`_config.yml`文件中可见），因此部署博客时还是输入以下代码即可\n\n```\nhexo g\nhexo d\n```\n\n同时应该注意的是，这样做会使得源文件开源，不想开源的话可以在github仓库中设置该仓库为private。这样该仓库就不可见但gitpage的功能也使用不了了，所以要怎样做仁者见仁智者见智吧。","source":"_posts/Hexo实现多台机器同时编写博客.md","raw":"---\ntitle: Hexo实现多台机器同时编写博客\ndate: 2020-03-13 11:05:41\ntags:\n\t- hexo\n\t- git\ncategories:\n\t- 记录\n\t- hexo\nfileName: hexo3\n---\n\n正常情况下，只在一台电脑上使用hexo编写部署博客非常方便，但多台电脑进行部署就需要云盘等媒介进行md文件的传输了。我的电脑是双系统，因此如果要部署的话还得重启，比较麻烦，因此干脆实现一个博客多设备管理，方便快捷。\n\n实现多设备的博客管理关键就是要实现本地hexo源文件的多台设备传输与修改，首先想到的当然是使用git了。本地的`_config.yml`文件中默认使用`hexo d`进行部署是部署在GitHub相应项目（也就是以用户名命名的博客项目）的`master`分支上的，因此，只需要在同一项目上新建一个存储源文件的分支即可解决问题。\n\n### 创建分支\n\n在已经作为博客本地文件的地方打开终端输入以下命令\n\n```\ngit branch <hexo>\t//hexo处为你想建立的分支的名字\n```\n\n之后在github中博客仓库的`->Settings->Branches->Default branch`下将默认分支改为新建的分支，并保存更新。\n\n### 分支连接本地文件\n\n1. 最简单且有效的方法就是将新建的`hexo`分支`git clone`到本地文件夹内，输入`git branch`即可看到当前分支为`hexo`。\n\n2. 再将之前新建的博客文件复制到以上文件夹中，注意将`themes`文件中隐藏的`.git`文件等与git有关的文件删除，否则主题文件会默认为是整个项目的一个子模块而不被上传到你的GitHub。\n3. 将之前部署生成的`.deploy_git`文件删除，否则由于之前删去了部分原来的git信息部署时有可能会发生错误。\n4. 输入如下命令你的博客的源码分支hexo就建立好了。\n\n```\ngit add .\ngit commit -m \"first push\"\ngit push origin hexo\n```\n\n5. 想在另一台电脑上写博客时。只要确保该电脑安装了hexo所需要的各种环境（再在GitHub上加入ssh密匙），只需要在本地建立一个文件夹将博客源文件`clone`下来即可。而每次更新上传后，在另一台计算机上只需每次使用`git pull`更新一下源文件即可十分方便。\n\n### 其他问题\n\n多机同时管理博客其实就是在一个github仓库的`master`分支存储网页静态文件，在`hexo`分支存储博客源文件。由于hexo进行部署时默认是在`master`分支上部署（`_config.yml`文件中可见），因此部署博客时还是输入以下代码即可\n\n```\nhexo g\nhexo d\n```\n\n同时应该注意的是，这样做会使得源文件开源，不想开源的话可以在github仓库中设置该仓库为private。这样该仓库就不可见但gitpage的功能也使用不了了，所以要怎样做仁者见仁智者见智吧。","slug":"Hexo实现多台机器同时编写博客","published":1,"updated":"2020-03-13T06:55:00.675Z","_id":"ck7ptrh1a0000ycjsf86v2d8e","comments":1,"layout":"post","photos":[],"link":"","content":"<p>正常情况下，只在一台电脑上使用hexo编写部署博客非常方便，但多台电脑进行部署就需要云盘等媒介进行md文件的传输了。我的电脑是双系统，因此如果要部署的话还得重启，比较麻烦，因此干脆实现一个博客多设备管理，方便快捷。</p>\n<p>实现多设备的博客管理关键就是要实现本地hexo源文件的多台设备传输与修改，首先想到的当然是使用git了。本地的<code>_config.yml</code>文件中默认使用<code>hexo d</code>进行部署是部署在GitHub相应项目（也就是以用户名命名的博客项目）的<code>master</code>分支上的，因此，只需要在同一项目上新建一个存储源文件的分支即可解决问题。</p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>在已经作为博客本地文件的地方打开终端输入以下命令</p>\n<pre><code>git branch &lt;hexo&gt;    //hexo处为你想建立的分支的名字</code></pre><p>之后在github中博客仓库的<code>-&gt;Settings-&gt;Branches-&gt;Default branch</code>下将默认分支改为新建的分支，并保存更新。</p>\n<h3 id=\"分支连接本地文件\"><a href=\"#分支连接本地文件\" class=\"headerlink\" title=\"分支连接本地文件\"></a>分支连接本地文件</h3><ol>\n<li><p>最简单且有效的方法就是将新建的<code>hexo</code>分支<code>git clone</code>到本地文件夹内，输入<code>git branch</code>即可看到当前分支为<code>hexo</code>。</p>\n</li>\n<li><p>再将之前新建的博客文件复制到以上文件夹中，注意将<code>themes</code>文件中隐藏的<code>.git</code>文件等与git有关的文件删除，否则主题文件会默认为是整个项目的一个子模块而不被上传到你的GitHub。</p>\n</li>\n<li><p>将之前部署生成的<code>.deploy_git</code>文件删除，否则由于之前删去了部分原来的git信息部署时有可能会发生错误。</p>\n</li>\n<li><p>输入如下命令你的博客的源码分支hexo就建立好了。</p>\n</li>\n</ol>\n<pre><code>git add .\ngit commit -m &quot;first push&quot;\ngit push origin hexo</code></pre><ol start=\"5\">\n<li>想在另一台电脑上写博客时。只要确保该电脑安装了hexo所需要的各种环境（再在GitHub上加入ssh密匙），只需要在本地建立一个文件夹将博客源文件<code>clone</code>下来即可。而每次更新上传后，在另一台计算机上只需每次使用<code>git pull</code>更新一下源文件即可十分方便。</li>\n</ol>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><p>多机同时管理博客其实就是在一个github仓库的<code>master</code>分支存储网页静态文件，在<code>hexo</code>分支存储博客源文件。由于hexo进行部署时默认是在<code>master</code>分支上部署（<code>_config.yml</code>文件中可见），因此部署博客时还是输入以下代码即可</p>\n<pre><code>hexo g\nhexo d</code></pre><p>同时应该注意的是，这样做会使得源文件开源，不想开源的话可以在github仓库中设置该仓库为private。这样该仓库就不可见但gitpage的功能也使用不了了，所以要怎样做仁者见仁智者见智吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>正常情况下，只在一台电脑上使用hexo编写部署博客非常方便，但多台电脑进行部署就需要云盘等媒介进行md文件的传输了。我的电脑是双系统，因此如果要部署的话还得重启，比较麻烦，因此干脆实现一个博客多设备管理，方便快捷。</p>\n<p>实现多设备的博客管理关键就是要实现本地hexo源文件的多台设备传输与修改，首先想到的当然是使用git了。本地的<code>_config.yml</code>文件中默认使用<code>hexo d</code>进行部署是部署在GitHub相应项目（也就是以用户名命名的博客项目）的<code>master</code>分支上的，因此，只需要在同一项目上新建一个存储源文件的分支即可解决问题。</p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>在已经作为博客本地文件的地方打开终端输入以下命令</p>\n<pre><code>git branch &lt;hexo&gt;    //hexo处为你想建立的分支的名字</code></pre><p>之后在github中博客仓库的<code>-&gt;Settings-&gt;Branches-&gt;Default branch</code>下将默认分支改为新建的分支，并保存更新。</p>\n<h3 id=\"分支连接本地文件\"><a href=\"#分支连接本地文件\" class=\"headerlink\" title=\"分支连接本地文件\"></a>分支连接本地文件</h3><ol>\n<li><p>最简单且有效的方法就是将新建的<code>hexo</code>分支<code>git clone</code>到本地文件夹内，输入<code>git branch</code>即可看到当前分支为<code>hexo</code>。</p>\n</li>\n<li><p>再将之前新建的博客文件复制到以上文件夹中，注意将<code>themes</code>文件中隐藏的<code>.git</code>文件等与git有关的文件删除，否则主题文件会默认为是整个项目的一个子模块而不被上传到你的GitHub。</p>\n</li>\n<li><p>将之前部署生成的<code>.deploy_git</code>文件删除，否则由于之前删去了部分原来的git信息部署时有可能会发生错误。</p>\n</li>\n<li><p>输入如下命令你的博客的源码分支hexo就建立好了。</p>\n</li>\n</ol>\n<pre><code>git add .\ngit commit -m &quot;first push&quot;\ngit push origin hexo</code></pre><ol start=\"5\">\n<li>想在另一台电脑上写博客时。只要确保该电脑安装了hexo所需要的各种环境（再在GitHub上加入ssh密匙），只需要在本地建立一个文件夹将博客源文件<code>clone</code>下来即可。而每次更新上传后，在另一台计算机上只需每次使用<code>git pull</code>更新一下源文件即可十分方便。</li>\n</ol>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><p>多机同时管理博客其实就是在一个github仓库的<code>master</code>分支存储网页静态文件，在<code>hexo</code>分支存储博客源文件。由于hexo进行部署时默认是在<code>master</code>分支上部署（<code>_config.yml</code>文件中可见），因此部署博客时还是输入以下代码即可</p>\n<pre><code>hexo g\nhexo d</code></pre><p>同时应该注意的是，这样做会使得源文件开源，不想开源的话可以在github仓库中设置该仓库为private。这样该仓库就不可见但gitpage的功能也使用不了了，所以要怎样做仁者见仁智者见智吧。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck7oiilkp00047wethvpu22fb","category_id":"ck7oiilkv000c7wet0b8g4zbk","_id":"ck7oiilky000i7wet663ja2ik"},{"post_id":"ck7oiilki00007wet4sv798ly","category_id":"ck7oiilkn00027wet63v4ga6z","_id":"ck7oiill0000p7wet5qazgoti"},{"post_id":"ck7oiilki00007wet4sv798ly","category_id":"ck7oiilky000j7wetgacghjo7","_id":"ck7oiill1000r7wet4d3k29vo"},{"post_id":"ck7oiilkq00057wet50hi0u7r","category_id":"ck7oiilkx000f7wetafejd7g6","_id":"ck7oiill700197wet6fk45fis"},{"post_id":"ck7oiilkq00057wet50hi0u7r","category_id":"ck7oiill400117wet3h7b1huy","_id":"ck7oiill7001a7wet82nj5frh"},{"post_id":"ck7oiilkr00067wet2ypbbz9x","category_id":"ck7oiilkx000f7wetafejd7g6","_id":"ck7oiill8001b7wet5hiucign"},{"post_id":"ck7oiilkr00067wet2ypbbz9x","category_id":"ck7oiill600167wet2je6d4o5","_id":"ck7oiill8001c7wet5n3r6obv"},{"post_id":"ck7ouzrm80001lwetd03x3y6o","category_id":"ck7oiilkn00027wet63v4ga6z","_id":"ck7ouzrmu0008lwetgz0j4cxz"},{"post_id":"ck7ouzrm80001lwetd03x3y6o","category_id":"ck7oiill1000t7wet3nqe7rhw","_id":"ck7ouzrmv000blwetds7fgi3t"},{"post_id":"ck7ouzrmp0004lwetc9mwhjor","category_id":"ck7oiilkn00027wet63v4ga6z","_id":"ck7ouzrmv000dlwet7oxcfx3l"},{"post_id":"ck7ouzrmp0004lwetc9mwhjor","category_id":"ck7oiill0000o7wetg3mw722t","_id":"ck7ouzrmw000flwetdhkn6m5w"},{"post_id":"ck7ouzrms0006lwetgqye2h5m","category_id":"ck7oiilkn00027wet63v4ga6z","_id":"ck7ouzrmw000glwet9jbnc7fr"},{"post_id":"ck7ouzrms0006lwetgqye2h5m","category_id":"ck7oiill0000o7wetg3mw722t","_id":"ck7ouzrmw000hlwetd2jr6jko"},{"post_id":"ck7ouzrky0000lwetaf556yzd","category_id":"ck7ouzrme0002lwet52h090ne","_id":"ck7ouzrmw000ilwetfv3r9u6v"},{"post_id":"ck7ouzrky0000lwetaf556yzd","category_id":"ck7ouzrmv000alwetc0nqhcn0","_id":"ck7ouzrmw000jlwet7th4bufe"},{"post_id":"ck7pl7yh100003ojs55rlhy1b","category_id":"ck7ouzrme0002lwet52h090ne","_id":"ck7pl7yhb00023ojs0mnm69w2"},{"post_id":"ck7pl7yh100003ojs55rlhy1b","category_id":"ck7ouzrmv000alwetc0nqhcn0","_id":"ck7pl7yhc00033ojsgkuo7oxf"},{"post_id":"ck7ptrh1a0000ycjsf86v2d8e","category_id":"ck7ouzrme0002lwet52h090ne","_id":"ck7ptrh1f0003ycjsdbsz4nfe"},{"post_id":"ck7ptrh1a0000ycjsf86v2d8e","category_id":"ck7ouzrmv000alwetc0nqhcn0","_id":"ck7ptrh1f0004ycjs23ntfqu6"}],"PostTag":[{"post_id":"ck7oiilki00007wet4sv798ly","tag_id":"ck7oiilkp00037wetc0a5b61m","_id":"ck7oiilkt00097wetg0q7g9tw"},{"post_id":"ck7oiilkp00047wethvpu22fb","tag_id":"ck7oiilkw000d7wetezg5hd50","_id":"ck7oiilky000h7wetf3ib7wma"},{"post_id":"ck7oiilkq00057wet50hi0u7r","tag_id":"ck7oiilkx000g7wet8xot8ntm","_id":"ck7oiilkz000l7wet60x6ey1h"},{"post_id":"ck7oiilkr00067wet2ypbbz9x","tag_id":"ck7oiilky000k7wet1lnid69y","_id":"ck7oiill1000s7wetfi5d3635"},{"post_id":"ck7oiilkr00067wet2ypbbz9x","tag_id":"ck7oiill0000n7wetdhbo7q4q","_id":"ck7oiill2000u7weths0zbcvi"},{"post_id":"ck7ouzrm80001lwetd03x3y6o","tag_id":"ck7oiilks00087wet2h8v0ow0","_id":"ck7ouzrmr0005lwet35g8fzw5"},{"post_id":"ck7ouzrmp0004lwetc9mwhjor","tag_id":"ck7oiill1000q7wet6eg37ifk","_id":"ck7ouzrmt0007lwetd6834ynx"},{"post_id":"ck7ouzrms0006lwetgqye2h5m","tag_id":"ck7oiill2000v7wet0af18vl5","_id":"ck7ouzrmu0009lwet2a7w32or"},{"post_id":"ck7ouzrms0006lwetgqye2h5m","tag_id":"ck7oiill1000q7wet6eg37ifk","_id":"ck7ouzrmv000clwet8n165n5r"},{"post_id":"ck7ouzrky0000lwetaf556yzd","tag_id":"ck7ouzrmn0003lwet6d42aw1i","_id":"ck7ouzrmw000elwet720f3nrl"},{"post_id":"ck7pl7yh100003ojs55rlhy1b","tag_id":"ck7ouzrmn0003lwet6d42aw1i","_id":"ck7pl7yhc00043ojs3rum7tty"},{"post_id":"ck7pl7yh100003ojs55rlhy1b","tag_id":"ck7pl7yh700013ojsflkrdz50","_id":"ck7pl7yhd00053ojs78543e8g"},{"post_id":"ck7ptrh1a0000ycjsf86v2d8e","tag_id":"ck7ouzrmn0003lwet6d42aw1i","_id":"ck7ptrh1f0001ycjsfyba2ngn"},{"post_id":"ck7ptrh1a0000ycjsf86v2d8e","tag_id":"ck7oiilkx000g7wet8xot8ntm","_id":"ck7ptrh1f0002ycjsbznh7anh"}],"Tag":[{"name":"剧评","_id":"ck7oiilkp00037wetc0a5b61m"},{"name":"杂文","_id":"ck7oiilks00087wet2h8v0ow0"},{"name":"二叉树","_id":"ck7oiilkw000d7wetezg5hd50"},{"name":"git","_id":"ck7oiilkx000g7wet8xot8ntm"},{"name":"latex","_id":"ck7oiilky000k7wet1lnid69y"},{"name":"论文","_id":"ck7oiill0000n7wetdhbo7q4q"},{"name":"散文","_id":"ck7oiill1000q7wet6eg37ifk"},{"name":"日志","_id":"ck7oiill2000v7wet0af18vl5"},{"name":"hexo","_id":"ck7ouzrmn0003lwet6d42aw1i"},{"name":"云服务器","_id":"ck7pl7yh700013ojsflkrdz50"}]}}